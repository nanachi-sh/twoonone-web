{"version":3,"file":"js/785.4ca810ff.js","mappings":"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","sources":["webpack://uno-web/./src/commons/twoonone/utils.ts","webpack://uno-web/./node_modules/js-base64/base64.mjs","webpack://uno-web/./src/commons/utils/utils.ts","webpack://uno-web/./src/views/RoomDetailViewAsync.vue?65c1","webpack://uno-web/./src/views/RoomDetailViewAsync.vue","webpack://uno-web/./src/views/RoomDetailViewAsync.vue?1119","webpack://uno-web/./src/views/RoomDetailView.vue?2121","webpack://uno-web/./src/views/RoomDetailView.vue","webpack://uno-web/./src/views/RoomDetailView.vue?17e4"],"sourcesContent":["import { twoonone } from \"@/protos/proto\";\r\n\r\nconst RoomStage2Str = (stage: twoonone.RoomStage) => {\r\n    switch (stage) {\r\n        case twoonone.RoomStage.ROOM_STAGE_WAITTING_START:\r\n            return '等待开始'\r\n        case twoonone.RoomStage.ROOM_STAGE_SENDING_CARD:\r\n            return '游戏中'\r\n        case twoonone.RoomStage.ROOM_STAGE_ROB_LANDOWNERING:\r\n            return '游戏中'\r\n        default:\r\n            return '未知状态'\r\n    }\r\n}\r\n\r\nconst Role2Str = (action: twoonone.Role) => {\r\n    switch (action) {\r\n        case twoonone.Role.ROLE_FARMER:\r\n            return '农民'\r\n        case twoonone.Role.ROLE_LANDOWNER:\r\n            return '地主'\r\n        case twoonone.Role.ROLE_UNKNOWN:\r\n            return '无'\r\n    }\r\n}\r\n\r\nconst CommonErrorNotice = (e: twoonone.api.Error):string => {\r\n    switch (e) {\r\n        case twoonone.api.Error.ERROR_UNKNOWN:\r\n            return '未知错误'\r\n        case twoonone.api.Error.ERROR_UNDEFINED:\r\n            return '未知错误'\r\n        case twoonone.api.Error.ERROR_INVALID_ARGUMENT:\r\n            return '异常输入范围，未知错误'\r\n        case twoonone.api.Error.ERROR_NO_AUTH:\r\n            return '鉴权失败，可能是未登录账号'\r\n        case twoonone.api.Error.ERROR_USER_NO_EXIST:\r\n            return '用户不存在'\r\n        case twoonone.api.Error.ERROR_USER_INCOMPLETE:\r\n            return '用户信息不完整'\r\n        case twoonone.api.Error.ERROR_USER_EXISTED:\r\n            return '用户已存在'\r\n        case twoonone.api.Error.ERROR_ROOM_FULL:\r\n            return '房间已满'\r\n        case twoonone.api.Error.ERROR_ROOM_NO_EXIST:\r\n            return '房间不存在'\r\n        case twoonone.api.Error.ERROR_ROOM_EXIST_PLAYER:\r\n            return '你已在房间内'\r\n        case twoonone.api.Error.ERROR_ROOM_NO_EXIST_PLAYER:\r\n            return '你不在房间内'\r\n        case twoonone.api.Error.ERROR_ROOM_NO_ROB_LANDOWNERING:\r\n            return '房间还未到抢地主阶段'\r\n        case twoonone.api.Error.ERROR_ROOM_NO_SENDING_CARD:\r\n            return '房间还未到出牌阶段'\r\n        case twoonone.api.Error.ERROR_PLAYER_CARD_NO_EXIST:\r\n            return '你的手牌不足'\r\n        case twoonone.api.Error.ERROR_PLAYER_NO_OPERATOR:\r\n            return '还未轮到你操作'\r\n        case twoonone.api.Error.ERROR_PLAYER_NO_EXIST:\r\n            return '玩家不存在'\r\n        case twoonone.api.Error.ERROR_PLAYER_ALREADY_GET_DALIY_COIN:\r\n            return '你已领取过每日豆子'\r\n        case twoonone.api.Error.ERROR_ROOM_NO_FULL:\r\n            return '房间还未满'\r\n        case twoonone.api.Error.ERROR_ROOM_STARTED:\r\n            return '房间已开始游戏'\r\n        case twoonone.api.Error.ERROR_ROOM_NO_ROB_LANDOWNER:\r\n            return '没有人抢地主'\r\n        case twoonone.api.Error.ERROR_SEND_CARD_TYPE_UNKNOWN:\r\n            return '你的牌类型未知'\r\n        case twoonone.api.Error.ERROR_SEND_CARD_TYPE_NE_LAST_CARD_TYPE:\r\n            return '你的牌类型与上一轮的不符'\r\n        case twoonone.api.Error.ERROR_SEND_CARD_CONTINUOUS_NE_LAST_CARD_CONTINUOUS:\r\n            return '你的牌连续数与上一轮的不同'\r\n        case twoonone.api.Error.ERROR_SEND_CARD_SIZE_LE_LAST_CARD_SIZE:\r\n            return '你的牌比不过上一轮的大小'\r\n        case twoonone.api.Error.ERROR_PLAYER_EXISTED_A_ROOM:\r\n            return '你已在一个房间内'\r\n        case twoonone.api.Error.ERROR_PLAYER_COIN_LT_ROOM_COIN:\r\n            return '你的豆子低于房间底分'\r\n        case twoonone.api.Error.ERROR_PLAYER_IS_ONLY_OPERATOR:\r\n            return '你是唯一一个可以操作的玩家'\r\n    }\r\n}\r\n\r\nexport {\r\n    RoomStage2Str,\r\n    Role2Str,\r\n    CommonErrorNotice\r\n}","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.7';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = typeof btoa === 'function' ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = typeof atob === 'function' ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n","import { fromBase64 } from \"js-base64\"\r\n\r\nconst GetUserId = (access_token: string) => {\r\n    return GetJSON(access_token).federated_claims.user_id as string\r\n}\r\n\r\nconst GetJSON = (access_token: string) => {\r\n    const j_raw = fromBase64(\r\n        access_token\r\n        .split('.')[1]\r\n    )\r\n    return JSON.parse(j_raw)\r\n}\r\n\r\nexport {\r\n    GetUserId,\r\n    GetJSON\r\n}","import { withAsyncContext as _withAsyncContext, defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, isRef as _isRef, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, renderList as _renderList, Fragment as _Fragment, normalizeStyle as _normalizeStyle, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { key: 1 }\nconst _hoisted_4 = { key: 1 }\nconst _hoisted_5 = [\"id\", \"is_rtl\"]\nconst _hoisted_6 = { key: 0 }\nconst _hoisted_7 = { key: 1 }\n\nimport { ASSETS_URL, GetTimeSec, LoginUser, PageBack, RandomString, Rooms } from '@/commons/Global';\r\nimport { ExitRoom, GetRoom, JoinRoom, NoRobLandowner, NoSendCard, RobLandowner, RoomEvent, SendCard, StartRoom } from '@/commons/twoonone/call';\r\nimport { CommonErrorNotice, Role2Str, RoomEventFilter } from '@/commons/twoonone/utils';\r\nimport { GetUserId } from '@/commons/utils/utils';\r\nimport BaseDialog from '@/components/BaseDialog.vue';\r\nimport { twoonone } from '@/protos/proto';\r\nimport { x64 } from 'crypto-js';\r\nimport { ElButton, ElButtonGroup, ElCard, ElCol, ElContainer, ElDescriptions, ElDivider, ElFooter, ElHeader, ElIcon, ElImage, ElMain, ElNotification, ElRow, ElSpace, ElText, ElDescriptionsItem } from 'element-plus';\r\nimport { onMounted, reactive, ref, watch } from 'vue';\r\n\r\nconst notice_interval = 20 //ms\r\n\r\nconst small = 648\r\n\r\nconst enum card_size {\r\n    normal,\r\n    mini\r\n}\r\n\r\ninterface CardExtra {\r\n    card: twoonone.ICard\r\n    select: boolean\r\n}\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'RoomDetailViewAsync',\n  props: {\n    room_hash: {}\n  },\n  async setup(__props: any) {\n\nlet __temp: any, __restore: any\n\r\n/* eslint-disable */\r\nconst props = __props\r\n\r\nconst [dl_body,dl_display] = [ref(''),ref(false)]\r\nconst initalize = async() => {\r\n    await room_update()\r\n}\r\n\r\nconst notice = async (msg: string, position: \"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\" = 'top-left', type: \"error\" | \"success\" | \"warning\" | \"info\" = 'info') => {\r\n    setTimeout(() => {\r\n        ElNotification({\r\n            title: \"提示\",\r\n            message: msg,\r\n            position: position,\r\n            type: type\r\n        })\r\n    }, notice_interval);\r\n}\r\n\r\nconst display_update = () => {\r\n    removeEventListener('resize', players_card_display)\r\n    players_card_display()\r\n    addEventListener('resize', players_card_display)\r\n    \r\n    removeEventListener('resize', last_card_display)\r\n    last_card_display()\r\n    addEventListener('resize', last_card_display)\r\n}\r\n\r\nconst room_update = async () => {\r\n    // 获取桌信息并更新\r\n    const resp = await GetRoom(twoonone.GetRoomRequest.create({room_hash: props.room_hash}))\r\n    if (typeof resp === 'number') {\r\n        switch (resp) {\r\n            default:\r\n                notice(CommonErrorNotice(resp), undefined, 'error')\r\n        }\r\n        console.error(resp)\r\n        return\r\n    }\r\n    const ret = resp.room_info!\r\n    ret.self?.extra?.hand_cards?.sort((a, b) => a.number! - b.number!)\r\n    Object.assign(room, resp.room_info!)\r\n    if (mounted.value) display_update()\r\n}\r\n\r\nconst exit_action = async () => {\r\n    const resp = await ExitRoom(twoonone.ExitRoomRequest.create({\r\n        room_hash: props.room_hash,\r\n    }))\r\n    if (typeof resp === 'number') {\r\n        notice(CommonErrorNotice(resp), undefined, 'error')\r\n        console.error(resp)\r\n        return\r\n    }\r\n    // PageBack()\r\n}\r\n\r\nconst join_action = async () => {\r\n    const resp = await JoinRoom(twoonone.ExitRoomRequest.create({\r\n        room_hash: props.room_hash,\r\n    }))\r\n    if (typeof resp === 'number') {\r\n        notice(CommonErrorNotice(resp), undefined, 'error')\r\n        console.error(resp)\r\n        return\r\n    }\r\n    await room_update()\r\n}\r\n\r\nconst start_action = async () => {\r\n    if (room.player_infos?.length !== 3) {\r\n        dl_body.value = '桌内玩家数未满'\r\n        dl_display.value = true\r\n        return\r\n    }\r\n    const resp = await StartRoom(twoonone.StartRoomRequest.create({room_hash: props.room_hash}))\r\n    if (typeof resp === 'number') {\r\n        notice(CommonErrorNotice(resp), undefined, 'error')\r\n        console.error(resp)\r\n        return\r\n    }\r\n}\r\n\r\nconst robLandowner_action = async () => {\r\n    const resp = await RobLandowner(twoonone.RobLandownerRequest.create({room_hash: room.hash}))\r\n    if (typeof resp === 'number') {\r\n        switch (resp) {\r\n            case twoonone.api.Error.ERROR_ROOM_NO_ROB_LANDOWNER:\r\n                break\r\n            default:\r\n                notice(CommonErrorNotice(resp), undefined, 'error')\r\n        }\r\n        console.error(resp)\r\n        return\r\n    }\r\n}\r\n\r\nconst noRobLandowner_action = async () => {\r\n    const resp = await NoRobLandowner(twoonone.NoRobLandownerRequest.create({room_hash: room.hash}))\r\n    if (typeof resp === 'number') {\r\n        switch (resp) {\r\n            case twoonone.api.Error.ERROR_ROOM_NO_ROB_LANDOWNER:\r\n                break\r\n            default:\r\n                notice(CommonErrorNotice(resp), undefined, 'error')\r\n        }\r\n        console.error(resp)\r\n        return\r\n    }\r\n}\r\n\r\nconst sendCard_action = async (cards: twoonone.ICard[]) => {\r\n    if (cards.length === 0) return\r\n    clear_selected_cards()\r\n    const resp = await SendCard(twoonone.SendCardRequest.create({room_hash: room.hash, sendcards: cards}))\r\n    if (typeof resp === 'number') {\r\n        notice(CommonErrorNotice(resp), undefined, 'error')\r\n        console.error(resp)\r\n        return\r\n    }\r\n}\r\n\r\nconst noSendCard_action = async () => {\r\n    clear_selected_cards()\r\n    const resp = await NoSendCard(twoonone.NoSendCardRequest.create({room_hash: room.hash}))\r\n    if (typeof resp === 'number') {\r\n        notice(CommonErrorNotice(resp), undefined, 'error')\r\n        console.error(resp)\r\n        return\r\n    }\r\n}\r\n\r\nconst players_card_display = () => {\r\n    // 其他玩家\r\n    // if (room.player_infos) {\r\n    //     for (const [i, p] of room.player_infos.filter(v => {\r\n    //         if (v.user?.id === room.self?.user?.id) return false\r\n    //         return true\r\n    //     }).entries()) {\r\n    //         const cards:twoonone.ICard[] = []\r\n    //         cards.push({number: twoonone.Card.Number.A})\r\n    //         for (let n = 0; n < (p.table?.cards_length ?? 0);n++) {\r\n    //             cards.push({number: twoonone.Card.Number.UNKNOWN})\r\n    //         }\r\n    //         cards.push({number: twoonone.Card.Number.A})\r\n    //         cards.push({number: twoonone.Card.Number.JOKER})\r\n            \r\n    //         display_cards(cards, `svg_${p.user?.id}_cards`, {\r\n    //             self: false,\r\n    //             r2l: ((i & 1) === 1),\r\n    //             size: card_size.mini\r\n    //         })\r\n    //     }\r\n    // }\r\n    // 自己\r\n    if (room.self) {\r\n        const size = window.innerWidth <= small ? card_size.mini : card_size.normal\r\n        const cards = room.self.extra?.hand_cards\r\n        if (!cards) return\r\n        const footer = document.getElementById('footer')\r\n        if (footer === null) return\r\n        const w = Number(window.getComputedStyle(footer).width.replace('px', ''))*0.98\r\n        const h = Number(window.getComputedStyle(footer).height.replace('px', ''))\r\n        display_cards(cards, `svg_self_cards`, {\r\n            width: w,\r\n            height: h,\r\n            self: true,\r\n            r2l: false,\r\n            size: size\r\n        })\r\n    }\r\n}\r\n\r\nconst clear_last_card_display = () => {\r\n    if (!room.player_infos) return\r\n    for (const v of room.player_infos) {\r\n        const parent = document.getElementById(`svg_${v.user?.id}_send_cards`)\r\n        if (!parent) continue\r\n        for (const v of parent.children) {\r\n            parent.removeChild(v)\r\n        }\r\n    }\r\n    const self = document.getElementById('svg_self_send_cards')\r\n    if (!self) return\r\n    for (const v of self.children) {\r\n        self.removeChild(v)\r\n    }\r\n}\r\n\r\nconst last_card_display = () => {\r\n    const last = room.sendcards?.at(room.sendcards.length-1)\r\n    if (!last) return\r\n    if (last.sender_info?.user?.id === room.self?.user?.id) {\r\n        clear_last_card_display()\r\n        display_cards(last.sendcards!, `svg_self_send_cards`, {\r\n            self: false,\r\n            r2l: false,\r\n            size: card_size.mini\r\n        })\r\n        return\r\n    }\r\n    let r2l = false\r\n    for (const v of room.player_infos!.filter(v => {\r\n            if (v.user?.id === room.self?.user?.id) return false\r\n            return true\r\n        })) {\r\n        const parent = document.getElementById(`svg_${v.user?.id}_send_cards`)\r\n        if (parent) {\r\n            if (last.sender_info?.user?.id === v.user?.id) {\r\n                r2l = parent.getAttribute('is_rtl') === 'true'\r\n            }\r\n        }\r\n    }\r\n\r\n    clear_last_card_display()\r\n    display_cards(last.sendcards!, `svg_${last.sender_info!.user!.id!}_send_cards`, {\r\n        self: false,\r\n        r2l: r2l,\r\n        size: card_size.mini\r\n    })\r\n}\r\n\r\nconst get_selected_cards = ():twoonone.ICard[] => {\r\n    const svg = document.getElementById('svg_self_cards')?.children.item(0)\r\n    if (!svg) return []\r\n    const cards: twoonone.ICard[] = []\r\n    for (const use of svg.children) {\r\n        if (use.getAttribute('card_selected') === null) continue\r\n        const id = use.getAttribute('xlink:href')?.split('#').at(1)\r\n        if (id === undefined) continue\r\n        const c = id2card(id)\r\n        if (c === null) continue\r\n        cards.push(c)\r\n    }\r\n    return cards\r\n}\r\n\r\nconst clear_selected_cards = () => {\r\n    const svg = document.getElementById('svg_self_cards')?.children.item(0)\r\n    if (!svg) return\r\n    for (const v of svg.children) {\r\n        if (v.getAttribute('card_selected') === null) continue\r\n        const me = new MouseEvent('mousedown', {\r\n            buttons: 1\r\n        })\r\n        v.dispatchEvent(me)\r\n    }\r\n}\r\n\r\nconst room_event_update = async () => {\r\n    const stream = await RoomEvent()\r\n    if (typeof stream === 'number') {\r\n        console.error(stream)\r\n        return\r\n    }\r\n    ws = stream\r\n}\r\n\r\nconst room_event_listen = async () => {\r\n    if (!ws) return\r\n    for await (const resp of ws) {\r\n        const er = resp\r\n        console.log(resp)\r\n        if (er.RoblandownerIntoSendingcard) {\r\n            const event = er.RoblandownerIntoSendingcard as twoonone.RoomEventResponse.RobLandownerIntoSendingCard\r\n            notice(`${event.sendcarder_info?.user?.name} 当上了地主`)\r\n            await room_update()\r\n        } else if (er.RoblandownerContinuousRob) {\r\n            const event = er.RoblandownerContinuousRob as twoonone.RoomEventResponse.RobLandownerContinuousRob\r\n            notice(`连抢地主！当前倍率：${event.multiple}`)\r\n        } else if (er.SendcardSpringNotice) {\r\n            const event = er.SendcardSpringNotice as twoonone.RoomEventResponse.SendCardSpringNotice\r\n            notice(`春天！${event.sendcarder_info?.user?.name} 拿下了春天，当前倍率：${event.multiple}`)\r\n        } else if (er.SendcardBoomNotice) {\r\n            const event = er.SendcardBoomNotice as twoonone.RoomEventResponse.SendCardKingBoomNotice\r\n            notice(`炸弹！${event.sendcarder_info?.user?.name} 打出了炸弹，当前倍率：${event.multiple}`)\r\n        } else if (er.SendcardKingboomNotice) {\r\n            const event = er.SendcardKingboomNotice as twoonone.RoomEventResponse.SendCardKingBoomNotice\r\n            notice(`王炸！${event.sendcarder_info?.user?.name} 打出了王炸，当前倍率：${event.multiple}`)\r\n        } else if (er.GameFinish) {\r\n            const event = er.GameFinish as twoonone.RoomEventResponse.GameFinish\r\n            await room_update()\r\n            notice(`游戏结束，${Role2Str(event.Winner)} 获胜`)\r\n        } else if (er.SendcardCardnumberNotice) {\r\n            const event = er.SendcardCardnumberNotice as twoonone.RoomEventResponse.SendCardCardNumberNotice\r\n            notice(`${event.notice_target_info?.user?.name} 就剩 ${event.number} 张牌了！`)\r\n        } else if (er.RoomJoinPlayer) {\r\n            const event = er.RoomJoinPlayer as twoonone.RoomEventResponse.RoomJoinPlayer\r\n            room.player_infos = event.player_infos\r\n            notice(`${event.joiner_info?.user?.name} 加入了房间`)\r\n        } else if (er.RoomExitPlayer) {\r\n            const event = er.RoomExitPlayer as twoonone.RoomEventResponse.RoomExitPlayer\r\n            room.player_infos = event.player_infos\r\n            notice(`${event.leaver_info?.user?.name} 离开了房间`)\r\n        } else if (er.RoomStarted) {\r\n            const event = er.RoomStarted as twoonone.RoomEventResponse.RoomStarted\r\n            let msg = ''\r\n            msg += '游戏开始'\r\n            if (event.next_operator_info?.user?.id === room.self?.user?.id) {\r\n                msg += `，从你开始抢地主`\r\n            } else {\r\n                msg += `，从 ${event.next_operator_info?.user?.name} 开始抢地主`\r\n            }\r\n            notice(msg)\r\n            await room_update()\r\n            display_update()\r\n        } else if (er.RoomRobLandowner) {\r\n            const event = er.RoomRobLandowner as twoonone.RoomEventResponse.RoomRobLandowner\r\n            await room_update()\r\n            let msg = ''\r\n            if (event.operator_info?.user?.id !== room.self?.user?.id) {\r\n                msg = `${event.operator_info?.user?.name} 选择抢地主`\r\n                if (event.next_operator_info?.user?.id === room.self?.user?.id) {\r\n                    msg += '，轮到你抢地主了'\r\n                } else {\r\n                    msg += event.next_operator_info !== undefined ? `，接下来轮到 ${event.next_operator_info?.user?.name} 抢地主了` : ''\r\n                }\r\n            }\r\n            if (msg !== '') notice(msg)\r\n        } else if (er.RoomNorobLandowner) {\r\n            const event = er.RoomNorobLandowner as twoonone.RoomEventResponse.RoomNoRobLandowner\r\n            await room_update()\r\n            let msg = ''\r\n            if (event.operator_info?.user?.id !== room.self?.user?.id) {\r\n                msg = `${event.operator_info?.user?.name} 选择不抢地主`\r\n                if (event.next_operator_info?.user?.id === room.self?.user?.id) {\r\n                    msg += '，轮到你抢地主了'\r\n                } else {\r\n                    msg += event.next_operator_info !== undefined ? `，接下来轮到 ${event.next_operator_info?.user?.name} 抢地主了` : ''\r\n                }\r\n            }\r\n            if (msg !== '') notice(msg)\r\n        } else if (er.RoomSendcard) {\r\n            const event = er.RoomSendcard as twoonone.RoomEventResponse.RoomSendCard\r\n            await room_update()\r\n            last_card_display()\r\n            // let msg = ''\r\n            // if (event.operator_info?.user?.id !== room.self?.user?.id) {\r\n            //     msg = `${event.operator_info?.user?.name} 选择出牌`\r\n            //     if (event.next_operator_info?.user?.id === room.self?.user?.id) {\r\n            //         msg += '，轮到你出牌了'\r\n            //     } else {\r\n            //         msg += event.next_operator_info !== undefined ? `，接下来轮到 ${event.next_operator_info?.user?.name} 出牌了` : ''\r\n            //     }\r\n            // }\r\n            // if (msg !== '') notice(msg)\r\n        } else if (er.RoomNoSendcard) {\r\n            const event = er.RoomNoSendcard as twoonone.RoomEventResponse.RoomNoSendCard\r\n            await room_update()\r\n            // let msg = ''\r\n            // if (event.operator_info?.user?.id !== room.self?.user?.id) {\r\n            //     msg = `${event.operator_info?.user?.name} 选择不出牌`\r\n            //     if (event.next_operator_info?.user?.id === room.self?.user?.id) {\r\n            //         msg += '，轮到你出牌了'\r\n            //     } else {\r\n            //         msg += event.next_operator_info !== undefined ? `，接下来轮到 ${event.next_operator_info?.user?.name} 出牌了` : ''\r\n            //     }\r\n            // }\r\n            // if (msg !== '') notice(msg)\r\n        } else if (er.RoomReRoblandowner) {\r\n            const event = er.RoomReRoblandowner as twoonone.RoomEventResponse.RoomReRobLandowner\r\n            let msg = ''\r\n            msg += '无人抢地主，重新发牌'\r\n            notice(msg)\r\n            await room_update()\r\n        } else {\r\n            console.error('is undefined', er)\r\n        }\r\n    }\r\n    console.log('exit')\r\n    ws = undefined\r\n}\r\n\r\nconst need_user_footer = () => {\r\n    if (self_sendcard()) {\r\n        return true\r\n    } else if (self_operator()) {\r\n        return true\r\n    }\r\n}\r\n\r\nconst self_sendcard = () => {\r\n    if (room.sendcards?.length === 0) return false\r\n    if (room.sendcards?.at(room.sendcards.length-1)?.sender_info?.user?.id === GetUserId(LoginUser.value?.access_token ?? '')) return true\r\n    return false\r\n}\r\n\r\nconst self_operator = () => {\r\n    if (room.operator_now?.user?.id === GetUserId(LoginUser.value?.access_token ?? '')) return true\r\n    return false\r\n}\r\n\r\nconst get_card_stack_position = () => {\r\n    // 三分之一处\r\n    return 3\r\n}\r\n\r\nconst get_min_scale = () => {\r\n    return 0.5\r\n}\r\n\r\n// row 5, col 13(row 1-4)/3\r\nconst [card_basic_x, card_basic_y, card_interval, card_offset, card_min_scale, card_stack_position, card_select_offset] = [\r\n    170,\r\n    246,\r\n    10,\r\n    2,\r\n    get_min_scale(),\r\n    get_card_stack_position(),\r\n    20\r\n]\r\n\r\nconst [card_mini_basic_x, card_mini_basic_y, card_mini_crux_offset] = [\r\n    50,\r\n    80,\r\n    22,\r\n]\r\n\r\nconst get_card_size = (size:card_size):{\r\n    basic_x: number,\r\n    basic_y: number\r\n} => {\r\n    let [basic_x, basic_y] = [0,0]\r\n    switch (size) {\r\n        case card_size.normal:\r\n            basic_x = card_basic_x\r\n            basic_y = card_basic_y\r\n            break\r\n        case card_size.mini:\r\n            basic_x = card_mini_basic_x\r\n            basic_y = card_mini_basic_y\r\n            break\r\n    }\r\n    return {\r\n        basic_x: basic_x,\r\n        basic_y: basic_y,\r\n    }\r\n}\r\n\r\nconst calc_svg_size = (max_col: number, row: number, size: card_size) => {\r\n    const ret = get_card_size(size)\r\n    const [basic_x, basic_y] = [ret.basic_x, ret.basic_y]\r\n    return [\r\n        max_col !== -1 ? max_col * (basic_x + card_offset) : window.innerWidth,\r\n        row === 0 ? basic_y + card_select_offset : (row+1) * (basic_y + card_offset + card_select_offset)\r\n    ]\r\n}\r\n\r\nconst cards2svg = (cs: CardExtra[], width: number, height: number, options: {\r\n    max_col?: number,\r\n    scale?: number,\r\n    r2l?: boolean,\r\n    is_self?: boolean,\r\n    size: card_size\r\n} = {\r\n    max_col: -1,\r\n    scale: 1,\r\n    r2l: false,\r\n    is_self: true,\r\n    size: card_size.normal\r\n}):Element => {\r\n    const [max_col, scale, r2l, self, size] = [\r\n        options.max_col ?? -1,\r\n        options.scale ?? 1,\r\n        options.r2l ?? false,\r\n        options.is_self ?? true,\r\n        options.size\r\n    ]\r\n    let [basic_x, basic_y] = [0,0]\r\n    {\r\n        const ret = get_card_size(size)\r\n        basic_x = ret.basic_x\r\n        basic_y = ret.basic_y\r\n    }\r\n    const ns = 'http://www.w3.org/2000/svg'\r\n    const child_ns = 'http://www.w3.org/1999/xlink'\r\n    const svg = document.createElementNS(ns, 'svg')\r\n    let [row, col] = [0, 0]\r\n    for (const [i, v] of cs.entries()) {\r\n        const position = card2position(v.card, size)\r\n        if (position === undefined) {console.error('card position is undefined'); continue}\r\n        const [base_x, base_y] = position\r\n        let [canvas_x, canvas_y] = [0,0]\r\n        switch (size) {\r\n            case card_size.normal:\r\n                // 计算卡牌位于当前卡牌堆的位置\r\n                canvas_x = ~(base_x - (basic_x*col + card_offset*col))+1\r\n                canvas_y = ~(base_y - (basic_y*row + card_offset*row)/card_stack_position)+1\r\n                // 判断卡牌是否超过最大列数\r\n                if (max_col !== -1 && (col+1) > max_col) {\r\n                    row++\r\n                    col = 0\r\n                    canvas_x = ~(base_x - (basic_x*col + card_offset*col))+1\r\n                    canvas_y = ~(base_y - (basic_y*row + card_offset*row)/card_stack_position)+1\r\n                }\r\n                col++\r\n                break\r\n            case card_size.mini:\r\n                // 计算卡牌位于当前卡牌堆的位置\r\n                if (self) {\r\n                    canvas_x = ~(base_x - (basic_x*col-(basic_x-card_mini_crux_offset)*col))+1\r\n                } else {\r\n                    canvas_x = ~(base_x - (basic_x*col))+1\r\n                }\r\n                canvas_y = ~(base_y - (basic_y*row))+1\r\n                // 判断卡牌是否超过最大列数\r\n                if (max_col !== -1 && (col+1) > max_col) {\r\n                    row++\r\n                    col = 0\r\n                    canvas_x = ~(base_x - (basic_x*col))+1\r\n                    canvas_y = ~(base_y - (basic_y*row))+1\r\n                }\r\n                // \r\n                if (!self) {\r\n                    canvas_y -= card_select_offset\r\n                }\r\n                col++\r\n                break\r\n        }\r\n\r\n        const id = card2id(v.card)\r\n        if (id === undefined) {console.error('card id is undefined');continue}\r\n        const use = document.createElementNS(ns, 'use')\r\n        // \r\n        if (v.select) {\r\n            canvas_y += card_select_offset\r\n            use.setAttribute('card_selected', '')\r\n        }\r\n        switch (size) {\r\n            case card_size.normal:\r\n                use.setAttributeNS(child_ns, 'xlink:href', `/static/img/card.svg#${id}`)\r\n                break\r\n            case card_size.mini:\r\n                use.setAttributeNS(child_ns, 'xlink:href', `/static/img/card_mini.svg#${id}`)\r\n        }\r\n        if (self) {\r\n            const handle = (use: SVGUseElement) => {\r\n                let v = use.style.getPropertyValue('transform')!\r\n                const xy = v.match(/(?:translate\\()([\\d\\-.]+)(?:px)(?:, )?([\\d\\-.]+)?(?:px)?(?:\\))/)\r\n                let [x, y] = [\r\n                    Number(xy?.at(1)),\r\n                    xy?.at(2) ? Number(xy?.at(2)) : 0\r\n                ]\r\n                v = v.split(/translate\\(.*\\)/).at(1)!\r\n                const selected = use.getAttribute('card_selected') !== null\r\n                if (selected) {\r\n                    y += card_select_offset\r\n                    use.removeAttribute('card_selected')\r\n                } else {\r\n                    y -= card_select_offset\r\n                    use.setAttribute('card_selected','')\r\n                }\r\n                use.style.setProperty('transform', `${v} translate(${x}px, ${y}px)`)\r\n            }\r\n            use.onmousedown = (e) => {\r\n                if (e.buttons !== 1) {\r\n                    return\r\n                }\r\n                handle(use)\r\n            }\r\n            use.onmouseenter = (e) => {\r\n                if (e.buttons !== 1) {\r\n                    return\r\n                }\r\n                // 鼠标经过且按下左键\r\n                handle(use)\r\n            }\r\n        }\r\n        if (r2l) {\r\n            use.style.setProperty('transform',`translate(${canvas_x}px, ${canvas_y}px) rotate3d(0, 1, 0, 180deg)`)\r\n            use.style.setProperty('transform-origin', `${Math.abs(base_x)+25}px 0px 0px`)\r\n        } else {\r\n            use.style.setProperty('transform',`translate(${canvas_x}px, ${canvas_y}px)`)\r\n        }\r\n        svg.appendChild(use)\r\n    }\r\n    const [x, y] = calc_svg_size(max_col === -1 ? col : max_col, row, size)\r\n    svg.classList.add('svg_card')\r\n    svg.setAttribute('width', `${x === 0 ? width / scale : x}px`)\r\n    svg.setAttribute('height', `${y}px`)\r\n    if (r2l) {\r\n        svg.style.setProperty('direction', 'ltr');\r\n    }\r\n    if (scale !== 1 || r2l) {\r\n        let [form_o_x, form_o_y] = [0,0]\r\n        if (!self) {\r\n            if (r2l) {\r\n                form_o_x = 50\r\n            } else {\r\n                form_o_x = -10\r\n            }\r\n        }\r\n        svg.style.setProperty('transform', `scale(${scale}) ${r2l === true ? 'rotate3d(0, 1, 0, 180deg)' : ''}`)\r\n        svg.style.setProperty('transform-origin', `${form_o_x}% ${form_o_y}%`)\r\n    }\r\n    return svg\r\n}\r\n\r\nconst id2card = (id: string):twoonone.ICard|null => {\r\n    const [color, number] = id.split('_')\r\n    const c:twoonone.ICard = {}\r\n    switch (number) {\r\n        case '1':\r\n            c.number = twoonone.Card.Number.A\r\n            break\r\n        case '2':\r\n            c.number = twoonone.Card.Number.TWO\r\n            break\r\n        case '3':\r\n            c.number = twoonone.Card.Number.THREE\r\n            break\r\n        case '4':\r\n            c.number = twoonone.Card.Number.FOUR\r\n            break\r\n        case '5':\r\n            c.number = twoonone.Card.Number.FIVE\r\n            break\r\n        case '6':\r\n            c.number = twoonone.Card.Number.SIX\r\n            break\r\n        case '7':\r\n            c.number = twoonone.Card.Number.SEVEN\r\n            break\r\n        case '8':\r\n            c.number = twoonone.Card.Number.EIGHT\r\n            break\r\n        case '9':\r\n            c.number = twoonone.Card.Number.NINE\r\n            break\r\n        case '10':\r\n            c.number = twoonone.Card.Number.TEN\r\n            break\r\n        case 'jack':\r\n            c.number = twoonone.Card.Number.J\r\n            break\r\n        case 'queen':\r\n            c.number = twoonone.Card.Number.Q\r\n            break\r\n        case 'king':\r\n            c.number = twoonone.Card.Number.K\r\n            break\r\n        case 'joker':\r\n            switch (color) {\r\n                case 'red':\r\n                    c.number = twoonone.Card.Number.KING\r\n                    break\r\n                case 'black':\r\n                    c.number = twoonone.Card.Number.JOKER\r\n                    break\r\n            }\r\n            break\r\n        default:\r\n            return null\r\n    }\r\n    return c\r\n}\r\n\r\nconst card2id = (c: twoonone.ICard) => {\r\n    switch (c.number) {\r\n        case twoonone.Card.Number.UNKNOWN:\r\n            return 'back'\r\n        case twoonone.Card.Number.THREE:\r\n            return 'club_3'\r\n        case twoonone.Card.Number.FOUR:\r\n            return 'club_4'\r\n        case twoonone.Card.Number.FIVE:\r\n            return 'club_5'\r\n        case twoonone.Card.Number.SIX:\r\n            return 'club_6'\r\n        case twoonone.Card.Number.SEVEN:\r\n            return 'club_7'\r\n        case twoonone.Card.Number.EIGHT:return 'club_8'\r\n        case twoonone.Card.Number.NINE:return 'club_9'\r\n        case twoonone.Card.Number.TEN:return 'club_10'\r\n        case twoonone.Card.Number.J:return 'club_jack'\r\n        case twoonone.Card.Number.Q:return 'club_queen'\r\n        case twoonone.Card.Number.K:return 'club_king'\r\n        case twoonone.Card.Number.A:\r\n            return 'club_1'\r\n        case twoonone.Card.Number.TWO:\r\n            return 'club_2'\r\n        case twoonone.Card.Number.JOKER:return 'black_joker'\r\n        case twoonone.Card.Number.KING:return 'red_joker'\r\n    }\r\n}\r\n\r\nconst card2position = (c: twoonone.ICard, size: card_size):number[]|undefined => {\r\n    const ret = get_card_size(size)\r\n    const [basic_x, basic_y] = [ret.basic_x,ret.basic_y]\r\n    switch (c.number) {\r\n        case twoonone.Card.Number.UNKNOWN:\r\n            return [(basic_x+card_interval)*2, (basic_y+card_interval)*4]\r\n        case twoonone.Card.Number.THREE:\r\n            return [(basic_x+card_interval)*2, 0]\r\n        case twoonone.Card.Number.FOUR:\r\n            return [(basic_x+card_interval)*3, 0]\r\n        case twoonone.Card.Number.FIVE:\r\n            return [(basic_x+card_interval)*4, 0]\r\n        case twoonone.Card.Number.SIX:\r\n            return [(basic_x+card_interval)*5, 0]\r\n        case twoonone.Card.Number.SEVEN:\r\n            return [(basic_x+card_interval)*6, 0]\r\n        case twoonone.Card.Number.EIGHT:\r\n            return [(basic_x+card_interval)*7, 0]\r\n        case twoonone.Card.Number.NINE:\r\n            return [(basic_x+card_interval)*8, 0]\r\n        case twoonone.Card.Number.TEN:\r\n            return [(basic_x+card_interval)*9, 0]\r\n        case twoonone.Card.Number.J:\r\n            return [(basic_x+card_interval)*10, 0]\r\n        case twoonone.Card.Number.Q:\r\n            return [(basic_x+card_interval)*11, 0]\r\n        case twoonone.Card.Number.K:\r\n            return [(basic_x+card_interval)*12, 0]\r\n        case twoonone.Card.Number.A:\r\n            return [0, 0]\r\n        case twoonone.Card.Number.TWO:\r\n            return [(basic_x+card_interval), 0]\r\n        case twoonone.Card.Number.JOKER:\r\n            return [0, (basic_y+card_interval)*4]\r\n        case twoonone.Card.Number.KING:\r\n            return [(basic_x+card_interval), (basic_y+card_interval)*4]\r\n        default:\r\n            return undefined\r\n    }\r\n}\r\n\r\n// 返回上层w/h，svg scale值，svg max col值?\r\n\r\nconst calc_cards_scale = (c_len: number, width: number, size: card_size, options: {\r\n    min_scale: number,\r\n    self?: boolean\r\n} = {\r\n    min_scale: card_min_scale\r\n}):\r\n{\r\n    scale: number,\r\n    top_x: number,\r\n    top_y: number,\r\n    max_col?: number\r\n}|undefined => {\r\n    const [min_scale, self] = [\r\n        options.min_scale,\r\n        options.self ?? false\r\n    ]\r\n    let [basic_x, basic_y] = [0,0]\r\n    const ret = get_card_size(size)\r\n    basic_x = ret.basic_x\r\n    basic_y = ret.basic_y\r\n    let [x] = [\r\n        (basic_x + card_offset)*c_len,\r\n    ]\r\n    console.log(c_len, basic_x, x, width, min_scale)\r\n    const y = basic_y + card_select_offset\r\n\r\n    if (x <= width) { //无需缩放\r\n        return undefined\r\n    } else if (x > width) { //仅考虑宽度超出(毕竟是往垂直扩展，高度考虑无用)\r\n        let scale = 1\r\n        let max_col:number|undefined = undefined\r\n        scale = width / x\r\n        max_col = c_len\r\n        if (scale < min_scale) {\r\n            while (scale < min_scale) {\r\n                max_col--\r\n                if (self && size === card_size.mini) {\r\n                    x = (basic_x - (basic_x - card_mini_crux_offset))*(max_col+1.35)\r\n                } else {\r\n                    x = (basic_x + card_offset)*max_col\r\n                }\r\n                scale = width / x\r\n            }\r\n        }\r\n        const top_x = x * scale\r\n        let top_y = 0\r\n        let row = (~~(c_len / (max_col ?? 1)) + 1)\r\n        row = row === c_len+1 ? 1 : row\r\n        if (row === 1) {\r\n            top_y = y * (scale+0.015)\r\n        } else {\r\n            const resize_y = y*(scale+0.015)\r\n            if (self && size === card_size.normal) {\r\n                top_y = (resize_y / card_stack_position) * (row-1) + resize_y\r\n            } else {\r\n                top_y = (resize_y) * (row)\r\n            }\r\n        }\r\n        console.log(scale, top_x, top_y, max_col)\r\n        return {\r\n            scale,\r\n            top_x,\r\n            top_y,\r\n            max_col\r\n        }\r\n    }\r\n}\r\n\r\nconst display_cards = (cards: twoonone.ICard[], parent_id: string, options: {\r\n    width?: number,\r\n    height?: number,\r\n    self?: boolean,\r\n    r2l?: boolean,\r\n    size: card_size\r\n} = {\r\n    self: true,\r\n    r2l: false,\r\n    size: card_size.normal\r\n}):void => {\r\n    const [width, height, self, r2l, size] = [\r\n        options.width,\r\n        options.height,\r\n        options.self ?? true,\r\n        options.r2l ?? false,\r\n        options.size\r\n    ]\r\n    const parent = document.getElementById(parent_id)\r\n    if (parent === null) return\r\n    parent.style.removeProperty('width')\r\n    parent.style.removeProperty('height')\r\n    parent.style.removeProperty('overflow')\r\n    const parent_w = width ?? Number(window.getComputedStyle(parent).width.replaceAll('px', ''))\r\n    const parent_h = height ?? window.innerHeight\r\n    let ret = calc_cards_scale(cards.length, parent_w, size, {\r\n        min_scale: (size === card_size.normal ? card_min_scale : 0.85 ),\r\n        self: self\r\n    })\r\n    if (!self && size === card_size.mini) {\r\n        ret = calc_cards_scale(cards.length, parent_w, size, {\r\n            min_scale: 0.75,\r\n            self: self\r\n        })\r\n    }\r\n    let e:Element\r\n    const cs: CardExtra[] = []\r\n    if (self) {\r\n        const selects = get_selected_cards()\r\n        for (const c of cards) {\r\n            const newC:CardExtra = {\r\n                card: c,\r\n                select: false\r\n            }\r\n            for (const [i, sel_c] of selects.entries()) {\r\n                if (c.number === sel_c.number) {\r\n                    newC.select = true\r\n                    selects.splice(i, 1)\r\n                    break\r\n                }\r\n            }\r\n            cs.push(newC)\r\n        }\r\n    } else {\r\n        for (const c of cards) {\r\n            const newC:CardExtra = {\r\n                card: c,\r\n                select: false\r\n            }\r\n            cs.push(newC)\r\n        }\r\n    }\r\n    if (ret === undefined) {\r\n        e = cards2svg(cs, parent_w, parent_h, {\r\n            r2l: r2l,\r\n            is_self: self,\r\n            size: size\r\n        })\r\n    } else {\r\n        parent.style.setProperty('width', `${ret.top_x}px`)\r\n        parent.style.setProperty('height', `${ret.top_y}px`)\r\n        // parent.style.setProperty('overflow', `hidden`)\r\n        e = cards2svg(cs, parent_w, parent_h, {\r\n            scale: ret.scale, \r\n            max_col: ret.max_col!, \r\n            r2l: r2l, \r\n            is_self: self,\r\n            size: size\r\n        })\r\n    }\r\n    if (parent.children.length === 0) {\r\n        parent.appendChild(e)\r\n    } else {\r\n        parent.replaceChild(e, parent.children[0])\r\n    }\r\n}\r\n\r\nconst get_status = (p: twoonone.IPlayerInfo) => {\r\n    if (!room) return\r\n    switch (room.stage!) {\r\n        case twoonone.RoomStage.ROOM_STAGE_ROB_LANDOWNERING:\r\n            if (p.user?.id === room.operator_now?.user?.id) {\r\n                return '抢地主中'\r\n            } else {\r\n                return '等待抢地主'\r\n            }\r\n        case twoonone.RoomStage.ROOM_STAGE_SENDING_CARD:\r\n            if (p.user?.id === room.operator_now?.user?.id) {\r\n                return '出牌中'\r\n            } else {\r\n                return '等待出牌'\r\n            }\r\n    }\r\n}\r\n\r\nconst room = reactive<twoonone.IRoomInfo>({})\r\nconst mounted = ref(false)\r\n\r\nlet ws: AsyncGenerator<twoonone.RoomEventResponse, void, unknown>|undefined\r\nwatch(room, r => {\r\n    if (r.player_infos?.find(obj => obj.user?.id === GetUserId(LoginUser.value?.access_token ?? ''))) {\r\n        if (ws === undefined) {\r\n            room_event_update()\r\n            .then(() => room_event_listen()\r\n                .catch(e => console.error(e)))\r\n            .catch(e => console.error(e))\r\n        }\r\n    } else {\r\n        ws = undefined\r\n    }\r\n})\r\n\r\nwatch(mounted, () => {\r\n    display_update()\r\n}, {once: true})\r\n\r\n;(\n  ([__temp,__restore] = _withAsyncContext(() => initalize())),\n  await __temp,\n  __restore()\n)\r\nonMounted(() => mounted.value = true)\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_ElTableColumn = _resolveComponent(\"ElTableColumn\")!\n  const _component_ElTable = _resolveComponent(\"ElTable\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(BaseDialog, {\n      \"-body\": _unref(dl_body),\n      modelValue: _unref(dl_display),\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (_isRef(dl_display) ? (dl_display).value = $event : null))\n    }, null, 8, [\"-body\", \"modelValue\"]),\n    (room.stage === _unref(twoonone).RoomStage.ROOM_STAGE_WAITTING_START)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createVNode(_unref(ElContainer), null, {\n            default: _withCtx(() => [\n              _createVNode(_unref(ElHeader), null, {\n                default: _withCtx(() => [\n                  _createVNode(_unref(ElRow), null, {\n                    default: _withCtx(() => [\n                      _createVNode(_unref(ElSpace), null, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"div\", null, [\n                            (room.player_infos?.find(obj => obj.user?.id === _unref(GetUserId)(_unref(LoginUser)?.access_token ?? '')))\n                              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n                                  _createVNode(_unref(ElButton), {\n                                    onClick: _cache[1] || (_cache[1] = ($event: any) => (exit_action()))\n                                  }, {\n                                    default: _withCtx(() => _cache[5] || (_cache[5] = [\n                                      _createTextVNode(\"退出桌\")\n                                    ])),\n                                    _: 1\n                                  })\n                                ]))\n                              : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n                                  _createVNode(_unref(ElButton), {\n                                    onClick: _cache[2] || (_cache[2] = ($event: any) => (join_action()))\n                                  }, {\n                                    default: _withCtx(() => _cache[6] || (_cache[6] = [\n                                      _createTextVNode(\"加入桌\")\n                                    ])),\n                                    _: 1\n                                  })\n                                ]))\n                          ]),\n                          _createElementVNode(\"div\", null, [\n                            _createVNode(_unref(ElButton), {\n                              onClick: _cache[3] || (_cache[3] = ($event: any) => (start_action()))\n                            }, {\n                              default: _withCtx(() => _cache[7] || (_cache[7] = [\n                                _createTextVNode(\"开始游戏\")\n                              ])),\n                              _: 1\n                            })\n                          ])\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }),\n              _createVNode(_unref(ElMain), null, {\n                default: _withCtx(() => [\n                  _createVNode(_unref(ElSpace), {\n                    direction: \"vertical\",\n                    fill: \"\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_unref(ElCard), null, {\n                        default: _withCtx(() => [\n                          _createVNode(_unref(ElText), null, {\n                            default: _withCtx(() => [\n                              _createTextVNode(\"桌哈希：\" + _toDisplayString(room.hash), 1)\n                            ]),\n                            _: 1\n                          }),\n                          _createVNode(_component_ElTable, {\n                            data: room.player_infos\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_ElTableColumn, {\n                                label: \"玩家ID\",\n                                prop: \"user.id\"\n                              }),\n                              _createVNode(_component_ElTableColumn, {\n                                label: \"玩家名称\",\n                                prop: \"user.name\"\n                              })\n                            ]),\n                            _: 1\n                          }, 8, [\"data\"])\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n          _createVNode(_unref(ElContainer), null, {\n            default: _withCtx(() => [\n              _createVNode(_unref(ElHeader), { style: {\"height\":\"40vh\",\"width\":\"95vw\",\"padding\":\"0\",\"overflow\":\"hidden\"} }, {\n                default: _withCtx(() => [\n                  _createVNode(_unref(ElRow), { justify: \"space-between\" }, {\n                    default: _withCtx(() => [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(room.player_infos?.filter((v) => {\r\n                        if (v.user?.id === room.self?.user?.id) {\r\n                            return false\r\n                        }\r\n                        return true\r\n                    }), (p, i) => {\n                        return (_openBlock(), _createBlock(_unref(ElCol), {\n                          span: 24/(room.player_infos?.length !== undefined ? room.player_infos?.length-1 : 1),\n                          key: p.user!.id!\n                        }, {\n                          default: _withCtx(() => [\n                            _createVNode(_unref(ElRow), {\n                              style: _normalizeStyle((i&1) === 1 ? 'direction: rtl;' : '')\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_unref(ElCol), {\n                                  span: 10,\n                                  xs: 12\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_unref(ElDescriptions), {\n                                      column: 1,\n                                      border: \"\"\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createVNode(_unref(ElDescriptionsItem), { label: \"玩家\" }, {\n                                          default: _withCtx(() => [\n                                            _createVNode(_unref(ElText), null, {\n                                              default: _withCtx(() => [\n                                                _createTextVNode(_toDisplayString(p.user?.name), 1)\n                                              ]),\n                                              _: 2\n                                            }, 1024)\n                                          ]),\n                                          _: 2\n                                        }, 1024),\n                                        _createVNode(_unref(ElDescriptionsItem), { label: \"身份\" }, {\n                                          default: _withCtx(() => [\n                                            _createVNode(_unref(ElText), null, {\n                                              default: _withCtx(() => [\n                                                _createTextVNode(_toDisplayString(_unref(Role2Str)(p.table?.role ?? _unref(twoonone).Role.ROLE_UNKNOWN)), 1)\n                                              ]),\n                                              _: 2\n                                            }, 1024)\n                                          ]),\n                                          _: 2\n                                        }, 1024),\n                                        _createVNode(_unref(ElDescriptionsItem), { label: \"剩余手牌\" }, {\n                                          default: _withCtx(() => [\n                                            _createVNode(_unref(ElText), null, {\n                                              default: _withCtx(() => [\n                                                _createTextVNode(_toDisplayString(p.table?.cards_length), 1)\n                                              ]),\n                                              _: 2\n                                            }, 1024)\n                                          ]),\n                                          _: 2\n                                        }, 1024),\n                                        _createVNode(_unref(ElDescriptionsItem), { label: \"状态\" }, {\n                                          default: _withCtx(() => [\n                                            _createVNode(_unref(ElText), null, {\n                                              default: _withCtx(() => [\n                                                _createTextVNode(_toDisplayString(get_status(p)), 1)\n                                              ]),\n                                              _: 2\n                                            }, 1024)\n                                          ]),\n                                          _: 2\n                                        }, 1024)\n                                      ]),\n                                      _: 2\n                                    }, 1024)\n                                  ]),\n                                  _: 2\n                                }, 1024),\n                                _createVNode(_unref(ElCol), {\n                                  span: 14,\n                                  xs: 12\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_unref(ElRow), null, {\n                                      default: _withCtx(() => [\n                                        _createVNode(_unref(ElCol), { span: 1 }),\n                                        _createVNode(_unref(ElCol), { span: 23 }, {\n                                          default: _withCtx(() => [\n                                            _createElementVNode(\"div\", {\n                                              id: `svg_${p.user?.id}_send_cards`,\n                                              is_rtl: (i&1) === 1\n                                            }, null, 8, _hoisted_5)\n                                          ]),\n                                          _: 2\n                                        }, 1024)\n                                      ]),\n                                      _: 2\n                                    }, 1024)\n                                  ]),\n                                  _: 2\n                                }, 1024)\n                              ]),\n                              _: 2\n                            }, 1032, [\"style\"])\n                          ]),\n                          _: 2\n                        }, 1032, [\"span\"]))\n                      }), 128))\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }),\n              _createVNode(_unref(ElFooter), {\n                id: \"footer\",\n                style: {\"padding\":\"0\",\"height\":\"50vh\",\"width\":\"95vw\",\"overflow\":\"hidden\"}\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_unref(ElRow), null, {\n                    default: _withCtx(() => [\n                      _createVNode(_unref(ElCol), null, {\n                        default: _withCtx(() => _cache[8] || (_cache[8] = [\n                          _createElementVNode(\"div\", {\n                            id: \"svg_self_send_cards\",\n                            style: {\"text-align\":\"center\"}\n                          }, null, -1)\n                        ])),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_unref(ElRow), null, {\n                    default: _withCtx(() => [\n                      _createVNode(_unref(ElCol), {\n                        span: 8,\n                        xs: 8,\n                        sm: 7,\n                        md: 5,\n                        lg: 4,\n                        xl: 3\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(_unref(ElDescriptions), {\n                            column: 1,\n                            border: \"\"\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_unref(ElDescriptionsItem), { label: \"玩家\" }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_unref(ElText), null, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(room.self?.user?.name), 1)\n                                    ]),\n                                    _: 1\n                                  })\n                                ]),\n                                _: 1\n                              }),\n                              _createVNode(_unref(ElDescriptionsItem), { label: \"身份\" }, {\n                                default: _withCtx(() => [\n                                  _createVNode(_unref(ElText), null, {\n                                    default: _withCtx(() => [\n                                      _createTextVNode(_toDisplayString(_unref(Role2Str)(room.self?.table?.role ?? _unref(twoonone).Role.ROLE_UNKNOWN)), 1)\n                                    ]),\n                                    _: 1\n                                  })\n                                ]),\n                                _: 1\n                              })\n                            ]),\n                            _: 1\n                          })\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_unref(ElCol), {\n                        offset: 6,\n                        span: 10\n                      }, {\n                        default: _withCtx(() => [\n                          (room.stage === _unref(twoonone).RoomStage.ROOM_STAGE_ROB_LANDOWNERING)\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                                _createVNode(_unref(ElButtonGroup), { size: \"large\" }, {\n                                  default: _withCtx(() => [\n                                    _createVNode(_unref(ElButton), {\n                                      disabled: room.operator_now?.user?.id !== room.self?.user?.id,\n                                      onClick: robLandowner_action\n                                    }, {\n                                      default: _withCtx(() => _cache[9] || (_cache[9] = [\n                                        _createTextVNode(\"抢地主\")\n                                      ])),\n                                      _: 1\n                                    }, 8, [\"disabled\"]),\n                                    _createVNode(_unref(ElButton), {\n                                      disabled: room.operator_now?.user?.id !== room.self?.user?.id,\n                                      onClick: noRobLandowner_action\n                                    }, {\n                                      default: _withCtx(() => _cache[10] || (_cache[10] = [\n                                        _createTextVNode(\"不抢地主\")\n                                      ])),\n                                      _: 1\n                                    }, 8, [\"disabled\"])\n                                  ]),\n                                  _: 1\n                                })\n                              ]))\n                            : (room.stage === _unref(twoonone).RoomStage.ROOM_STAGE_SENDING_CARD)\n                              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n                                  _createVNode(_unref(ElButtonGroup), { size: \"large\" }, {\n                                    default: _withCtx(() => [\n                                      _createVNode(_unref(ElButton), {\n                                        disabled: room.operator_now?.user?.id !== room.self?.user?.id,\n                                        onClick: _cache[4] || (_cache[4] = ($event: any) => (sendCard_action(get_selected_cards())))\n                                      }, {\n                                        default: _withCtx(() => _cache[11] || (_cache[11] = [\n                                          _createTextVNode(\"出牌\")\n                                        ])),\n                                        _: 1\n                                      }, 8, [\"disabled\"]),\n                                      _createVNode(_unref(ElButton), {\n                                        disabled: room.operator_now?.user?.id !== room.self?.user?.id,\n                                        onClick: noSendCard_action\n                                      }, {\n                                        default: _withCtx(() => _cache[12] || (_cache[12] = [\n                                          _createTextVNode(\"不出牌\")\n                                        ])),\n                                        _: 1\n                                      }, 8, [\"disabled\"])\n                                    ]),\n                                    _: 1\n                                  })\n                                ]))\n                              : _createCommentVNode(\"\", true)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_unref(ElRow), null, {\n                    default: _withCtx(() => [\n                      _createVNode(_unref(ElCol), null, {\n                        default: _withCtx(() => _cache[13] || (_cache[13] = [\n                          _createElementVNode(\"div\", { id: \"svg_self_cards\" }, null, -1)\n                        ])),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          })\n        ]))\n  ], 64))\n}\n}\n\n})","<script lang=\"ts\" setup>\r\n/* eslint-disable */\r\nimport { ASSETS_URL, GetTimeSec, LoginUser, PageBack, RandomString, Rooms } from '@/commons/Global';\r\nimport { ExitRoom, GetRoom, JoinRoom, NoRobLandowner, NoSendCard, RobLandowner, RoomEvent, SendCard, StartRoom } from '@/commons/twoonone/call';\r\nimport { CommonErrorNotice, Role2Str, RoomEventFilter } from '@/commons/twoonone/utils';\r\nimport { GetUserId } from '@/commons/utils/utils';\r\nimport BaseDialog from '@/components/BaseDialog.vue';\r\nimport { twoonone } from '@/protos/proto';\r\nimport { x64 } from 'crypto-js';\r\nimport { ElButton, ElButtonGroup, ElCard, ElCol, ElContainer, ElDescriptions, ElDivider, ElFooter, ElHeader, ElIcon, ElImage, ElMain, ElNotification, ElRow, ElSpace, ElText, ElDescriptionsItem } from 'element-plus';\r\nimport { onMounted, reactive, ref, watch } from 'vue';\r\n\r\nconst props = defineProps<{\r\n    room_hash: string\r\n}>()\r\n\r\nconst [dl_body,dl_display] = [ref(''),ref(false)]\r\nconst notice_interval = 20 //ms\r\n\r\nconst initalize = async() => {\r\n    await room_update()\r\n}\r\n\r\nconst notice = async (msg: string, position: \"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\" = 'top-left', type: \"error\" | \"success\" | \"warning\" | \"info\" = 'info') => {\r\n    setTimeout(() => {\r\n        ElNotification({\r\n            title: \"提示\",\r\n            message: msg,\r\n            position: position,\r\n            type: type\r\n        })\r\n    }, notice_interval);\r\n}\r\n\r\nconst display_update = () => {\r\n    removeEventListener('resize', players_card_display)\r\n    players_card_display()\r\n    addEventListener('resize', players_card_display)\r\n    \r\n    removeEventListener('resize', last_card_display)\r\n    last_card_display()\r\n    addEventListener('resize', last_card_display)\r\n}\r\n\r\nconst room_update = async () => {\r\n    // 获取桌信息并更新\r\n    const resp = await GetRoom(twoonone.GetRoomRequest.create({room_hash: props.room_hash}))\r\n    if (typeof resp === 'number') {\r\n        switch (resp) {\r\n            default:\r\n                notice(CommonErrorNotice(resp), undefined, 'error')\r\n        }\r\n        console.error(resp)\r\n        return\r\n    }\r\n    const ret = resp.room_info!\r\n    ret.self?.extra?.hand_cards?.sort((a, b) => a.number! - b.number!)\r\n    Object.assign(room, resp.room_info!)\r\n    if (mounted.value) display_update()\r\n}\r\n\r\nconst exit_action = async () => {\r\n    const resp = await ExitRoom(twoonone.ExitRoomRequest.create({\r\n        room_hash: props.room_hash,\r\n    }))\r\n    if (typeof resp === 'number') {\r\n        notice(CommonErrorNotice(resp), undefined, 'error')\r\n        console.error(resp)\r\n        return\r\n    }\r\n    // PageBack()\r\n}\r\n\r\nconst join_action = async () => {\r\n    const resp = await JoinRoom(twoonone.ExitRoomRequest.create({\r\n        room_hash: props.room_hash,\r\n    }))\r\n    if (typeof resp === 'number') {\r\n        notice(CommonErrorNotice(resp), undefined, 'error')\r\n        console.error(resp)\r\n        return\r\n    }\r\n    await room_update()\r\n}\r\n\r\nconst start_action = async () => {\r\n    if (room.player_infos?.length !== 3) {\r\n        dl_body.value = '桌内玩家数未满'\r\n        dl_display.value = true\r\n        return\r\n    }\r\n    const resp = await StartRoom(twoonone.StartRoomRequest.create({room_hash: props.room_hash}))\r\n    if (typeof resp === 'number') {\r\n        notice(CommonErrorNotice(resp), undefined, 'error')\r\n        console.error(resp)\r\n        return\r\n    }\r\n}\r\n\r\nconst robLandowner_action = async () => {\r\n    const resp = await RobLandowner(twoonone.RobLandownerRequest.create({room_hash: room.hash}))\r\n    if (typeof resp === 'number') {\r\n        switch (resp) {\r\n            case twoonone.api.Error.ERROR_ROOM_NO_ROB_LANDOWNER:\r\n                break\r\n            default:\r\n                notice(CommonErrorNotice(resp), undefined, 'error')\r\n        }\r\n        console.error(resp)\r\n        return\r\n    }\r\n}\r\n\r\nconst noRobLandowner_action = async () => {\r\n    const resp = await NoRobLandowner(twoonone.NoRobLandownerRequest.create({room_hash: room.hash}))\r\n    if (typeof resp === 'number') {\r\n        switch (resp) {\r\n            case twoonone.api.Error.ERROR_ROOM_NO_ROB_LANDOWNER:\r\n                break\r\n            default:\r\n                notice(CommonErrorNotice(resp), undefined, 'error')\r\n        }\r\n        console.error(resp)\r\n        return\r\n    }\r\n}\r\n\r\nconst sendCard_action = async (cards: twoonone.ICard[]) => {\r\n    if (cards.length === 0) return\r\n    clear_selected_cards()\r\n    const resp = await SendCard(twoonone.SendCardRequest.create({room_hash: room.hash, sendcards: cards}))\r\n    if (typeof resp === 'number') {\r\n        notice(CommonErrorNotice(resp), undefined, 'error')\r\n        console.error(resp)\r\n        return\r\n    }\r\n}\r\n\r\nconst noSendCard_action = async () => {\r\n    clear_selected_cards()\r\n    const resp = await NoSendCard(twoonone.NoSendCardRequest.create({room_hash: room.hash}))\r\n    if (typeof resp === 'number') {\r\n        notice(CommonErrorNotice(resp), undefined, 'error')\r\n        console.error(resp)\r\n        return\r\n    }\r\n}\r\n\r\nconst players_card_display = () => {\r\n    // 其他玩家\r\n    // if (room.player_infos) {\r\n    //     for (const [i, p] of room.player_infos.filter(v => {\r\n    //         if (v.user?.id === room.self?.user?.id) return false\r\n    //         return true\r\n    //     }).entries()) {\r\n    //         const cards:twoonone.ICard[] = []\r\n    //         cards.push({number: twoonone.Card.Number.A})\r\n    //         for (let n = 0; n < (p.table?.cards_length ?? 0);n++) {\r\n    //             cards.push({number: twoonone.Card.Number.UNKNOWN})\r\n    //         }\r\n    //         cards.push({number: twoonone.Card.Number.A})\r\n    //         cards.push({number: twoonone.Card.Number.JOKER})\r\n            \r\n    //         display_cards(cards, `svg_${p.user?.id}_cards`, {\r\n    //             self: false,\r\n    //             r2l: ((i & 1) === 1),\r\n    //             size: card_size.mini\r\n    //         })\r\n    //     }\r\n    // }\r\n    // 自己\r\n    if (room.self) {\r\n        const size = window.innerWidth <= small ? card_size.mini : card_size.normal\r\n        const cards = room.self.extra?.hand_cards\r\n        if (!cards) return\r\n        const footer = document.getElementById('footer')\r\n        if (footer === null) return\r\n        const w = Number(window.getComputedStyle(footer).width.replace('px', ''))*0.98\r\n        const h = Number(window.getComputedStyle(footer).height.replace('px', ''))\r\n        display_cards(cards, `svg_self_cards`, {\r\n            width: w,\r\n            height: h,\r\n            self: true,\r\n            r2l: false,\r\n            size: size\r\n        })\r\n    }\r\n}\r\n\r\nconst clear_last_card_display = () => {\r\n    if (!room.player_infos) return\r\n    for (const v of room.player_infos) {\r\n        const parent = document.getElementById(`svg_${v.user?.id}_send_cards`)\r\n        if (!parent) continue\r\n        for (const v of parent.children) {\r\n            parent.removeChild(v)\r\n        }\r\n    }\r\n    const self = document.getElementById('svg_self_send_cards')\r\n    if (!self) return\r\n    for (const v of self.children) {\r\n        self.removeChild(v)\r\n    }\r\n}\r\n\r\nconst last_card_display = () => {\r\n    const last = room.sendcards?.at(room.sendcards.length-1)\r\n    if (!last) return\r\n    if (last.sender_info?.user?.id === room.self?.user?.id) {\r\n        clear_last_card_display()\r\n        display_cards(last.sendcards!, `svg_self_send_cards`, {\r\n            self: false,\r\n            r2l: false,\r\n            size: card_size.mini\r\n        })\r\n        return\r\n    }\r\n    let r2l = false\r\n    for (const v of room.player_infos!.filter(v => {\r\n            if (v.user?.id === room.self?.user?.id) return false\r\n            return true\r\n        })) {\r\n        const parent = document.getElementById(`svg_${v.user?.id}_send_cards`)\r\n        if (parent) {\r\n            if (last.sender_info?.user?.id === v.user?.id) {\r\n                r2l = parent.getAttribute('is_rtl') === 'true'\r\n            }\r\n        }\r\n    }\r\n\r\n    clear_last_card_display()\r\n    display_cards(last.sendcards!, `svg_${last.sender_info!.user!.id!}_send_cards`, {\r\n        self: false,\r\n        r2l: r2l,\r\n        size: card_size.mini\r\n    })\r\n}\r\n\r\nconst get_selected_cards = ():twoonone.ICard[] => {\r\n    const svg = document.getElementById('svg_self_cards')?.children.item(0)\r\n    if (!svg) return []\r\n    const cards: twoonone.ICard[] = []\r\n    for (const use of svg.children) {\r\n        if (use.getAttribute('card_selected') === null) continue\r\n        const id = use.getAttribute('xlink:href')?.split('#').at(1)\r\n        if (id === undefined) continue\r\n        const c = id2card(id)\r\n        if (c === null) continue\r\n        cards.push(c)\r\n    }\r\n    return cards\r\n}\r\n\r\nconst clear_selected_cards = () => {\r\n    const svg = document.getElementById('svg_self_cards')?.children.item(0)\r\n    if (!svg) return\r\n    for (const v of svg.children) {\r\n        if (v.getAttribute('card_selected') === null) continue\r\n        const me = new MouseEvent('mousedown', {\r\n            buttons: 1\r\n        })\r\n        v.dispatchEvent(me)\r\n    }\r\n}\r\n\r\nconst room_event_update = async () => {\r\n    const stream = await RoomEvent()\r\n    if (typeof stream === 'number') {\r\n        console.error(stream)\r\n        return\r\n    }\r\n    ws = stream\r\n}\r\n\r\nconst room_event_listen = async () => {\r\n    if (!ws) return\r\n    for await (const resp of ws) {\r\n        const er = resp\r\n        console.log(resp)\r\n        if (er.RoblandownerIntoSendingcard) {\r\n            const event = er.RoblandownerIntoSendingcard as twoonone.RoomEventResponse.RobLandownerIntoSendingCard\r\n            notice(`${event.sendcarder_info?.user?.name} 当上了地主`)\r\n            await room_update()\r\n        } else if (er.RoblandownerContinuousRob) {\r\n            const event = er.RoblandownerContinuousRob as twoonone.RoomEventResponse.RobLandownerContinuousRob\r\n            notice(`连抢地主！当前倍率：${event.multiple}`)\r\n        } else if (er.SendcardSpringNotice) {\r\n            const event = er.SendcardSpringNotice as twoonone.RoomEventResponse.SendCardSpringNotice\r\n            notice(`春天！${event.sendcarder_info?.user?.name} 拿下了春天，当前倍率：${event.multiple}`)\r\n        } else if (er.SendcardBoomNotice) {\r\n            const event = er.SendcardBoomNotice as twoonone.RoomEventResponse.SendCardKingBoomNotice\r\n            notice(`炸弹！${event.sendcarder_info?.user?.name} 打出了炸弹，当前倍率：${event.multiple}`)\r\n        } else if (er.SendcardKingboomNotice) {\r\n            const event = er.SendcardKingboomNotice as twoonone.RoomEventResponse.SendCardKingBoomNotice\r\n            notice(`王炸！${event.sendcarder_info?.user?.name} 打出了王炸，当前倍率：${event.multiple}`)\r\n        } else if (er.GameFinish) {\r\n            const event = er.GameFinish as twoonone.RoomEventResponse.GameFinish\r\n            await room_update()\r\n            notice(`游戏结束，${Role2Str(event.Winner)} 获胜`)\r\n        } else if (er.SendcardCardnumberNotice) {\r\n            const event = er.SendcardCardnumberNotice as twoonone.RoomEventResponse.SendCardCardNumberNotice\r\n            notice(`${event.notice_target_info?.user?.name} 就剩 ${event.number} 张牌了！`)\r\n        } else if (er.RoomJoinPlayer) {\r\n            const event = er.RoomJoinPlayer as twoonone.RoomEventResponse.RoomJoinPlayer\r\n            room.player_infos = event.player_infos\r\n            notice(`${event.joiner_info?.user?.name} 加入了房间`)\r\n        } else if (er.RoomExitPlayer) {\r\n            const event = er.RoomExitPlayer as twoonone.RoomEventResponse.RoomExitPlayer\r\n            room.player_infos = event.player_infos\r\n            notice(`${event.leaver_info?.user?.name} 离开了房间`)\r\n        } else if (er.RoomStarted) {\r\n            const event = er.RoomStarted as twoonone.RoomEventResponse.RoomStarted\r\n            let msg = ''\r\n            msg += '游戏开始'\r\n            if (event.next_operator_info?.user?.id === room.self?.user?.id) {\r\n                msg += `，从你开始抢地主`\r\n            } else {\r\n                msg += `，从 ${event.next_operator_info?.user?.name} 开始抢地主`\r\n            }\r\n            notice(msg)\r\n            await room_update()\r\n            display_update()\r\n        } else if (er.RoomRobLandowner) {\r\n            const event = er.RoomRobLandowner as twoonone.RoomEventResponse.RoomRobLandowner\r\n            await room_update()\r\n            let msg = ''\r\n            if (event.operator_info?.user?.id !== room.self?.user?.id) {\r\n                msg = `${event.operator_info?.user?.name} 选择抢地主`\r\n                if (event.next_operator_info?.user?.id === room.self?.user?.id) {\r\n                    msg += '，轮到你抢地主了'\r\n                } else {\r\n                    msg += event.next_operator_info !== undefined ? `，接下来轮到 ${event.next_operator_info?.user?.name} 抢地主了` : ''\r\n                }\r\n            }\r\n            if (msg !== '') notice(msg)\r\n        } else if (er.RoomNorobLandowner) {\r\n            const event = er.RoomNorobLandowner as twoonone.RoomEventResponse.RoomNoRobLandowner\r\n            await room_update()\r\n            let msg = ''\r\n            if (event.operator_info?.user?.id !== room.self?.user?.id) {\r\n                msg = `${event.operator_info?.user?.name} 选择不抢地主`\r\n                if (event.next_operator_info?.user?.id === room.self?.user?.id) {\r\n                    msg += '，轮到你抢地主了'\r\n                } else {\r\n                    msg += event.next_operator_info !== undefined ? `，接下来轮到 ${event.next_operator_info?.user?.name} 抢地主了` : ''\r\n                }\r\n            }\r\n            if (msg !== '') notice(msg)\r\n        } else if (er.RoomSendcard) {\r\n            const event = er.RoomSendcard as twoonone.RoomEventResponse.RoomSendCard\r\n            await room_update()\r\n            last_card_display()\r\n            // let msg = ''\r\n            // if (event.operator_info?.user?.id !== room.self?.user?.id) {\r\n            //     msg = `${event.operator_info?.user?.name} 选择出牌`\r\n            //     if (event.next_operator_info?.user?.id === room.self?.user?.id) {\r\n            //         msg += '，轮到你出牌了'\r\n            //     } else {\r\n            //         msg += event.next_operator_info !== undefined ? `，接下来轮到 ${event.next_operator_info?.user?.name} 出牌了` : ''\r\n            //     }\r\n            // }\r\n            // if (msg !== '') notice(msg)\r\n        } else if (er.RoomNoSendcard) {\r\n            const event = er.RoomNoSendcard as twoonone.RoomEventResponse.RoomNoSendCard\r\n            await room_update()\r\n            // let msg = ''\r\n            // if (event.operator_info?.user?.id !== room.self?.user?.id) {\r\n            //     msg = `${event.operator_info?.user?.name} 选择不出牌`\r\n            //     if (event.next_operator_info?.user?.id === room.self?.user?.id) {\r\n            //         msg += '，轮到你出牌了'\r\n            //     } else {\r\n            //         msg += event.next_operator_info !== undefined ? `，接下来轮到 ${event.next_operator_info?.user?.name} 出牌了` : ''\r\n            //     }\r\n            // }\r\n            // if (msg !== '') notice(msg)\r\n        } else if (er.RoomReRoblandowner) {\r\n            const event = er.RoomReRoblandowner as twoonone.RoomEventResponse.RoomReRobLandowner\r\n            let msg = ''\r\n            msg += '无人抢地主，重新发牌'\r\n            notice(msg)\r\n            await room_update()\r\n        } else {\r\n            console.error('is undefined', er)\r\n        }\r\n    }\r\n    console.log('exit')\r\n    ws = undefined\r\n}\r\n\r\nconst need_user_footer = () => {\r\n    if (self_sendcard()) {\r\n        return true\r\n    } else if (self_operator()) {\r\n        return true\r\n    }\r\n}\r\n\r\nconst self_sendcard = () => {\r\n    if (room.sendcards?.length === 0) return false\r\n    if (room.sendcards?.at(room.sendcards.length-1)?.sender_info?.user?.id === GetUserId(LoginUser.value?.access_token ?? '')) return true\r\n    return false\r\n}\r\n\r\nconst self_operator = () => {\r\n    if (room.operator_now?.user?.id === GetUserId(LoginUser.value?.access_token ?? '')) return true\r\n    return false\r\n}\r\n\r\nconst get_card_stack_position = () => {\r\n    // 三分之一处\r\n    return 3\r\n}\r\n\r\nconst get_min_scale = () => {\r\n    return 0.5\r\n}\r\n\r\n// row 5, col 13(row 1-4)/3\r\nconst [card_basic_x, card_basic_y, card_interval, card_offset, card_min_scale, card_stack_position, card_select_offset] = [\r\n    170,\r\n    246,\r\n    10,\r\n    2,\r\n    get_min_scale(),\r\n    get_card_stack_position(),\r\n    20\r\n]\r\n\r\nconst [card_mini_basic_x, card_mini_basic_y, card_mini_crux_offset] = [\r\n    50,\r\n    80,\r\n    22,\r\n]\r\n\r\nconst small = 648\r\n\r\nconst enum card_size {\r\n    normal,\r\n    mini\r\n}\r\n\r\nconst get_card_size = (size:card_size):{\r\n    basic_x: number,\r\n    basic_y: number\r\n} => {\r\n    let [basic_x, basic_y] = [0,0]\r\n    switch (size) {\r\n        case card_size.normal:\r\n            basic_x = card_basic_x\r\n            basic_y = card_basic_y\r\n            break\r\n        case card_size.mini:\r\n            basic_x = card_mini_basic_x\r\n            basic_y = card_mini_basic_y\r\n            break\r\n    }\r\n    return {\r\n        basic_x: basic_x,\r\n        basic_y: basic_y,\r\n    }\r\n}\r\n\r\nconst calc_svg_size = (max_col: number, row: number, size: card_size) => {\r\n    const ret = get_card_size(size)\r\n    const [basic_x, basic_y] = [ret.basic_x, ret.basic_y]\r\n    return [\r\n        max_col !== -1 ? max_col * (basic_x + card_offset) : window.innerWidth,\r\n        row === 0 ? basic_y + card_select_offset : (row+1) * (basic_y + card_offset + card_select_offset)\r\n    ]\r\n}\r\n\r\ninterface CardExtra {\r\n    card: twoonone.ICard\r\n    select: boolean\r\n}\r\n\r\nconst cards2svg = (cs: CardExtra[], width: number, height: number, options: {\r\n    max_col?: number,\r\n    scale?: number,\r\n    r2l?: boolean,\r\n    is_self?: boolean,\r\n    size: card_size\r\n} = {\r\n    max_col: -1,\r\n    scale: 1,\r\n    r2l: false,\r\n    is_self: true,\r\n    size: card_size.normal\r\n}):Element => {\r\n    const [max_col, scale, r2l, self, size] = [\r\n        options.max_col ?? -1,\r\n        options.scale ?? 1,\r\n        options.r2l ?? false,\r\n        options.is_self ?? true,\r\n        options.size\r\n    ]\r\n    let [basic_x, basic_y] = [0,0]\r\n    {\r\n        const ret = get_card_size(size)\r\n        basic_x = ret.basic_x\r\n        basic_y = ret.basic_y\r\n    }\r\n    const ns = 'http://www.w3.org/2000/svg'\r\n    const child_ns = 'http://www.w3.org/1999/xlink'\r\n    const svg = document.createElementNS(ns, 'svg')\r\n    let [row, col] = [0, 0]\r\n    for (const [i, v] of cs.entries()) {\r\n        const position = card2position(v.card, size)\r\n        if (position === undefined) {console.error('card position is undefined'); continue}\r\n        const [base_x, base_y] = position\r\n        let [canvas_x, canvas_y] = [0,0]\r\n        switch (size) {\r\n            case card_size.normal:\r\n                // 计算卡牌位于当前卡牌堆的位置\r\n                canvas_x = ~(base_x - (basic_x*col + card_offset*col))+1\r\n                canvas_y = ~(base_y - (basic_y*row + card_offset*row)/card_stack_position)+1\r\n                // 判断卡牌是否超过最大列数\r\n                if (max_col !== -1 && (col+1) > max_col) {\r\n                    row++\r\n                    col = 0\r\n                    canvas_x = ~(base_x - (basic_x*col + card_offset*col))+1\r\n                    canvas_y = ~(base_y - (basic_y*row + card_offset*row)/card_stack_position)+1\r\n                }\r\n                col++\r\n                break\r\n            case card_size.mini:\r\n                // 计算卡牌位于当前卡牌堆的位置\r\n                if (self) {\r\n                    canvas_x = ~(base_x - (basic_x*col-(basic_x-card_mini_crux_offset)*col))+1\r\n                } else {\r\n                    canvas_x = ~(base_x - (basic_x*col))+1\r\n                }\r\n                canvas_y = ~(base_y - (basic_y*row))+1\r\n                // 判断卡牌是否超过最大列数\r\n                if (max_col !== -1 && (col+1) > max_col) {\r\n                    row++\r\n                    col = 0\r\n                    canvas_x = ~(base_x - (basic_x*col))+1\r\n                    canvas_y = ~(base_y - (basic_y*row))+1\r\n                }\r\n                // \r\n                if (!self) {\r\n                    canvas_y -= card_select_offset\r\n                }\r\n                col++\r\n                break\r\n        }\r\n\r\n        const id = card2id(v.card)\r\n        if (id === undefined) {console.error('card id is undefined');continue}\r\n        const use = document.createElementNS(ns, 'use')\r\n        // \r\n        if (v.select) {\r\n            canvas_y += card_select_offset\r\n            use.setAttribute('card_selected', '')\r\n        }\r\n        switch (size) {\r\n            case card_size.normal:\r\n                use.setAttributeNS(child_ns, 'xlink:href', `/static/img/card.svg#${id}`)\r\n                break\r\n            case card_size.mini:\r\n                use.setAttributeNS(child_ns, 'xlink:href', `/static/img/card_mini.svg#${id}`)\r\n        }\r\n        if (self) {\r\n            const handle = (use: SVGUseElement) => {\r\n                let v = use.style.getPropertyValue('transform')!\r\n                const xy = v.match(/(?:translate\\()([\\d\\-.]+)(?:px)(?:, )?([\\d\\-.]+)?(?:px)?(?:\\))/)\r\n                let [x, y] = [\r\n                    Number(xy?.at(1)),\r\n                    xy?.at(2) ? Number(xy?.at(2)) : 0\r\n                ]\r\n                v = v.split(/translate\\(.*\\)/).at(1)!\r\n                const selected = use.getAttribute('card_selected') !== null\r\n                if (selected) {\r\n                    y += card_select_offset\r\n                    use.removeAttribute('card_selected')\r\n                } else {\r\n                    y -= card_select_offset\r\n                    use.setAttribute('card_selected','')\r\n                }\r\n                use.style.setProperty('transform', `${v} translate(${x}px, ${y}px)`)\r\n            }\r\n            use.onmousedown = (e) => {\r\n                if (e.buttons !== 1) {\r\n                    return\r\n                }\r\n                handle(use)\r\n            }\r\n            use.onmouseenter = (e) => {\r\n                if (e.buttons !== 1) {\r\n                    return\r\n                }\r\n                // 鼠标经过且按下左键\r\n                handle(use)\r\n            }\r\n        }\r\n        if (r2l) {\r\n            use.style.setProperty('transform',`translate(${canvas_x}px, ${canvas_y}px) rotate3d(0, 1, 0, 180deg)`)\r\n            use.style.setProperty('transform-origin', `${Math.abs(base_x)+25}px 0px 0px`)\r\n        } else {\r\n            use.style.setProperty('transform',`translate(${canvas_x}px, ${canvas_y}px)`)\r\n        }\r\n        svg.appendChild(use)\r\n    }\r\n    const [x, y] = calc_svg_size(max_col === -1 ? col : max_col, row, size)\r\n    svg.classList.add('svg_card')\r\n    svg.setAttribute('width', `${x === 0 ? width / scale : x}px`)\r\n    svg.setAttribute('height', `${y}px`)\r\n    if (r2l) {\r\n        svg.style.setProperty('direction', 'ltr');\r\n    }\r\n    if (scale !== 1 || r2l) {\r\n        let [form_o_x, form_o_y] = [0,0]\r\n        if (!self) {\r\n            if (r2l) {\r\n                form_o_x = 50\r\n            } else {\r\n                form_o_x = -10\r\n            }\r\n        }\r\n        svg.style.setProperty('transform', `scale(${scale}) ${r2l === true ? 'rotate3d(0, 1, 0, 180deg)' : ''}`)\r\n        svg.style.setProperty('transform-origin', `${form_o_x}% ${form_o_y}%`)\r\n    }\r\n    return svg\r\n}\r\n\r\nconst id2card = (id: string):twoonone.ICard|null => {\r\n    const [color, number] = id.split('_')\r\n    const c:twoonone.ICard = {}\r\n    switch (number) {\r\n        case '1':\r\n            c.number = twoonone.Card.Number.A\r\n            break\r\n        case '2':\r\n            c.number = twoonone.Card.Number.TWO\r\n            break\r\n        case '3':\r\n            c.number = twoonone.Card.Number.THREE\r\n            break\r\n        case '4':\r\n            c.number = twoonone.Card.Number.FOUR\r\n            break\r\n        case '5':\r\n            c.number = twoonone.Card.Number.FIVE\r\n            break\r\n        case '6':\r\n            c.number = twoonone.Card.Number.SIX\r\n            break\r\n        case '7':\r\n            c.number = twoonone.Card.Number.SEVEN\r\n            break\r\n        case '8':\r\n            c.number = twoonone.Card.Number.EIGHT\r\n            break\r\n        case '9':\r\n            c.number = twoonone.Card.Number.NINE\r\n            break\r\n        case '10':\r\n            c.number = twoonone.Card.Number.TEN\r\n            break\r\n        case 'jack':\r\n            c.number = twoonone.Card.Number.J\r\n            break\r\n        case 'queen':\r\n            c.number = twoonone.Card.Number.Q\r\n            break\r\n        case 'king':\r\n            c.number = twoonone.Card.Number.K\r\n            break\r\n        case 'joker':\r\n            switch (color) {\r\n                case 'red':\r\n                    c.number = twoonone.Card.Number.KING\r\n                    break\r\n                case 'black':\r\n                    c.number = twoonone.Card.Number.JOKER\r\n                    break\r\n            }\r\n            break\r\n        default:\r\n            return null\r\n    }\r\n    return c\r\n}\r\n\r\nconst card2id = (c: twoonone.ICard) => {\r\n    switch (c.number) {\r\n        case twoonone.Card.Number.UNKNOWN:\r\n            return 'back'\r\n        case twoonone.Card.Number.THREE:\r\n            return 'club_3'\r\n        case twoonone.Card.Number.FOUR:\r\n            return 'club_4'\r\n        case twoonone.Card.Number.FIVE:\r\n            return 'club_5'\r\n        case twoonone.Card.Number.SIX:\r\n            return 'club_6'\r\n        case twoonone.Card.Number.SEVEN:\r\n            return 'club_7'\r\n        case twoonone.Card.Number.EIGHT:return 'club_8'\r\n        case twoonone.Card.Number.NINE:return 'club_9'\r\n        case twoonone.Card.Number.TEN:return 'club_10'\r\n        case twoonone.Card.Number.J:return 'club_jack'\r\n        case twoonone.Card.Number.Q:return 'club_queen'\r\n        case twoonone.Card.Number.K:return 'club_king'\r\n        case twoonone.Card.Number.A:\r\n            return 'club_1'\r\n        case twoonone.Card.Number.TWO:\r\n            return 'club_2'\r\n        case twoonone.Card.Number.JOKER:return 'black_joker'\r\n        case twoonone.Card.Number.KING:return 'red_joker'\r\n    }\r\n}\r\n\r\nconst card2position = (c: twoonone.ICard, size: card_size):number[]|undefined => {\r\n    const ret = get_card_size(size)\r\n    const [basic_x, basic_y] = [ret.basic_x,ret.basic_y]\r\n    switch (c.number) {\r\n        case twoonone.Card.Number.UNKNOWN:\r\n            return [(basic_x+card_interval)*2, (basic_y+card_interval)*4]\r\n        case twoonone.Card.Number.THREE:\r\n            return [(basic_x+card_interval)*2, 0]\r\n        case twoonone.Card.Number.FOUR:\r\n            return [(basic_x+card_interval)*3, 0]\r\n        case twoonone.Card.Number.FIVE:\r\n            return [(basic_x+card_interval)*4, 0]\r\n        case twoonone.Card.Number.SIX:\r\n            return [(basic_x+card_interval)*5, 0]\r\n        case twoonone.Card.Number.SEVEN:\r\n            return [(basic_x+card_interval)*6, 0]\r\n        case twoonone.Card.Number.EIGHT:\r\n            return [(basic_x+card_interval)*7, 0]\r\n        case twoonone.Card.Number.NINE:\r\n            return [(basic_x+card_interval)*8, 0]\r\n        case twoonone.Card.Number.TEN:\r\n            return [(basic_x+card_interval)*9, 0]\r\n        case twoonone.Card.Number.J:\r\n            return [(basic_x+card_interval)*10, 0]\r\n        case twoonone.Card.Number.Q:\r\n            return [(basic_x+card_interval)*11, 0]\r\n        case twoonone.Card.Number.K:\r\n            return [(basic_x+card_interval)*12, 0]\r\n        case twoonone.Card.Number.A:\r\n            return [0, 0]\r\n        case twoonone.Card.Number.TWO:\r\n            return [(basic_x+card_interval), 0]\r\n        case twoonone.Card.Number.JOKER:\r\n            return [0, (basic_y+card_interval)*4]\r\n        case twoonone.Card.Number.KING:\r\n            return [(basic_x+card_interval), (basic_y+card_interval)*4]\r\n        default:\r\n            return undefined\r\n    }\r\n}\r\n\r\n// 返回上层w/h，svg scale值，svg max col值?\r\n\r\nconst calc_cards_scale = (c_len: number, width: number, size: card_size, options: {\r\n    min_scale: number,\r\n    self?: boolean\r\n} = {\r\n    min_scale: card_min_scale\r\n}):\r\n{\r\n    scale: number,\r\n    top_x: number,\r\n    top_y: number,\r\n    max_col?: number\r\n}|undefined => {\r\n    const [min_scale, self] = [\r\n        options.min_scale,\r\n        options.self ?? false\r\n    ]\r\n    let [basic_x, basic_y] = [0,0]\r\n    const ret = get_card_size(size)\r\n    basic_x = ret.basic_x\r\n    basic_y = ret.basic_y\r\n    let [x] = [\r\n        (basic_x + card_offset)*c_len,\r\n    ]\r\n    console.log(c_len, basic_x, x, width, min_scale)\r\n    const y = basic_y + card_select_offset\r\n\r\n    if (x <= width) { //无需缩放\r\n        return undefined\r\n    } else if (x > width) { //仅考虑宽度超出(毕竟是往垂直扩展，高度考虑无用)\r\n        let scale = 1\r\n        let max_col:number|undefined = undefined\r\n        scale = width / x\r\n        max_col = c_len\r\n        if (scale < min_scale) {\r\n            while (scale < min_scale) {\r\n                max_col--\r\n                if (self && size === card_size.mini) {\r\n                    x = (basic_x - (basic_x - card_mini_crux_offset))*(max_col+1.35)\r\n                } else {\r\n                    x = (basic_x + card_offset)*max_col\r\n                }\r\n                scale = width / x\r\n            }\r\n        }\r\n        const top_x = x * scale\r\n        let top_y = 0\r\n        let row = (~~(c_len / (max_col ?? 1)) + 1)\r\n        row = row === c_len+1 ? 1 : row\r\n        if (row === 1) {\r\n            top_y = y * (scale+0.015)\r\n        } else {\r\n            const resize_y = y*(scale+0.015)\r\n            if (self && size === card_size.normal) {\r\n                top_y = (resize_y / card_stack_position) * (row-1) + resize_y\r\n            } else {\r\n                top_y = (resize_y) * (row)\r\n            }\r\n        }\r\n        console.log(scale, top_x, top_y, max_col)\r\n        return {\r\n            scale,\r\n            top_x,\r\n            top_y,\r\n            max_col\r\n        }\r\n    }\r\n}\r\n\r\nconst display_cards = (cards: twoonone.ICard[], parent_id: string, options: {\r\n    width?: number,\r\n    height?: number,\r\n    self?: boolean,\r\n    r2l?: boolean,\r\n    size: card_size\r\n} = {\r\n    self: true,\r\n    r2l: false,\r\n    size: card_size.normal\r\n}):void => {\r\n    const [width, height, self, r2l, size] = [\r\n        options.width,\r\n        options.height,\r\n        options.self ?? true,\r\n        options.r2l ?? false,\r\n        options.size\r\n    ]\r\n    const parent = document.getElementById(parent_id)\r\n    if (parent === null) return\r\n    parent.style.removeProperty('width')\r\n    parent.style.removeProperty('height')\r\n    parent.style.removeProperty('overflow')\r\n    const parent_w = width ?? Number(window.getComputedStyle(parent).width.replaceAll('px', ''))\r\n    const parent_h = height ?? window.innerHeight\r\n    let ret = calc_cards_scale(cards.length, parent_w, size, {\r\n        min_scale: (size === card_size.normal ? card_min_scale : 0.85 ),\r\n        self: self\r\n    })\r\n    if (!self && size === card_size.mini) {\r\n        ret = calc_cards_scale(cards.length, parent_w, size, {\r\n            min_scale: 0.75,\r\n            self: self\r\n        })\r\n    }\r\n    let e:Element\r\n    const cs: CardExtra[] = []\r\n    if (self) {\r\n        const selects = get_selected_cards()\r\n        for (const c of cards) {\r\n            const newC:CardExtra = {\r\n                card: c,\r\n                select: false\r\n            }\r\n            for (const [i, sel_c] of selects.entries()) {\r\n                if (c.number === sel_c.number) {\r\n                    newC.select = true\r\n                    selects.splice(i, 1)\r\n                    break\r\n                }\r\n            }\r\n            cs.push(newC)\r\n        }\r\n    } else {\r\n        for (const c of cards) {\r\n            const newC:CardExtra = {\r\n                card: c,\r\n                select: false\r\n            }\r\n            cs.push(newC)\r\n        }\r\n    }\r\n    if (ret === undefined) {\r\n        e = cards2svg(cs, parent_w, parent_h, {\r\n            r2l: r2l,\r\n            is_self: self,\r\n            size: size\r\n        })\r\n    } else {\r\n        parent.style.setProperty('width', `${ret.top_x}px`)\r\n        parent.style.setProperty('height', `${ret.top_y}px`)\r\n        // parent.style.setProperty('overflow', `hidden`)\r\n        e = cards2svg(cs, parent_w, parent_h, {\r\n            scale: ret.scale, \r\n            max_col: ret.max_col!, \r\n            r2l: r2l, \r\n            is_self: self,\r\n            size: size\r\n        })\r\n    }\r\n    if (parent.children.length === 0) {\r\n        parent.appendChild(e)\r\n    } else {\r\n        parent.replaceChild(e, parent.children[0])\r\n    }\r\n}\r\n\r\nconst get_status = (p: twoonone.IPlayerInfo) => {\r\n    if (!room) return\r\n    switch (room.stage!) {\r\n        case twoonone.RoomStage.ROOM_STAGE_ROB_LANDOWNERING:\r\n            if (p.user?.id === room.operator_now?.user?.id) {\r\n                return '抢地主中'\r\n            } else {\r\n                return '等待抢地主'\r\n            }\r\n        case twoonone.RoomStage.ROOM_STAGE_SENDING_CARD:\r\n            if (p.user?.id === room.operator_now?.user?.id) {\r\n                return '出牌中'\r\n            } else {\r\n                return '等待出牌'\r\n            }\r\n    }\r\n}\r\n\r\nconst room = reactive<twoonone.IRoomInfo>({})\r\nconst mounted = ref(false)\r\n\r\nlet ws: AsyncGenerator<twoonone.RoomEventResponse, void, unknown>|undefined\r\nwatch(room, r => {\r\n    if (r.player_infos?.find(obj => obj.user?.id === GetUserId(LoginUser.value?.access_token ?? ''))) {\r\n        if (ws === undefined) {\r\n            room_event_update()\r\n            .then(() => room_event_listen()\r\n                .catch(e => console.error(e)))\r\n            .catch(e => console.error(e))\r\n        }\r\n    } else {\r\n        ws = undefined\r\n    }\r\n})\r\n\r\nwatch(mounted, () => {\r\n    display_update()\r\n}, {once: true})\r\n\r\nawait initalize()\r\nonMounted(() => mounted.value = true)\r\n</script>\r\n\r\n<template>\r\n    <!-- 提示 -->\r\n    <BaseDialog :-body=\"dl_body\" v-model=\"dl_display\"></BaseDialog>\r\n\r\n    <div v-if=\"room.stage === twoonone.RoomStage.ROOM_STAGE_WAITTING_START\">\r\n        <ElContainer>\r\n            <ElHeader>\r\n                <ElRow>\r\n                    <ElSpace>\r\n                        <div>\r\n                            <div v-if=\"room.player_infos?.find(obj => obj.user?.id === GetUserId(LoginUser?.access_token ?? ''))\"> <!-- 玩家在桌内 -->\r\n                                <ElButton @click=\"exit_action()\">退出桌</ElButton>\r\n                            </div>\r\n                            <div v-else>\r\n                                <ElButton @click=\"join_action()\">加入桌</ElButton>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <ElButton @click='start_action()'>开始游戏</ElButton>\r\n                        </div>\r\n                    </ElSpace>\r\n                </ElRow>\r\n            </ElHeader>\r\n            <ElMain>\r\n                <ElSpace direction=\"vertical\" fill>\r\n                        <ElCard>\r\n                            <ElText>桌哈希：{{ room.hash }}</ElText>\r\n                            <ElTable :data=\"room.player_infos\">\r\n                                <ElTableColumn label=\"玩家ID\" prop=\"user.id\"></ElTableColumn>\r\n                                <ElTableColumn label=\"玩家名称\" prop=\"user.name\"></ElTableColumn>\r\n                            </ElTable>\r\n                        </ElCard>\r\n                    </ElSpace>\r\n            </ElMain>\r\n        </ElContainer>\r\n    </div>\r\n    <div v-else>\r\n        <ElContainer>\r\n            <ElHeader style=\"height: 40vh;width: 95vw;padding: 0;overflow: hidden;\">\r\n                <ElRow justify=\"space-between\">\r\n                    <ElCol :span=\"24/(room.player_infos?.length !== undefined ? room.player_infos?.length-1 : 1)\" v-for=\"(p, i) in room.player_infos?.filter((v) => {\r\n                        if (v.user?.id === room.self?.user?.id) {\r\n                            return false\r\n                        }\r\n                        return true\r\n                    })\" :key=\"p.user!.id!\">\r\n                        <ElRow :style=\"(i&1) === 1 ? 'direction: rtl;' : ''\" >\r\n                            <ElCol :span=\"10\" :xs=\"12\">\r\n                                <ElDescriptions :column=\"1\" border>\r\n                                    <ElDescriptionsItem label=\"玩家\">\r\n                                        <ElText>{{ p.user?.name }}</ElText>\r\n                                    </ElDescriptionsItem>\r\n                                    <ElDescriptionsItem label=\"身份\">\r\n                                        <ElText>{{ Role2Str(p.table?.role ?? twoonone.Role.ROLE_UNKNOWN) }}</ElText>\r\n                                    </ElDescriptionsItem>\r\n                                    <ElDescriptionsItem label=\"剩余手牌\">\r\n                                        <ElText>{{ p.table?.cards_length }}</ElText>\r\n                                    </ElDescriptionsItem>\r\n                                    <ElDescriptionsItem label=\"状态\">\r\n                                        <ElText>{{ get_status(p) }}</ElText>\r\n                                    </ElDescriptionsItem>\r\n                                </ElDescriptions>\r\n                            </ElCol>\r\n                            <ElCol :span=\"14\" :xs=\"12\">\r\n                                <ElRow>\r\n                                    <ElCol :span=\"1\">\r\n                                    </ElCol>\r\n                                    <ElCol :span=\"23\">\r\n                                        <div :id=\"`svg_${p.user?.id}_send_cards`\" :is_rtl=\"(i&1) === 1\"></div>\r\n                                    </ElCol>\r\n                                </ElRow>\r\n                            </ElCol>\r\n                        </ElRow>\r\n                    </ElCol>\r\n                        <!-- <ElCard shadow=\"never\">\r\n                            <template #header>\r\n                                <ElSpace>\r\n                                    <ElText>玩家：{{ p.user?.name }}</ElText>\r\n                                </ElSpace>\r\n                            </template>\r\n                            <template #default>\r\n                                <ElSpace direction=\"vertical\">\r\n                                    <ElText>身份：{{ Role2Str(p.table?.role ?? twoonone.Role.ROLE_UNKNOWN) }}</ElText>\r\n                                </ElSpace>\r\n                            </template>\r\n                            <template #footer v-if=\"need_user_footer()\">\r\n                                <div v-if=\"self_sendcard()\">\r\n                                    <ElText>打出了：</ElText>\r\n                                    <div></div>\r\n                                </div>\r\n                                <div v-else-if=\"self_operator()\"></div>\r\n                            </template>\r\n                        </ElCard> -->\r\n                </ElRow>\r\n            </ElHeader>\r\n            <ElFooter id=\"footer\" style=\"padding: 0;height: 50vh;width: 95vw;overflow: hidden\">\r\n                <ElRow>\r\n                    <ElCol>\r\n                        <div id=\"svg_self_send_cards\" style=\"text-align: center;\"></div>\r\n                    </ElCol>\r\n                </ElRow>\r\n                <ElRow>\r\n                    <ElCol :span=\"8\" :xs=\"8\" :sm=\"7\" :md=\"5\" :lg=\"4\" :xl=\"3\">\r\n                        <ElDescriptions :column=\"1\" border>\r\n                            <ElDescriptionsItem label=\"玩家\">\r\n                                <ElText>{{ room.self?.user?.name }}</ElText>\r\n                            </ElDescriptionsItem>\r\n                            <ElDescriptionsItem label=\"身份\">\r\n                                <ElText>{{ Role2Str(room.self?.table?.role ?? twoonone.Role.ROLE_UNKNOWN) }}</ElText>\r\n                            </ElDescriptionsItem>\r\n                        </ElDescriptions>\r\n                    </ElCol>\r\n                    <ElCol :offset=\"6\" :span=\"10\">\r\n                        <div v-if=\"room.stage === twoonone.RoomStage.ROOM_STAGE_ROB_LANDOWNERING\">\r\n                            <ElButtonGroup size=\"large\">\r\n                                <ElButton :disabled=\"room.operator_now?.user?.id !== room.self?.user?.id\" @click=\"robLandowner_action\">抢地主</ElButton>\r\n                                <ElButton :disabled=\"room.operator_now?.user?.id !== room.self?.user?.id\" @click=\"noRobLandowner_action\">不抢地主</ElButton>\r\n                            </ElButtonGroup>\r\n                        </div>\r\n                        <div v-else-if=\"room.stage === twoonone.RoomStage.ROOM_STAGE_SENDING_CARD\">\r\n                            <ElButtonGroup size=\"large\">\r\n                                <ElButton :disabled=\"room.operator_now?.user?.id !== room.self?.user?.id\" @click=\"sendCard_action(get_selected_cards())\">出牌</ElButton>\r\n                                <ElButton :disabled=\"room.operator_now?.user?.id !== room.self?.user?.id\" @click=\"noSendCard_action\">不出牌</ElButton>\r\n                            </ElButtonGroup>\r\n                        </div>\r\n                    </ElCol>\r\n                </ElRow>\r\n                <ElRow>\r\n                    <ElCol>\r\n                        <div id=\"svg_self_cards\"></div>\r\n                    </ElCol>\r\n                </ElRow>\r\n            </ElFooter>\r\n        </ElContainer>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n    *{margin: 0;}\r\n    .svg_card {\r\n        user-select: none;\r\n        pointer-events: all;\r\n    }\r\n</style>","import script from \"./RoomDetailViewAsync.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./RoomDetailViewAsync.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./RoomDetailViewAsync.vue?vue&type=style&index=0&id=746c317b&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, createElementVNode as _createElementVNode, Suspense as _Suspense, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport { useRoute } from 'vue-router';\r\nimport RoomDetailViewAsync from './RoomDetailViewAsync.vue';\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'RoomDetailView',\n  setup(__props) {\n\r\nconst route = useRoute()\r\n\r\nconst room_hash = String(route.params.id)\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_Suspense, null, {\n    default: _withCtx(() => [\n      _createVNode(RoomDetailViewAsync, { room_hash: _unref(room_hash) }, null, 8, [\"room_hash\"])\n    ]),\n    fallback: _withCtx(() => _cache[0] || (_cache[0] = [\n      _createElementVNode(\"p\", null, \"loading...\", -1)\n    ])),\n    _: 1\n  }))\n}\n}\n\n})","<script lang=\"ts\" setup>\r\nimport { useRoute } from 'vue-router';\r\nimport RoomDetailViewAsync from './RoomDetailViewAsync.vue';\r\nconst route = useRoute()\r\n\r\nconst room_hash = String(route.params.id)\r\n</script>\r\n\r\n<template>\r\n    <Suspense>\r\n        <template #default>\r\n            <RoomDetailViewAsync :room_hash=\"room_hash\" />\r\n        </template>\r\n        <template #fallback>\r\n            <p>loading...</p>\r\n        </template>\r\n    </Suspense>\r\n</template>","import script from \"./RoomDetailView.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./RoomDetailView.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["RoomStage2Str","stage","twoonone","RoomStage","ROOM_STAGE_WAITTING_START","ROOM_STAGE_SENDING_CARD","ROOM_STAGE_ROB_LANDOWNERING","Role2Str","action","Role","ROLE_FARMER","ROLE_LANDOWNER","ROLE_UNKNOWN","CommonErrorNotice","e","api","Error","ERROR_UNKNOWN","ERROR_UNDEFINED","ERROR_INVALID_ARGUMENT","ERROR_NO_AUTH","ERROR_USER_NO_EXIST","ERROR_USER_INCOMPLETE","ERROR_USER_EXISTED","ERROR_ROOM_FULL","ERROR_ROOM_NO_EXIST","ERROR_ROOM_EXIST_PLAYER","ERROR_ROOM_NO_EXIST_PLAYER","ERROR_ROOM_NO_ROB_LANDOWNERING","ERROR_ROOM_NO_SENDING_CARD","ERROR_PLAYER_CARD_NO_EXIST","ERROR_PLAYER_NO_OPERATOR","ERROR_PLAYER_NO_EXIST","ERROR_PLAYER_ALREADY_GET_DALIY_COIN","ERROR_ROOM_NO_FULL","ERROR_ROOM_STARTED","ERROR_ROOM_NO_ROB_LANDOWNER","ERROR_SEND_CARD_TYPE_UNKNOWN","ERROR_SEND_CARD_TYPE_NE_LAST_CARD_TYPE","ERROR_SEND_CARD_CONTINUOUS_NE_LAST_CARD_CONTINUOUS","ERROR_SEND_CARD_SIZE_LE_LAST_CARD_SIZE","ERROR_PLAYER_EXISTED_A_ROOM","ERROR_PLAYER_COIN_LT_ROOM_COIN","ERROR_PLAYER_IS_ONLY_OPERATOR","_hasBuffer","Buffer","_TD","TextDecoder","undefined","b64ch","TextEncoder","b64chs","Array","prototype","slice","call","b64tab","a","tab","forEach","c","i","b64re","_fromCC","String","fromCharCode","bind","_U8Afrom","Uint8Array","from","it","_tidyB64","s","replace","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","length","charCodeAt","TypeError","substring","re_btou","cb_btou","cccc","cp","offset","btou","b","atobPolyfill","test","u24","r1","r2","charAt","_atob","atob","toString","_toUint8Array","split","map","_decode","decode","_unURI","m0","src","GetUserId","access_token","GetJSON","federated_claims","user_id","j_raw","fromBase64","JSON","parse","_hoisted_1","key","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","notice_interval","small","card_size","_defineComponent","__name","props","room_hash","setup","__props","__temp","__restore","dl_body","dl_display","ref","initalize","async","room_update","notice","msg","position","type","setTimeout","ElNotification","title","message","display_update","removeEventListener","players_card_display","addEventListener","last_card_display","resp","GetRoom","GetRoomRequest","create","console","error","ret","room_info","self","extra","hand_cards","sort","number","Object","assign","room","mounted","value","exit_action","ExitRoom","ExitRoomRequest","join_action","JoinRoom","start_action","player_infos","StartRoom","StartRoomRequest","robLandowner_action","RobLandowner","RobLandownerRequest","hash","noRobLandowner_action","NoRobLandowner","NoRobLandownerRequest","sendCard_action","cards","clear_selected_cards","SendCard","SendCardRequest","sendcards","noSendCard_action","NoSendCard","NoSendCardRequest","size","window","innerWidth","mini","normal","footer","document","getElementById","w","Number","getComputedStyle","width","h","height","display_cards","r2l","clear_last_card_display","v","parent","user","id","children","removeChild","last","at","sender_info","filter","getAttribute","get_selected_cards","svg","item","use","id2card","push","me","MouseEvent","buttons","dispatchEvent","room_event_update","stream","RoomEvent","ws","room_event_listen","er","log","RoblandownerIntoSendingcard","event","sendcarder_info","name","RoblandownerContinuousRob","multiple","SendcardSpringNotice","SendcardBoomNotice","SendcardKingboomNotice","GameFinish","Winner","SendcardCardnumberNotice","notice_target_info","RoomJoinPlayer","joiner_info","RoomExitPlayer","leaver_info","RoomStarted","next_operator_info","RoomRobLandowner","operator_info","RoomNorobLandowner","RoomSendcard","RoomNoSendcard","RoomReRoblandowner","get_card_stack_position","get_min_scale","card_basic_x","card_basic_y","card_interval","card_offset","card_min_scale","card_stack_position","card_select_offset","card_mini_basic_x","card_mini_basic_y","card_mini_crux_offset","get_card_size","basic_x","basic_y","calc_svg_size","max_col","row","cards2svg","cs","options","scale","is_self","ns","child_ns","createElementNS","col","entries","card2position","card","base_x","base_y","canvas_x","canvas_y","card2id","select","setAttribute","setAttributeNS","handle","style","getPropertyValue","xy","match","x","y","selected","removeAttribute","setProperty","onmousedown","onmouseenter","Math","abs","appendChild","classList","add","form_o_x","form_o_y","color","Card","A","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","TEN","J","Q","K","KING","JOKER","UNKNOWN","calc_cards_scale","c_len","min_scale","top_x","top_y","resize_y","parent_id","removeProperty","parent_w","replaceAll","parent_h","innerHeight","selects","newC","sel_c","splice","replaceChild","get_status","p","operator_now","reactive","watch","r","find","obj","LoginUser","then","catch","once","_withAsyncContext","onMounted","_ctx","_cache","_component_ElTableColumn","_resolveComponent","_component_ElTable","_openBlock","_createElementBlock","_Fragment","_createVNode","BaseDialog","_unref","modelValue","$event","_isRef","ElContainer","default","_withCtx","ElHeader","ElRow","ElSpace","_createElementVNode","ElButton","onClick","_createTextVNode","_","ElMain","direction","fill","ElCard","ElText","_toDisplayString","data","label","prop","justify","_renderList","_createBlock","ElCol","span","_normalizeStyle","xs","ElDescriptions","column","border","ElDescriptionsItem","table","role","cards_length","is_rtl","ElFooter","sm","md","lg","xl","ElButtonGroup","disabled","_createCommentVNode","__exports__","route","useRoute","params","_Suspense","RoomDetailViewAsync","fallback"],"sourceRoot":""}