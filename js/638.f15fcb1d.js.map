{"version":3,"file":"js/638.f15fcb1d.js","mappings":"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","sources":["webpack://uno-web/./node_modules/axios/lib/helpers/bind.js","webpack://uno-web/./node_modules/axios/lib/utils.js","webpack://uno-web/./node_modules/axios/lib/core/AxiosError.js","webpack://uno-web/./node_modules/axios/lib/helpers/null.js","webpack://uno-web/./node_modules/axios/lib/helpers/toFormData.js","webpack://uno-web/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://uno-web/./node_modules/axios/lib/helpers/buildURL.js","webpack://uno-web/./node_modules/axios/lib/core/InterceptorManager.js","webpack://uno-web/./node_modules/axios/lib/defaults/transitional.js","webpack://uno-web/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://uno-web/./node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://uno-web/./node_modules/axios/lib/platform/browser/classes/Blob.js","webpack://uno-web/./node_modules/axios/lib/platform/browser/index.js","webpack://uno-web/./node_modules/axios/lib/platform/common/utils.js","webpack://uno-web/./node_modules/axios/lib/platform/index.js","webpack://uno-web/./node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://uno-web/./node_modules/axios/lib/helpers/formDataToJSON.js","webpack://uno-web/./node_modules/axios/lib/defaults/index.js","webpack://uno-web/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://uno-web/./node_modules/axios/lib/core/AxiosHeaders.js","webpack://uno-web/./node_modules/axios/lib/core/transformData.js","webpack://uno-web/./node_modules/axios/lib/cancel/isCancel.js","webpack://uno-web/./node_modules/axios/lib/cancel/CanceledError.js","webpack://uno-web/./node_modules/axios/lib/core/settle.js","webpack://uno-web/./node_modules/axios/lib/helpers/parseProtocol.js","webpack://uno-web/./node_modules/axios/lib/helpers/speedometer.js","webpack://uno-web/./node_modules/axios/lib/helpers/throttle.js","webpack://uno-web/./node_modules/axios/lib/helpers/progressEventReducer.js","webpack://uno-web/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://uno-web/./node_modules/axios/lib/helpers/cookies.js","webpack://uno-web/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://uno-web/./node_modules/axios/lib/helpers/combineURLs.js","webpack://uno-web/./node_modules/axios/lib/core/buildFullPath.js","webpack://uno-web/./node_modules/axios/lib/core/mergeConfig.js","webpack://uno-web/./node_modules/axios/lib/helpers/resolveConfig.js","webpack://uno-web/./node_modules/axios/lib/adapters/xhr.js","webpack://uno-web/./node_modules/axios/lib/helpers/composeSignals.js","webpack://uno-web/./node_modules/axios/lib/helpers/trackStream.js","webpack://uno-web/./node_modules/axios/lib/adapters/fetch.js","webpack://uno-web/./node_modules/axios/lib/adapters/adapters.js","webpack://uno-web/./node_modules/axios/lib/core/dispatchRequest.js","webpack://uno-web/./node_modules/axios/lib/env/data.js","webpack://uno-web/./node_modules/axios/lib/helpers/validator.js","webpack://uno-web/./node_modules/axios/lib/core/Axios.js","webpack://uno-web/./node_modules/axios/lib/cancel/CancelToken.js","webpack://uno-web/./node_modules/axios/lib/helpers/spread.js","webpack://uno-web/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://uno-web/./node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://uno-web/./node_modules/axios/lib/axios.js","webpack://uno-web/./src/commons/twoonone/api.ts","webpack://uno-web/./node_modules/axios/index.js","webpack://uno-web/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://uno-web/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://uno-web/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://uno-web/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://uno-web/./src/commons/twoonone/define.ts","webpack://uno-web/./src/commons/twoonone/call.ts","webpack://uno-web/./node_modules/@protobufjs/aspromise/index.js","webpack://uno-web/./node_modules/@protobufjs/base64/index.js","webpack://uno-web/./node_modules/@protobufjs/eventemitter/index.js","webpack://uno-web/./node_modules/@protobufjs/float/index.js","webpack://uno-web/./node_modules/@protobufjs/inquire/index.js","webpack://uno-web/./node_modules/@protobufjs/pool/index.js","webpack://uno-web/./node_modules/@protobufjs/utf8/index.js","webpack://uno-web/./node_modules/protobufjs/minimal.js","webpack://uno-web/./node_modules/protobufjs/src/index-minimal.js","webpack://uno-web/./node_modules/protobufjs/src/reader.js","webpack://uno-web/./node_modules/protobufjs/src/reader_buffer.js","webpack://uno-web/./node_modules/protobufjs/src/roots.js","webpack://uno-web/./node_modules/protobufjs/src/rpc.js","webpack://uno-web/./node_modules/protobufjs/src/rpc/service.js","webpack://uno-web/./node_modules/protobufjs/src/util/longbits.js","webpack://uno-web/./node_modules/protobufjs/src/util/minimal.js","webpack://uno-web/./node_modules/protobufjs/src/writer.js","webpack://uno-web/./node_modules/protobufjs/src/writer_buffer.js","webpack://uno-web/./src/protos/proto.js","webpack://uno-web/./node_modules/core-js/internals/array-slice.js","webpack://uno-web/./node_modules/core-js/internals/environment-is-ios.js","webpack://uno-web/./node_modules/core-js/internals/function-apply.js","webpack://uno-web/./node_modules/core-js/internals/schedulers-fix.js","webpack://uno-web/./node_modules/core-js/internals/task.js","webpack://uno-web/./node_modules/core-js/modules/es.iterator.to-array.js","webpack://uno-web/./node_modules/core-js/modules/esnext.iterator.to-array.js","webpack://uno-web/./node_modules/core-js/modules/web.clear-immediate.js","webpack://uno-web/./node_modules/core-js/modules/web.immediate.js","webpack://uno-web/./node_modules/core-js/modules/web.set-immediate.js"],"sourcesContent":["'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.7.9\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","import axios, { AxiosRequestConfig } from \"axios\";\r\nimport { TWOONONE_API } from \"../Global\";\r\nimport { twoonone } from \"@/protos/proto\";\r\n\r\naxios.defaults.withCredentials = true\r\n\r\nconst prefix = '/v1'\r\n\r\nconst GetRooms = () => <AxiosRequestConfig>{\r\n    url: `${TWOONONE_API}${prefix}/rooms`,\r\n    method: \"get\"\r\n}\r\n\r\nconst GetRoom = (req: twoonone.GetRoomRequest) => <AxiosRequestConfig>{\r\n    url: `${TWOONONE_API}${prefix}/rooms/${req.room_hash}`,\r\n    method: \"get\"\r\n}\r\n\r\nconst GetDaliyCoin = () => <AxiosRequestConfig>{\r\n    url: `${TWOONONE_API}${prefix}/get_daliy_coin`,\r\n    method: \"get\",\r\n}\r\n\r\nconst CreateRoom = () => <AxiosRequestConfig>{\r\n    url: `${TWOONONE_API}${prefix}/rooms`,\r\n    method: 'post',\r\n}\r\n\r\nconst JoinRoom = (req: twoonone.JoinRoomRequest) => <AxiosRequestConfig>{\r\n    url: `${TWOONONE_API}${prefix}/rooms/${req.room_hash}/join`,\r\n    method: 'get',\r\n}\r\n\r\nconst ExitRoom = (req: twoonone.ExitRoomRequest) => <AxiosRequestConfig>{\r\n    url: `${TWOONONE_API}${prefix}/rooms/${req.room_hash}/exit`,\r\n    method: 'get',\r\n}\r\n\r\nconst RobLandowner = (req: twoonone.RobLandownerRequest) => <AxiosRequestConfig>{\r\n    url: `${TWOONONE_API}${prefix}/rooms/${req.room_hash}/play/robLandowner`,\r\n    method: 'get',\r\n}\r\n\r\nconst NoRobLandowner = (req: twoonone.NoRobLandownerRequest) => <AxiosRequestConfig>{\r\n    url: `${TWOONONE_API}${prefix}/rooms/${req.room_hash}/play/noRobLandowner`,\r\n    method: \"get\",\r\n}\r\n\r\nconst SendCard = (req: twoonone.SendCardRequest) => {\r\n    const j = JSON.stringify({\r\n        'sendcards': req.sendcards\r\n    })\r\n    console.log(j)\r\n    return <AxiosRequestConfig>{\r\n        url: `${TWOONONE_API}${prefix}/rooms/${req.room_hash}/play/sendCard`,\r\n        method: \"post\",\r\n        data: j,\r\n        headers: {\r\n            \"Content-Type\": 'application/json'\r\n        }\r\n    }\r\n}\r\n\r\nconst NoSendCard = (req: twoonone.NoSendCardRequest) => <AxiosRequestConfig>{\r\n    url: `${TWOONONE_API}${prefix}/rooms/${req.room_hash}/play/noSendCard`,\r\n    method: \"get\",\r\n}\r\n\r\nconst StartRoom = (req: twoonone.StartRoomRequest) => <AxiosRequestConfig>{\r\n    url: `${TWOONONE_API}${prefix}/rooms/${req.room_hash}/start`,\r\n    method: \"get\",\r\n}\r\n\r\nexport {\r\n    GetRoom,\r\n    GetRooms,\r\n    GetDaliyCoin,\r\n    CreateRoom,\r\n    JoinRoom,\r\n    ExitRoom,\r\n    RobLandowner,\r\n    NoRobLandowner,\r\n    SendCard,\r\n    NoSendCard,\r\n    StartRoom\r\n}","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import { twoonone } from \"@/protos/proto\";\r\n\r\nexport class BasicResponse {\r\n    code:twoonone.api.Error = twoonone.api.Error.ERROR_UNKNOWN\r\n    msg:string = \"API响应格式出错\"\r\n    data?:any\r\n}\r\n\r\nexport class TwoononeError extends Error {\r\n    code: twoonone.api.Error\r\n    msg: string\r\n\r\n    constructor(code:twoonone.api.Error, msg:string) {\r\n        super(`error code: ${code}, msg: ${msg}`)\r\n        this.code = code\r\n        this.msg = msg\r\n    }\r\n}","import { twoonone } from \"@/protos/proto\";\r\nimport * as api from \"./api\";\r\nimport axios, { HttpStatusCode } from \"axios\";\r\nimport { BasicResponse, TwoononeError } from \"./define\";\r\nimport { TWOONONE_API_HOST } from \"../Global\";\r\nimport { reactive, ref, watch } from \"vue\";\r\n\r\naxios.defaults.withCredentials = true\r\n\r\nasync function GetRooms():Promise<twoonone.GetRoomsResponse|twoonone.api.Error> {\r\n    const req_body = api.GetRooms()\r\n    try {\r\n        const resp = await axios.request(req_body)\r\n        const j = resp.data as BasicResponse\r\n        if (j.code !== 0) {\r\n            throw new TwoononeError(j.code, j.msg)\r\n        }\r\n        return new twoonone.GetRoomsResponse(j.data)\r\n    } catch (e) {\r\n        const code = errorHandle(e)\r\n        if (code !== undefined) {\r\n            return code\r\n        }\r\n    }\r\n    return twoonone.api.Error.ERROR_UNKNOWN\r\n}\r\n\r\nasync function GetRoom(req: twoonone.GetRoomRequest):Promise<twoonone.GetRoomResponse|twoonone.api.Error> {\r\n    const req_body = api.GetRoom(req)\r\n    try {\r\n        const resp = await axios.request(req_body)\r\n        const j = resp.data as BasicResponse\r\n        if (j.code !== 0) {\r\n            throw new TwoononeError(j.code, j.msg)\r\n        }\r\n        return new twoonone.GetRoomResponse(j.data)\r\n    } catch (e) {\r\n        const code = errorHandle(e)\r\n        if (code !== undefined) {\r\n            return code\r\n        }\r\n    }\r\n    return twoonone.api.Error.ERROR_UNKNOWN\r\n}\r\n\r\nasync function GetDaliyCoin(): Promise<twoonone.GetDailyCoinResponse|twoonone.api.Error> {\r\n    const req_body = api.GetDaliyCoin()\r\n    try {\r\n        const resp = await axios.request(req_body)\r\n        const j = resp.data as BasicResponse\r\n        if (j.code !== 0) {\r\n            throw new TwoononeError(j.code, j.msg)\r\n        }\r\n        return new twoonone.GetDailyCoinResponse(j.data)\r\n    } catch (e) {\r\n        const code = errorHandle(e)\r\n        if (code !== undefined) {\r\n            return code\r\n        }\r\n    }\r\n    return twoonone.api.Error.ERROR_UNKNOWN\r\n}\r\n\r\nasync function CreateRoom(): Promise<twoonone.CreateRoomResponse|twoonone.api.Error> {\r\n    const req_body = api.CreateRoom()\r\n    try {\r\n        const resp = await axios.request(req_body)\r\n        const j = resp.data as BasicResponse\r\n        if (j.code !== 0) {\r\n            throw new TwoononeError(j.code, j.msg)\r\n        }\r\n        return new twoonone.CreateRoomResponse(j.data)\r\n    } catch (e) {\r\n        const code = errorHandle(e)\r\n        if (code !== undefined) {\r\n            return code\r\n        }\r\n    }\r\n    return twoonone.api.Error.ERROR_UNKNOWN\r\n}\r\n\r\nasync function JoinRoom(req: twoonone.JoinRoomRequest): Promise<twoonone.JoinRoomResponse|twoonone.api.Error> {\r\n    const req_body = api.JoinRoom(req)\r\n    try {\r\n        const resp = await axios.request(req_body)\r\n        const j = resp.data as BasicResponse\r\n        if (j.code !== 0) {\r\n            throw new TwoononeError(j.code, j.msg)\r\n        }\r\n        return new twoonone.JoinRoomResponse(j.data)\r\n    } catch (e) {\r\n        const code = errorHandle(e)\r\n        if (code !== undefined) {\r\n            return code\r\n        }\r\n    }\r\n    return twoonone.api.Error.ERROR_UNKNOWN\r\n}\r\n\r\nasync function ExitRoom(req: twoonone.ExitRoomRequest): Promise<twoonone.ExitRoomResponse|twoonone.api.Error> {\r\n    const req_body = api.ExitRoom(req)\r\n    try {\r\n        const resp = await axios.request(req_body)\r\n        const j = resp.data as BasicResponse\r\n        if (j.code !== 0) {\r\n            throw new TwoononeError(j.code, j.msg)\r\n        }\r\n        return new twoonone.ExitRoomResponse(j.data)\r\n    } catch (e) {\r\n        const code = errorHandle(e)\r\n        if (code !== undefined) {\r\n            return code\r\n        }\r\n    }\r\n    return twoonone.api.Error.ERROR_UNKNOWN\r\n}\r\n\r\nasync function RobLandowner(req: twoonone.RobLandownerRequest): Promise<twoonone.RobLandownerResponse|twoonone.api.Error> {\r\n    const req_body = api.RobLandowner(req)\r\n    try {\r\n        const resp = await axios.request(req_body)\r\n        const j = resp.data as BasicResponse\r\n        if (j.code !== 0) {\r\n            throw new TwoononeError(j.code, j.msg)\r\n        }\r\n        return new twoonone.RobLandownerResponse(j.data)\r\n    } catch (e) {\r\n        const code = errorHandle(e)\r\n        if (code !== undefined) {\r\n            return code\r\n        }\r\n    }\r\n    return twoonone.api.Error.ERROR_UNKNOWN\r\n}\r\n\r\nasync function NoRobLandowner(req: twoonone.NoRobLandownerRequest): Promise<twoonone.NoRobLandownerResponse|twoonone.api.Error> {\r\n    const req_body = api.NoRobLandowner(req)\r\n    try {\r\n        const resp = await axios.request(req_body)\r\n        const j = resp.data as BasicResponse\r\n        if (j.code !== 0) {\r\n            throw new TwoononeError(j.code, j.msg)\r\n        }\r\n        return new twoonone.NoRobLandownerResponse(j.data)\r\n    } catch (e) {\r\n        const code = errorHandle(e)\r\n        if (code !== undefined) {\r\n            return code\r\n        }\r\n    }\r\n    return twoonone.api.Error.ERROR_UNKNOWN\r\n}\r\n\r\nasync function SendCard(req: twoonone.SendCardRequest): Promise<twoonone.SendCardResponse|twoonone.api.Error> {\r\n    const req_body = api.SendCard(req)\r\n    try {\r\n        const resp = await axios.request(req_body)\r\n        const j = resp.data as BasicResponse\r\n        if (j.code !== 0) {\r\n            throw new TwoononeError(j.code, j.msg)\r\n        }\r\n        return new twoonone.SendCardResponse(j.data)\r\n    } catch (e) {\r\n        const code = errorHandle(e)\r\n        if (code !== undefined) {\r\n            return code\r\n        }\r\n    }\r\n    return twoonone.api.Error.ERROR_UNKNOWN\r\n}\r\n\r\nasync function NoSendCard(req: twoonone.NoSendCardRequest): Promise<twoonone.NoSendCardResponse|twoonone.api.Error> {\r\n    const req_body = api.NoSendCard(req)\r\n    try {\r\n        const resp = await axios.request(req_body)\r\n        const j = resp.data as BasicResponse\r\n        if (j.code !== 0) {\r\n            throw new TwoononeError(j.code, j.msg)\r\n        }\r\n        return new twoonone.NoSendCardResponse(j.data)\r\n    } catch (e) {\r\n        const code = errorHandle(e)\r\n        if (code !== undefined) {\r\n            return code\r\n        }\r\n    }\r\n    return twoonone.api.Error.ERROR_UNKNOWN\r\n}\r\n\r\nasync function StartRoom(req: twoonone.StartRoomRequest): Promise<twoonone.StartRoomResponse|twoonone.api.Error> {\r\n    const req_body = api.StartRoom(req)\r\n    try {\r\n        const resp = await axios.request(req_body)\r\n        const j = resp.data as BasicResponse\r\n        if (j.code !== 0) {\r\n            throw new TwoononeError(j.code, j.msg)\r\n        }\r\n        return new twoonone.StartRoomResponse(j.data)\r\n    } catch (e) {\r\n        const code = errorHandle(e)\r\n        if (code !== undefined) {\r\n            return code\r\n        }\r\n    }\r\n    return twoonone.api.Error.ERROR_UNKNOWN\r\n}\r\n\r\nasync function RoomEvent(): Promise<AsyncGenerator<twoonone.RoomEventResponse, void, unknown>|twoonone.api.Error> {\r\n    let ws:WebSocket\r\n    const state = ref<{err?: Error}>({})\r\n    const msg = reactive<MessageEvent[]>(new Array<MessageEvent>)\r\n    const closed = ref<CloseEvent>(new CloseEvent(''))\r\n    const wait = new Promise<void>((done) => {\r\n        watch(state, () => done(), {once: true})\r\n    })\r\n    // 判断是否连接失败\r\n    new Promise<void>((done, reject) => {\r\n        watch(state, \r\n        v => {\r\n            if (v.err !== undefined) {\r\n                reject(v.err)\r\n            } else {\r\n                done()\r\n            }\r\n        },\r\n        {once: true})\r\n    }).catch(e => {\r\n        throw e\r\n    })\r\n    new Promise(() => {\r\n        ws = new WebSocket(`wss://${TWOONONE_API_HOST}/ws`)\r\n        ws.onmessage = async me => {\r\n            console.log('onmessage trigger')\r\n            msg.push(me)\r\n        }\r\n        ws.onclose = e => closed.value = e\r\n        ws.onopen = () => state.value = {}\r\n        ws.onerror = () => state.value = {err: Error('连接websocket失败')}\r\n    })\r\n    // 等待连接状态改变\r\n    await wait\r\n    // 判断是否为错误响应\r\n    try {\r\n        const code = await new Promise<twoonone.api.Error>((done,reject) => {\r\n            // 等待0.5秒\r\n            const timer_id = setTimeout(() => reject(), 500)\r\n            watch(msg,\r\n                mes => {\r\n                    clearTimeout(timer_id)\r\n                    const me = mes.at(mes.length-1)\r\n                    if (me === undefined) {\r\n                        console.error(undefined)\r\n                        reject(undefined)\r\n                        return\r\n                    }\r\n                    const j = JSON.parse(me.data)\r\n                    if ((j as BasicResponse).code !== 0) {\r\n                        done(j.code)\r\n                    } else {\r\n                        reject()\r\n                    }\r\n                },\r\n                {once: true}\r\n            )\r\n        })\r\n        return code\r\n    } catch (e) {\r\n        if (e instanceof Error) throw e\r\n    }\r\n    const sync = (async function* () {\r\n        const handle = (me: MessageEvent) => {\r\n            const j = JSON.parse(me.data)\r\n            if (j.code !== 0) return\r\n            return j.data.Body as twoonone.RoomEventResponse\r\n        }\r\n        while (true) {\r\n            const ret = await (async () => new Promise<twoonone.RoomEventResponse|undefined>((done => {\r\n                    if (msg.length > 0) {\r\n                        const me = msg.shift()\r\n                        if (me === undefined) return\r\n                        done(handle(me))\r\n                        return\r\n                    }\r\n                    watch(msg, (mes) => {\r\n                        const me = mes.shift()\r\n                        if (me === undefined) return\r\n                        done(handle(me))\r\n                    }, {once: true})\r\n                }))\r\n            )()\r\n            if (ret === undefined) {\r\n                return\r\n            }\r\n            console.log('ret')\r\n            yield ret\r\n        }\r\n    })()\r\n    // 连接断开后处理\r\n    watch(closed, (e) => {\r\n        console.log('websocket 连接断开', e)\r\n        sync.return()\r\n    })\r\n    return sync\r\n}\r\n\r\nexport {\r\n    GetRoom,\r\n    GetRooms,\r\n    GetDaliyCoin,\r\n    CreateRoom,\r\n    JoinRoom,\r\n    ExitRoom,\r\n    RobLandowner,\r\n    NoRobLandowner,\r\n    SendCard,\r\n    NoSendCard,\r\n    StartRoom,\r\n    RoomEvent\r\n}\r\n\r\nfunction statusCode2Error(code: HttpStatusCode):twoonone.api.Error|undefined {\r\n    if (code === HttpStatusCode.Ok) {\r\n        return\r\n    } else if (code === HttpStatusCode.Unauthorized) {\r\n        return twoonone.api.Error.ERROR_NO_AUTH\r\n    }\r\n}\r\n\r\nconst errorHandle = (e: any) => {\r\n    if (e instanceof axios.AxiosError) {\r\n        const code = statusCode2Error(e.status!)\r\n        if (code !== undefined) return code\r\n    } else if (e instanceof TwoononeError) {\r\n        console.error(e)\r\n        return e.code\r\n    } else {\r\n        console.error(e)\r\n    }\r\n}","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n/* eslint-disable */\nimport * as $protobuf from \"protobufjs/minimal\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const twoonone = $root.twoonone = (() => {\n\n    /**\n     * Namespace twoonone.\n     * @exports twoonone\n     * @namespace\n     */\n    const twoonone = {};\n\n    twoonone.api = (function() {\n\n        /**\n         * Namespace api.\n         * @memberof twoonone\n         * @namespace\n         */\n        const api = {};\n\n        /**\n         * Error enum.\n         * @name twoonone.api.Error\n         * @enum {number}\n         * @property {number} ERROR_UNKNOWN=0 ERROR_UNKNOWN value\n         * @property {number} ERROR_UNDEFINED=1 ERROR_UNDEFINED value\n         * @property {number} ERROR_INVALID_ARGUMENT=2 ERROR_INVALID_ARGUMENT value\n         * @property {number} ERROR_NO_AUTH=1001 ERROR_NO_AUTH value\n         * @property {number} ERROR_USER_NO_EXIST=1002 ERROR_USER_NO_EXIST value\n         * @property {number} ERROR_USER_INCOMPLETE=1003 ERROR_USER_INCOMPLETE value\n         * @property {number} ERROR_USER_EXISTED=1004 ERROR_USER_EXISTED value\n         * @property {number} ERROR_ROOM_FULL=2001 ERROR_ROOM_FULL value\n         * @property {number} ERROR_ROOM_NO_EXIST=2002 ERROR_ROOM_NO_EXIST value\n         * @property {number} ERROR_ROOM_EXIST_PLAYER=2003 ERROR_ROOM_EXIST_PLAYER value\n         * @property {number} ERROR_ROOM_NO_EXIST_PLAYER=2004 ERROR_ROOM_NO_EXIST_PLAYER value\n         * @property {number} ERROR_ROOM_NO_ROB_LANDOWNERING=2005 ERROR_ROOM_NO_ROB_LANDOWNERING value\n         * @property {number} ERROR_ROOM_NO_SENDING_CARD=2006 ERROR_ROOM_NO_SENDING_CARD value\n         * @property {number} ERROR_PLAYER_CARD_NO_EXIST=2007 ERROR_PLAYER_CARD_NO_EXIST value\n         * @property {number} ERROR_PLAYER_NO_OPERATOR=2008 ERROR_PLAYER_NO_OPERATOR value\n         * @property {number} ERROR_PLAYER_NO_EXIST=2009 ERROR_PLAYER_NO_EXIST value\n         * @property {number} ERROR_PLAYER_ALREADY_GET_DALIY_COIN=2010 ERROR_PLAYER_ALREADY_GET_DALIY_COIN value\n         * @property {number} ERROR_ROOM_NO_FULL=2011 ERROR_ROOM_NO_FULL value\n         * @property {number} ERROR_ROOM_STARTED=2012 ERROR_ROOM_STARTED value\n         * @property {number} ERROR_ROOM_NO_ROB_LANDOWNER=2013 ERROR_ROOM_NO_ROB_LANDOWNER value\n         * @property {number} ERROR_SEND_CARD_TYPE_UNKNOWN=2014 ERROR_SEND_CARD_TYPE_UNKNOWN value\n         * @property {number} ERROR_SEND_CARD_TYPE_NE_LAST_CARD_TYPE=2015 ERROR_SEND_CARD_TYPE_NE_LAST_CARD_TYPE value\n         * @property {number} ERROR_SEND_CARD_CONTINUOUS_NE_LAST_CARD_CONTINUOUS=2016 ERROR_SEND_CARD_CONTINUOUS_NE_LAST_CARD_CONTINUOUS value\n         * @property {number} ERROR_SEND_CARD_SIZE_LE_LAST_CARD_SIZE=2017 ERROR_SEND_CARD_SIZE_LE_LAST_CARD_SIZE value\n         * @property {number} ERROR_PLAYER_EXISTED_A_ROOM=2018 ERROR_PLAYER_EXISTED_A_ROOM value\n         * @property {number} ERROR_PLAYER_COIN_LT_ROOM_COIN=2019 ERROR_PLAYER_COIN_LT_ROOM_COIN value\n         * @property {number} ERROR_PLAYER_IS_ONLY_OPERATOR=2020 ERROR_PLAYER_IS_ONLY_OPERATOR value\n         */\n        api.Error = (function() {\n            const valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"ERROR_UNKNOWN\"] = 0;\n            values[valuesById[1] = \"ERROR_UNDEFINED\"] = 1;\n            values[valuesById[2] = \"ERROR_INVALID_ARGUMENT\"] = 2;\n            values[valuesById[1001] = \"ERROR_NO_AUTH\"] = 1001;\n            values[valuesById[1002] = \"ERROR_USER_NO_EXIST\"] = 1002;\n            values[valuesById[1003] = \"ERROR_USER_INCOMPLETE\"] = 1003;\n            values[valuesById[1004] = \"ERROR_USER_EXISTED\"] = 1004;\n            values[valuesById[2001] = \"ERROR_ROOM_FULL\"] = 2001;\n            values[valuesById[2002] = \"ERROR_ROOM_NO_EXIST\"] = 2002;\n            values[valuesById[2003] = \"ERROR_ROOM_EXIST_PLAYER\"] = 2003;\n            values[valuesById[2004] = \"ERROR_ROOM_NO_EXIST_PLAYER\"] = 2004;\n            values[valuesById[2005] = \"ERROR_ROOM_NO_ROB_LANDOWNERING\"] = 2005;\n            values[valuesById[2006] = \"ERROR_ROOM_NO_SENDING_CARD\"] = 2006;\n            values[valuesById[2007] = \"ERROR_PLAYER_CARD_NO_EXIST\"] = 2007;\n            values[valuesById[2008] = \"ERROR_PLAYER_NO_OPERATOR\"] = 2008;\n            values[valuesById[2009] = \"ERROR_PLAYER_NO_EXIST\"] = 2009;\n            values[valuesById[2010] = \"ERROR_PLAYER_ALREADY_GET_DALIY_COIN\"] = 2010;\n            values[valuesById[2011] = \"ERROR_ROOM_NO_FULL\"] = 2011;\n            values[valuesById[2012] = \"ERROR_ROOM_STARTED\"] = 2012;\n            values[valuesById[2013] = \"ERROR_ROOM_NO_ROB_LANDOWNER\"] = 2013;\n            values[valuesById[2014] = \"ERROR_SEND_CARD_TYPE_UNKNOWN\"] = 2014;\n            values[valuesById[2015] = \"ERROR_SEND_CARD_TYPE_NE_LAST_CARD_TYPE\"] = 2015;\n            values[valuesById[2016] = \"ERROR_SEND_CARD_CONTINUOUS_NE_LAST_CARD_CONTINUOUS\"] = 2016;\n            values[valuesById[2017] = \"ERROR_SEND_CARD_SIZE_LE_LAST_CARD_SIZE\"] = 2017;\n            values[valuesById[2018] = \"ERROR_PLAYER_EXISTED_A_ROOM\"] = 2018;\n            values[valuesById[2019] = \"ERROR_PLAYER_COIN_LT_ROOM_COIN\"] = 2019;\n            values[valuesById[2020] = \"ERROR_PLAYER_IS_ONLY_OPERATOR\"] = 2020;\n            return values;\n        })();\n\n        return api;\n    })();\n\n    /**\n     * Role enum.\n     * @name twoonone.Role\n     * @enum {number}\n     * @property {number} ROLE_UNKNOWN=0 ROLE_UNKNOWN value\n     * @property {number} ROLE_LANDOWNER=1 ROLE_LANDOWNER value\n     * @property {number} ROLE_FARMER=2 ROLE_FARMER value\n     */\n    twoonone.Role = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"ROLE_UNKNOWN\"] = 0;\n        values[valuesById[1] = \"ROLE_LANDOWNER\"] = 1;\n        values[valuesById[2] = \"ROLE_FARMER\"] = 2;\n        return values;\n    })();\n\n    twoonone.Card = (function() {\n\n        /**\n         * Properties of a Card.\n         * @memberof twoonone\n         * @interface ICard\n         * @property {twoonone.Card.Number|null} [number] Card number\n         */\n\n        /**\n         * Constructs a new Card.\n         * @memberof twoonone\n         * @classdesc Represents a Card.\n         * @implements ICard\n         * @constructor\n         * @param {twoonone.ICard=} [properties] Properties to set\n         */\n        function Card(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Card number.\n         * @member {twoonone.Card.Number} number\n         * @memberof twoonone.Card\n         * @instance\n         */\n        Card.prototype.number = 0;\n\n        /**\n         * Creates a new Card instance using the specified properties.\n         * @function create\n         * @memberof twoonone.Card\n         * @static\n         * @param {twoonone.ICard=} [properties] Properties to set\n         * @returns {twoonone.Card} Card instance\n         */\n        Card.create = function create(properties) {\n            return new Card(properties);\n        };\n\n        /**\n         * Encodes the specified Card message. Does not implicitly {@link twoonone.Card.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.Card\n         * @static\n         * @param {twoonone.ICard} message Card message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Card.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.number != null && Object.hasOwnProperty.call(message, \"number\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.number);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified Card message, length delimited. Does not implicitly {@link twoonone.Card.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.Card\n         * @static\n         * @param {twoonone.ICard} message Card message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Card.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a Card message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.Card\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.Card} Card\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Card.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.Card();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.number = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a Card message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.Card\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.Card} Card\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Card.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a Card message.\n         * @function verify\n         * @memberof twoonone.Card\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        Card.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.number != null && message.hasOwnProperty(\"number\"))\n                switch (message.number) {\n                default:\n                    return \"number: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                case 14:\n                case 15:\n                    break;\n                }\n            return null;\n        };\n\n        /**\n         * Creates a Card message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.Card\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.Card} Card\n         */\n        Card.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.Card)\n                return object;\n            let message = new $root.twoonone.Card();\n            switch (object.number) {\n            default:\n                if (typeof object.number === \"number\") {\n                    message.number = object.number;\n                    break;\n                }\n                break;\n            case \"UNKNOWN\":\n            case 0:\n                message.number = 0;\n                break;\n            case \"THREE\":\n            case 1:\n                message.number = 1;\n                break;\n            case \"FOUR\":\n            case 2:\n                message.number = 2;\n                break;\n            case \"FIVE\":\n            case 3:\n                message.number = 3;\n                break;\n            case \"SIX\":\n            case 4:\n                message.number = 4;\n                break;\n            case \"SEVEN\":\n            case 5:\n                message.number = 5;\n                break;\n            case \"EIGHT\":\n            case 6:\n                message.number = 6;\n                break;\n            case \"NINE\":\n            case 7:\n                message.number = 7;\n                break;\n            case \"TEN\":\n            case 8:\n                message.number = 8;\n                break;\n            case \"J\":\n            case 9:\n                message.number = 9;\n                break;\n            case \"Q\":\n            case 10:\n                message.number = 10;\n                break;\n            case \"K\":\n            case 11:\n                message.number = 11;\n                break;\n            case \"A\":\n            case 12:\n                message.number = 12;\n                break;\n            case \"TWO\":\n            case 13:\n                message.number = 13;\n                break;\n            case \"JOKER\":\n            case 14:\n                message.number = 14;\n                break;\n            case \"KING\":\n            case 15:\n                message.number = 15;\n                break;\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a Card message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.Card\n         * @static\n         * @param {twoonone.Card} message Card\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Card.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.number = options.enums === String ? \"UNKNOWN\" : 0;\n            if (message.number != null && message.hasOwnProperty(\"number\"))\n                object.number = options.enums === String ? $root.twoonone.Card.Number[message.number] === undefined ? message.number : $root.twoonone.Card.Number[message.number] : message.number;\n            return object;\n        };\n\n        /**\n         * Converts this Card to JSON.\n         * @function toJSON\n         * @memberof twoonone.Card\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Card.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for Card\n         * @function getTypeUrl\n         * @memberof twoonone.Card\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        Card.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.Card\";\n        };\n\n        /**\n         * Number enum.\n         * @name twoonone.Card.Number\n         * @enum {number}\n         * @property {number} UNKNOWN=0 UNKNOWN value\n         * @property {number} THREE=1 THREE value\n         * @property {number} FOUR=2 FOUR value\n         * @property {number} FIVE=3 FIVE value\n         * @property {number} SIX=4 SIX value\n         * @property {number} SEVEN=5 SEVEN value\n         * @property {number} EIGHT=6 EIGHT value\n         * @property {number} NINE=7 NINE value\n         * @property {number} TEN=8 TEN value\n         * @property {number} J=9 J value\n         * @property {number} Q=10 Q value\n         * @property {number} K=11 K value\n         * @property {number} A=12 A value\n         * @property {number} TWO=13 TWO value\n         * @property {number} JOKER=14 JOKER value\n         * @property {number} KING=15 KING value\n         */\n        Card.Number = (function() {\n            const valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNKNOWN\"] = 0;\n            values[valuesById[1] = \"THREE\"] = 1;\n            values[valuesById[2] = \"FOUR\"] = 2;\n            values[valuesById[3] = \"FIVE\"] = 3;\n            values[valuesById[4] = \"SIX\"] = 4;\n            values[valuesById[5] = \"SEVEN\"] = 5;\n            values[valuesById[6] = \"EIGHT\"] = 6;\n            values[valuesById[7] = \"NINE\"] = 7;\n            values[valuesById[8] = \"TEN\"] = 8;\n            values[valuesById[9] = \"J\"] = 9;\n            values[valuesById[10] = \"Q\"] = 10;\n            values[valuesById[11] = \"K\"] = 11;\n            values[valuesById[12] = \"A\"] = 12;\n            values[valuesById[13] = \"TWO\"] = 13;\n            values[valuesById[14] = \"JOKER\"] = 14;\n            values[valuesById[15] = \"KING\"] = 15;\n            return values;\n        })();\n\n        return Card;\n    })();\n\n    /**\n     * CardType enum.\n     * @name twoonone.CardType\n     * @enum {number}\n     * @property {number} CARD_TYPE_UNKNOWN=0 CARD_TYPE_UNKNOWN value\n     * @property {number} CARD_TYPE_KING_BOOM=1 CARD_TYPE_KING_BOOM value\n     * @property {number} CARD_TYPE_SINGLE=2 CARD_TYPE_SINGLE value\n     * @property {number} CARD_TYPE_DOUBLE=3 CARD_TYPE_DOUBLE value\n     * @property {number} CARD_TYPE_THREE_CARD=4 CARD_TYPE_THREE_CARD value\n     * @property {number} CARD_TYPE_THREE_WITH_SINGLE=5 CARD_TYPE_THREE_WITH_SINGLE value\n     * @property {number} CARD_TYPE_THREE_WITH_DOUBLE=6 CARD_TYPE_THREE_WITH_DOUBLE value\n     * @property {number} CARD_TYPE_BOOM=7 CARD_TYPE_BOOM value\n     * @property {number} CARD_TYPE_FOUR_WITH_TWO_SINGLE=8 CARD_TYPE_FOUR_WITH_TWO_SINGLE value\n     * @property {number} CARD_TYPE_FOUR_WITH_TWO_DOUBLE=9 CARD_TYPE_FOUR_WITH_TWO_DOUBLE value\n     * @property {number} CARD_TYPE_SINGLE_SEQUENCE=10 CARD_TYPE_SINGLE_SEQUENCE value\n     * @property {number} CARD_TYPE_DOUBLE_SEQUENCE=11 CARD_TYPE_DOUBLE_SEQUENCE value\n     * @property {number} CARD_TYPE_AIR_SEQUENCE=12 CARD_TYPE_AIR_SEQUENCE value\n     * @property {number} CARD_TYPE_AIR_SEQUENCE_WITH_TWO_SINGLE=13 CARD_TYPE_AIR_SEQUENCE_WITH_TWO_SINGLE value\n     * @property {number} CARD_TYPE_AIR_SEQUENCE_WITH_TWO_DOUBLE=14 CARD_TYPE_AIR_SEQUENCE_WITH_TWO_DOUBLE value\n     */\n    twoonone.CardType = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"CARD_TYPE_UNKNOWN\"] = 0;\n        values[valuesById[1] = \"CARD_TYPE_KING_BOOM\"] = 1;\n        values[valuesById[2] = \"CARD_TYPE_SINGLE\"] = 2;\n        values[valuesById[3] = \"CARD_TYPE_DOUBLE\"] = 3;\n        values[valuesById[4] = \"CARD_TYPE_THREE_CARD\"] = 4;\n        values[valuesById[5] = \"CARD_TYPE_THREE_WITH_SINGLE\"] = 5;\n        values[valuesById[6] = \"CARD_TYPE_THREE_WITH_DOUBLE\"] = 6;\n        values[valuesById[7] = \"CARD_TYPE_BOOM\"] = 7;\n        values[valuesById[8] = \"CARD_TYPE_FOUR_WITH_TWO_SINGLE\"] = 8;\n        values[valuesById[9] = \"CARD_TYPE_FOUR_WITH_TWO_DOUBLE\"] = 9;\n        values[valuesById[10] = \"CARD_TYPE_SINGLE_SEQUENCE\"] = 10;\n        values[valuesById[11] = \"CARD_TYPE_DOUBLE_SEQUENCE\"] = 11;\n        values[valuesById[12] = \"CARD_TYPE_AIR_SEQUENCE\"] = 12;\n        values[valuesById[13] = \"CARD_TYPE_AIR_SEQUENCE_WITH_TWO_SINGLE\"] = 13;\n        values[valuesById[14] = \"CARD_TYPE_AIR_SEQUENCE_WITH_TWO_DOUBLE\"] = 14;\n        return values;\n    })();\n\n    twoonone.RobLandownerInfo = (function() {\n\n        /**\n         * Properties of a RobLandownerInfo.\n         * @memberof twoonone\n         * @interface IRobLandownerInfo\n         * @property {twoonone.RobLandownerInfo.Action|null} [action] RobLandownerInfo action\n         * @property {number|Long|null} [action_time] RobLandownerInfo action_time\n         */\n\n        /**\n         * Constructs a new RobLandownerInfo.\n         * @memberof twoonone\n         * @classdesc Represents a RobLandownerInfo.\n         * @implements IRobLandownerInfo\n         * @constructor\n         * @param {twoonone.IRobLandownerInfo=} [properties] Properties to set\n         */\n        function RobLandownerInfo(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * RobLandownerInfo action.\n         * @member {twoonone.RobLandownerInfo.Action} action\n         * @memberof twoonone.RobLandownerInfo\n         * @instance\n         */\n        RobLandownerInfo.prototype.action = 0;\n\n        /**\n         * RobLandownerInfo action_time.\n         * @member {number|Long} action_time\n         * @memberof twoonone.RobLandownerInfo\n         * @instance\n         */\n        RobLandownerInfo.prototype.action_time = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new RobLandownerInfo instance using the specified properties.\n         * @function create\n         * @memberof twoonone.RobLandownerInfo\n         * @static\n         * @param {twoonone.IRobLandownerInfo=} [properties] Properties to set\n         * @returns {twoonone.RobLandownerInfo} RobLandownerInfo instance\n         */\n        RobLandownerInfo.create = function create(properties) {\n            return new RobLandownerInfo(properties);\n        };\n\n        /**\n         * Encodes the specified RobLandownerInfo message. Does not implicitly {@link twoonone.RobLandownerInfo.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.RobLandownerInfo\n         * @static\n         * @param {twoonone.IRobLandownerInfo} message RobLandownerInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RobLandownerInfo.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.action != null && Object.hasOwnProperty.call(message, \"action\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.action);\n            if (message.action_time != null && Object.hasOwnProperty.call(message, \"action_time\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.action_time);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RobLandownerInfo message, length delimited. Does not implicitly {@link twoonone.RobLandownerInfo.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.RobLandownerInfo\n         * @static\n         * @param {twoonone.IRobLandownerInfo} message RobLandownerInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RobLandownerInfo.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RobLandownerInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.RobLandownerInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.RobLandownerInfo} RobLandownerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RobLandownerInfo.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RobLandownerInfo();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.action = reader.int32();\n                        break;\n                    }\n                case 2: {\n                        message.action_time = reader.int64();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RobLandownerInfo message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.RobLandownerInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.RobLandownerInfo} RobLandownerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RobLandownerInfo.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RobLandownerInfo message.\n         * @function verify\n         * @memberof twoonone.RobLandownerInfo\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RobLandownerInfo.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.action != null && message.hasOwnProperty(\"action\"))\n                switch (message.action) {\n                default:\n                    return \"action: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                    break;\n                }\n            if (message.action_time != null && message.hasOwnProperty(\"action_time\"))\n                if (!$util.isInteger(message.action_time) && !(message.action_time && $util.isInteger(message.action_time.low) && $util.isInteger(message.action_time.high)))\n                    return \"action_time: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RobLandownerInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.RobLandownerInfo\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.RobLandownerInfo} RobLandownerInfo\n         */\n        RobLandownerInfo.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.RobLandownerInfo)\n                return object;\n            let message = new $root.twoonone.RobLandownerInfo();\n            switch (object.action) {\n            default:\n                if (typeof object.action === \"number\") {\n                    message.action = object.action;\n                    break;\n                }\n                break;\n            case \"ACTION_EMPTY\":\n            case 0:\n                message.action = 0;\n                break;\n            case \"ACTION_ROB\":\n            case 1:\n                message.action = 1;\n                break;\n            case \"ACTION_NO_ROB\":\n            case 2:\n                message.action = 2;\n                break;\n            }\n            if (object.action_time != null)\n                if ($util.Long)\n                    (message.action_time = $util.Long.fromValue(object.action_time)).unsigned = false;\n                else if (typeof object.action_time === \"string\")\n                    message.action_time = parseInt(object.action_time, 10);\n                else if (typeof object.action_time === \"number\")\n                    message.action_time = object.action_time;\n                else if (typeof object.action_time === \"object\")\n                    message.action_time = new $util.LongBits(object.action_time.low >>> 0, object.action_time.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a RobLandownerInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.RobLandownerInfo\n         * @static\n         * @param {twoonone.RobLandownerInfo} message RobLandownerInfo\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RobLandownerInfo.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.action = options.enums === String ? \"ACTION_EMPTY\" : 0;\n                if ($util.Long) {\n                    let long = new $util.Long(0, 0, false);\n                    object.action_time = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.action_time = options.longs === String ? \"0\" : 0;\n            }\n            if (message.action != null && message.hasOwnProperty(\"action\"))\n                object.action = options.enums === String ? $root.twoonone.RobLandownerInfo.Action[message.action] === undefined ? message.action : $root.twoonone.RobLandownerInfo.Action[message.action] : message.action;\n            if (message.action_time != null && message.hasOwnProperty(\"action_time\"))\n                if (typeof message.action_time === \"number\")\n                    object.action_time = options.longs === String ? String(message.action_time) : message.action_time;\n                else\n                    object.action_time = options.longs === String ? $util.Long.prototype.toString.call(message.action_time) : options.longs === Number ? new $util.LongBits(message.action_time.low >>> 0, message.action_time.high >>> 0).toNumber() : message.action_time;\n            return object;\n        };\n\n        /**\n         * Converts this RobLandownerInfo to JSON.\n         * @function toJSON\n         * @memberof twoonone.RobLandownerInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RobLandownerInfo.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RobLandownerInfo\n         * @function getTypeUrl\n         * @memberof twoonone.RobLandownerInfo\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RobLandownerInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.RobLandownerInfo\";\n        };\n\n        /**\n         * Action enum.\n         * @name twoonone.RobLandownerInfo.Action\n         * @enum {number}\n         * @property {number} ACTION_EMPTY=0 ACTION_EMPTY value\n         * @property {number} ACTION_ROB=1 ACTION_ROB value\n         * @property {number} ACTION_NO_ROB=2 ACTION_NO_ROB value\n         */\n        RobLandownerInfo.Action = (function() {\n            const valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"ACTION_EMPTY\"] = 0;\n            values[valuesById[1] = \"ACTION_ROB\"] = 1;\n            values[valuesById[2] = \"ACTION_NO_ROB\"] = 2;\n            return values;\n        })();\n\n        return RobLandownerInfo;\n    })();\n\n    twoonone.SendCard = (function() {\n\n        /**\n         * Properties of a SendCard.\n         * @memberof twoonone\n         * @interface ISendCard\n         * @property {twoonone.IPlayerInfo|null} [sender_info] SendCard sender_info\n         * @property {Array.<twoonone.ICard>|null} [sendcards] SendCard sendcards\n         * @property {twoonone.CardType|null} [sendcard_type] SendCard sendcard_type\n         * @property {number|null} [sendcard_size] SendCard sendcard_size\n         * @property {number|null} [sendcard_continuous] SendCard sendcard_continuous\n         */\n\n        /**\n         * Constructs a new SendCard.\n         * @memberof twoonone\n         * @classdesc Represents a SendCard.\n         * @implements ISendCard\n         * @constructor\n         * @param {twoonone.ISendCard=} [properties] Properties to set\n         */\n        function SendCard(properties) {\n            this.sendcards = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SendCard sender_info.\n         * @member {twoonone.IPlayerInfo|null|undefined} sender_info\n         * @memberof twoonone.SendCard\n         * @instance\n         */\n        SendCard.prototype.sender_info = null;\n\n        /**\n         * SendCard sendcards.\n         * @member {Array.<twoonone.ICard>} sendcards\n         * @memberof twoonone.SendCard\n         * @instance\n         */\n        SendCard.prototype.sendcards = $util.emptyArray;\n\n        /**\n         * SendCard sendcard_type.\n         * @member {twoonone.CardType} sendcard_type\n         * @memberof twoonone.SendCard\n         * @instance\n         */\n        SendCard.prototype.sendcard_type = 0;\n\n        /**\n         * SendCard sendcard_size.\n         * @member {number} sendcard_size\n         * @memberof twoonone.SendCard\n         * @instance\n         */\n        SendCard.prototype.sendcard_size = 0;\n\n        /**\n         * SendCard sendcard_continuous.\n         * @member {number} sendcard_continuous\n         * @memberof twoonone.SendCard\n         * @instance\n         */\n        SendCard.prototype.sendcard_continuous = 0;\n\n        /**\n         * Creates a new SendCard instance using the specified properties.\n         * @function create\n         * @memberof twoonone.SendCard\n         * @static\n         * @param {twoonone.ISendCard=} [properties] Properties to set\n         * @returns {twoonone.SendCard} SendCard instance\n         */\n        SendCard.create = function create(properties) {\n            return new SendCard(properties);\n        };\n\n        /**\n         * Encodes the specified SendCard message. Does not implicitly {@link twoonone.SendCard.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.SendCard\n         * @static\n         * @param {twoonone.ISendCard} message SendCard message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SendCard.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.sender_info != null && Object.hasOwnProperty.call(message, \"sender_info\"))\n                $root.twoonone.PlayerInfo.encode(message.sender_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.sendcards != null && message.sendcards.length)\n                for (let i = 0; i < message.sendcards.length; ++i)\n                    $root.twoonone.Card.encode(message.sendcards[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.sendcard_type != null && Object.hasOwnProperty.call(message, \"sendcard_type\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.sendcard_type);\n            if (message.sendcard_size != null && Object.hasOwnProperty.call(message, \"sendcard_size\"))\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.sendcard_size);\n            if (message.sendcard_continuous != null && Object.hasOwnProperty.call(message, \"sendcard_continuous\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.sendcard_continuous);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SendCard message, length delimited. Does not implicitly {@link twoonone.SendCard.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.SendCard\n         * @static\n         * @param {twoonone.ISendCard} message SendCard message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SendCard.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SendCard message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.SendCard\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.SendCard} SendCard\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SendCard.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.SendCard();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.sender_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 2: {\n                        if (!(message.sendcards && message.sendcards.length))\n                            message.sendcards = [];\n                        message.sendcards.push($root.twoonone.Card.decode(reader, reader.uint32()));\n                        break;\n                    }\n                case 3: {\n                        message.sendcard_type = reader.int32();\n                        break;\n                    }\n                case 4: {\n                        message.sendcard_size = reader.int32();\n                        break;\n                    }\n                case 5: {\n                        message.sendcard_continuous = reader.int32();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SendCard message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.SendCard\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.SendCard} SendCard\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SendCard.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SendCard message.\n         * @function verify\n         * @memberof twoonone.SendCard\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SendCard.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.sender_info != null && message.hasOwnProperty(\"sender_info\")) {\n                let error = $root.twoonone.PlayerInfo.verify(message.sender_info);\n                if (error)\n                    return \"sender_info.\" + error;\n            }\n            if (message.sendcards != null && message.hasOwnProperty(\"sendcards\")) {\n                if (!Array.isArray(message.sendcards))\n                    return \"sendcards: array expected\";\n                for (let i = 0; i < message.sendcards.length; ++i) {\n                    let error = $root.twoonone.Card.verify(message.sendcards[i]);\n                    if (error)\n                        return \"sendcards.\" + error;\n                }\n            }\n            if (message.sendcard_type != null && message.hasOwnProperty(\"sendcard_type\"))\n                switch (message.sendcard_type) {\n                default:\n                    return \"sendcard_type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                case 14:\n                    break;\n                }\n            if (message.sendcard_size != null && message.hasOwnProperty(\"sendcard_size\"))\n                if (!$util.isInteger(message.sendcard_size))\n                    return \"sendcard_size: integer expected\";\n            if (message.sendcard_continuous != null && message.hasOwnProperty(\"sendcard_continuous\"))\n                if (!$util.isInteger(message.sendcard_continuous))\n                    return \"sendcard_continuous: integer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a SendCard message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.SendCard\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.SendCard} SendCard\n         */\n        SendCard.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.SendCard)\n                return object;\n            let message = new $root.twoonone.SendCard();\n            if (object.sender_info != null) {\n                if (typeof object.sender_info !== \"object\")\n                    throw TypeError(\".twoonone.SendCard.sender_info: object expected\");\n                message.sender_info = $root.twoonone.PlayerInfo.fromObject(object.sender_info);\n            }\n            if (object.sendcards) {\n                if (!Array.isArray(object.sendcards))\n                    throw TypeError(\".twoonone.SendCard.sendcards: array expected\");\n                message.sendcards = [];\n                for (let i = 0; i < object.sendcards.length; ++i) {\n                    if (typeof object.sendcards[i] !== \"object\")\n                        throw TypeError(\".twoonone.SendCard.sendcards: object expected\");\n                    message.sendcards[i] = $root.twoonone.Card.fromObject(object.sendcards[i]);\n                }\n            }\n            switch (object.sendcard_type) {\n            default:\n                if (typeof object.sendcard_type === \"number\") {\n                    message.sendcard_type = object.sendcard_type;\n                    break;\n                }\n                break;\n            case \"CARD_TYPE_UNKNOWN\":\n            case 0:\n                message.sendcard_type = 0;\n                break;\n            case \"CARD_TYPE_KING_BOOM\":\n            case 1:\n                message.sendcard_type = 1;\n                break;\n            case \"CARD_TYPE_SINGLE\":\n            case 2:\n                message.sendcard_type = 2;\n                break;\n            case \"CARD_TYPE_DOUBLE\":\n            case 3:\n                message.sendcard_type = 3;\n                break;\n            case \"CARD_TYPE_THREE_CARD\":\n            case 4:\n                message.sendcard_type = 4;\n                break;\n            case \"CARD_TYPE_THREE_WITH_SINGLE\":\n            case 5:\n                message.sendcard_type = 5;\n                break;\n            case \"CARD_TYPE_THREE_WITH_DOUBLE\":\n            case 6:\n                message.sendcard_type = 6;\n                break;\n            case \"CARD_TYPE_BOOM\":\n            case 7:\n                message.sendcard_type = 7;\n                break;\n            case \"CARD_TYPE_FOUR_WITH_TWO_SINGLE\":\n            case 8:\n                message.sendcard_type = 8;\n                break;\n            case \"CARD_TYPE_FOUR_WITH_TWO_DOUBLE\":\n            case 9:\n                message.sendcard_type = 9;\n                break;\n            case \"CARD_TYPE_SINGLE_SEQUENCE\":\n            case 10:\n                message.sendcard_type = 10;\n                break;\n            case \"CARD_TYPE_DOUBLE_SEQUENCE\":\n            case 11:\n                message.sendcard_type = 11;\n                break;\n            case \"CARD_TYPE_AIR_SEQUENCE\":\n            case 12:\n                message.sendcard_type = 12;\n                break;\n            case \"CARD_TYPE_AIR_SEQUENCE_WITH_TWO_SINGLE\":\n            case 13:\n                message.sendcard_type = 13;\n                break;\n            case \"CARD_TYPE_AIR_SEQUENCE_WITH_TWO_DOUBLE\":\n            case 14:\n                message.sendcard_type = 14;\n                break;\n            }\n            if (object.sendcard_size != null)\n                message.sendcard_size = object.sendcard_size | 0;\n            if (object.sendcard_continuous != null)\n                message.sendcard_continuous = object.sendcard_continuous | 0;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SendCard message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.SendCard\n         * @static\n         * @param {twoonone.SendCard} message SendCard\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SendCard.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults)\n                object.sendcards = [];\n            if (options.defaults) {\n                object.sender_info = null;\n                object.sendcard_type = options.enums === String ? \"CARD_TYPE_UNKNOWN\" : 0;\n                object.sendcard_size = 0;\n                object.sendcard_continuous = 0;\n            }\n            if (message.sender_info != null && message.hasOwnProperty(\"sender_info\"))\n                object.sender_info = $root.twoonone.PlayerInfo.toObject(message.sender_info, options);\n            if (message.sendcards && message.sendcards.length) {\n                object.sendcards = [];\n                for (let j = 0; j < message.sendcards.length; ++j)\n                    object.sendcards[j] = $root.twoonone.Card.toObject(message.sendcards[j], options);\n            }\n            if (message.sendcard_type != null && message.hasOwnProperty(\"sendcard_type\"))\n                object.sendcard_type = options.enums === String ? $root.twoonone.CardType[message.sendcard_type] === undefined ? message.sendcard_type : $root.twoonone.CardType[message.sendcard_type] : message.sendcard_type;\n            if (message.sendcard_size != null && message.hasOwnProperty(\"sendcard_size\"))\n                object.sendcard_size = message.sendcard_size;\n            if (message.sendcard_continuous != null && message.hasOwnProperty(\"sendcard_continuous\"))\n                object.sendcard_continuous = message.sendcard_continuous;\n            return object;\n        };\n\n        /**\n         * Converts this SendCard to JSON.\n         * @function toJSON\n         * @memberof twoonone.SendCard\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SendCard.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SendCard\n         * @function getTypeUrl\n         * @memberof twoonone.SendCard\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SendCard.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.SendCard\";\n        };\n\n        return SendCard;\n    })();\n\n    twoonone.PlayerInfo = (function() {\n\n        /**\n         * Properties of a PlayerInfo.\n         * @memberof twoonone\n         * @interface IPlayerInfo\n         * @property {twoonone.PlayerInfo.IUserInfo|null} [user] PlayerInfo user\n         * @property {twoonone.PlayerInfo.ITableInfo|null} [table] PlayerInfo table\n         */\n\n        /**\n         * Constructs a new PlayerInfo.\n         * @memberof twoonone\n         * @classdesc Represents a PlayerInfo.\n         * @implements IPlayerInfo\n         * @constructor\n         * @param {twoonone.IPlayerInfo=} [properties] Properties to set\n         */\n        function PlayerInfo(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PlayerInfo user.\n         * @member {twoonone.PlayerInfo.IUserInfo|null|undefined} user\n         * @memberof twoonone.PlayerInfo\n         * @instance\n         */\n        PlayerInfo.prototype.user = null;\n\n        /**\n         * PlayerInfo table.\n         * @member {twoonone.PlayerInfo.ITableInfo|null|undefined} table\n         * @memberof twoonone.PlayerInfo\n         * @instance\n         */\n        PlayerInfo.prototype.table = null;\n\n        /**\n         * Creates a new PlayerInfo instance using the specified properties.\n         * @function create\n         * @memberof twoonone.PlayerInfo\n         * @static\n         * @param {twoonone.IPlayerInfo=} [properties] Properties to set\n         * @returns {twoonone.PlayerInfo} PlayerInfo instance\n         */\n        PlayerInfo.create = function create(properties) {\n            return new PlayerInfo(properties);\n        };\n\n        /**\n         * Encodes the specified PlayerInfo message. Does not implicitly {@link twoonone.PlayerInfo.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.PlayerInfo\n         * @static\n         * @param {twoonone.IPlayerInfo} message PlayerInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PlayerInfo.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.user != null && Object.hasOwnProperty.call(message, \"user\"))\n                $root.twoonone.PlayerInfo.UserInfo.encode(message.user, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.table != null && Object.hasOwnProperty.call(message, \"table\"))\n                $root.twoonone.PlayerInfo.TableInfo.encode(message.table, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PlayerInfo message, length delimited. Does not implicitly {@link twoonone.PlayerInfo.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.PlayerInfo\n         * @static\n         * @param {twoonone.IPlayerInfo} message PlayerInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PlayerInfo.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PlayerInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.PlayerInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.PlayerInfo} PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PlayerInfo.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.PlayerInfo();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.user = $root.twoonone.PlayerInfo.UserInfo.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 2: {\n                        message.table = $root.twoonone.PlayerInfo.TableInfo.decode(reader, reader.uint32());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PlayerInfo message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.PlayerInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.PlayerInfo} PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PlayerInfo.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PlayerInfo message.\n         * @function verify\n         * @memberof twoonone.PlayerInfo\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PlayerInfo.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.user != null && message.hasOwnProperty(\"user\")) {\n                let error = $root.twoonone.PlayerInfo.UserInfo.verify(message.user);\n                if (error)\n                    return \"user.\" + error;\n            }\n            if (message.table != null && message.hasOwnProperty(\"table\")) {\n                let error = $root.twoonone.PlayerInfo.TableInfo.verify(message.table);\n                if (error)\n                    return \"table.\" + error;\n            }\n            return null;\n        };\n\n        /**\n         * Creates a PlayerInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.PlayerInfo\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.PlayerInfo} PlayerInfo\n         */\n        PlayerInfo.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.PlayerInfo)\n                return object;\n            let message = new $root.twoonone.PlayerInfo();\n            if (object.user != null) {\n                if (typeof object.user !== \"object\")\n                    throw TypeError(\".twoonone.PlayerInfo.user: object expected\");\n                message.user = $root.twoonone.PlayerInfo.UserInfo.fromObject(object.user);\n            }\n            if (object.table != null) {\n                if (typeof object.table !== \"object\")\n                    throw TypeError(\".twoonone.PlayerInfo.table: object expected\");\n                message.table = $root.twoonone.PlayerInfo.TableInfo.fromObject(object.table);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PlayerInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.PlayerInfo\n         * @static\n         * @param {twoonone.PlayerInfo} message PlayerInfo\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PlayerInfo.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.user = null;\n                object.table = null;\n            }\n            if (message.user != null && message.hasOwnProperty(\"user\"))\n                object.user = $root.twoonone.PlayerInfo.UserInfo.toObject(message.user, options);\n            if (message.table != null && message.hasOwnProperty(\"table\"))\n                object.table = $root.twoonone.PlayerInfo.TableInfo.toObject(message.table, options);\n            return object;\n        };\n\n        /**\n         * Converts this PlayerInfo to JSON.\n         * @function toJSON\n         * @memberof twoonone.PlayerInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PlayerInfo.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PlayerInfo\n         * @function getTypeUrl\n         * @memberof twoonone.PlayerInfo\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PlayerInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.PlayerInfo\";\n        };\n\n        PlayerInfo.TableInfo = (function() {\n\n            /**\n             * Properties of a TableInfo.\n             * @memberof twoonone.PlayerInfo\n             * @interface ITableInfo\n             * @property {string|null} [room_hash] TableInfo room_hash\n             * @property {twoonone.IRobLandownerInfo|null} [roblandowner_info] TableInfo roblandowner_info\n             * @property {twoonone.Role|null} [role] TableInfo role\n             * @property {number|null} [cards_length] TableInfo cards_length\n             */\n\n            /**\n             * Constructs a new TableInfo.\n             * @memberof twoonone.PlayerInfo\n             * @classdesc Represents a TableInfo.\n             * @implements ITableInfo\n             * @constructor\n             * @param {twoonone.PlayerInfo.ITableInfo=} [properties] Properties to set\n             */\n            function TableInfo(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * TableInfo room_hash.\n             * @member {string} room_hash\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @instance\n             */\n            TableInfo.prototype.room_hash = \"\";\n\n            /**\n             * TableInfo roblandowner_info.\n             * @member {twoonone.IRobLandownerInfo|null|undefined} roblandowner_info\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @instance\n             */\n            TableInfo.prototype.roblandowner_info = null;\n\n            /**\n             * TableInfo role.\n             * @member {twoonone.Role} role\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @instance\n             */\n            TableInfo.prototype.role = 0;\n\n            /**\n             * TableInfo cards_length.\n             * @member {number} cards_length\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @instance\n             */\n            TableInfo.prototype.cards_length = 0;\n\n            /**\n             * Creates a new TableInfo instance using the specified properties.\n             * @function create\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @static\n             * @param {twoonone.PlayerInfo.ITableInfo=} [properties] Properties to set\n             * @returns {twoonone.PlayerInfo.TableInfo} TableInfo instance\n             */\n            TableInfo.create = function create(properties) {\n                return new TableInfo(properties);\n            };\n\n            /**\n             * Encodes the specified TableInfo message. Does not implicitly {@link twoonone.PlayerInfo.TableInfo.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @static\n             * @param {twoonone.PlayerInfo.ITableInfo} message TableInfo message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TableInfo.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.room_hash != null && Object.hasOwnProperty.call(message, \"room_hash\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.room_hash);\n                if (message.roblandowner_info != null && Object.hasOwnProperty.call(message, \"roblandowner_info\"))\n                    $root.twoonone.RobLandownerInfo.encode(message.roblandowner_info, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.role != null && Object.hasOwnProperty.call(message, \"role\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.role);\n                if (message.cards_length != null && Object.hasOwnProperty.call(message, \"cards_length\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.cards_length);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified TableInfo message, length delimited. Does not implicitly {@link twoonone.PlayerInfo.TableInfo.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @static\n             * @param {twoonone.PlayerInfo.ITableInfo} message TableInfo message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TableInfo.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a TableInfo message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.PlayerInfo.TableInfo} TableInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TableInfo.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.PlayerInfo.TableInfo();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.room_hash = reader.string();\n                            break;\n                        }\n                    case 2: {\n                            message.roblandowner_info = $root.twoonone.RobLandownerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    case 3: {\n                            message.role = reader.int32();\n                            break;\n                        }\n                    case 4: {\n                            message.cards_length = reader.int32();\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a TableInfo message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.PlayerInfo.TableInfo} TableInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TableInfo.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a TableInfo message.\n             * @function verify\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            TableInfo.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                    if (!$util.isString(message.room_hash))\n                        return \"room_hash: string expected\";\n                if (message.roblandowner_info != null && message.hasOwnProperty(\"roblandowner_info\")) {\n                    let error = $root.twoonone.RobLandownerInfo.verify(message.roblandowner_info);\n                    if (error)\n                        return \"roblandowner_info.\" + error;\n                }\n                if (message.role != null && message.hasOwnProperty(\"role\"))\n                    switch (message.role) {\n                    default:\n                        return \"role: enum value expected\";\n                    case 0:\n                    case 1:\n                    case 2:\n                        break;\n                    }\n                if (message.cards_length != null && message.hasOwnProperty(\"cards_length\"))\n                    if (!$util.isInteger(message.cards_length))\n                        return \"cards_length: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a TableInfo message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.PlayerInfo.TableInfo} TableInfo\n             */\n            TableInfo.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.PlayerInfo.TableInfo)\n                    return object;\n                let message = new $root.twoonone.PlayerInfo.TableInfo();\n                if (object.room_hash != null)\n                    message.room_hash = String(object.room_hash);\n                if (object.roblandowner_info != null) {\n                    if (typeof object.roblandowner_info !== \"object\")\n                        throw TypeError(\".twoonone.PlayerInfo.TableInfo.roblandowner_info: object expected\");\n                    message.roblandowner_info = $root.twoonone.RobLandownerInfo.fromObject(object.roblandowner_info);\n                }\n                switch (object.role) {\n                default:\n                    if (typeof object.role === \"number\") {\n                        message.role = object.role;\n                        break;\n                    }\n                    break;\n                case \"ROLE_UNKNOWN\":\n                case 0:\n                    message.role = 0;\n                    break;\n                case \"ROLE_LANDOWNER\":\n                case 1:\n                    message.role = 1;\n                    break;\n                case \"ROLE_FARMER\":\n                case 2:\n                    message.role = 2;\n                    break;\n                }\n                if (object.cards_length != null)\n                    message.cards_length = object.cards_length | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a TableInfo message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @static\n             * @param {twoonone.PlayerInfo.TableInfo} message TableInfo\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            TableInfo.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.room_hash = \"\";\n                    object.roblandowner_info = null;\n                    object.role = options.enums === String ? \"ROLE_UNKNOWN\" : 0;\n                    object.cards_length = 0;\n                }\n                if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                    object.room_hash = message.room_hash;\n                if (message.roblandowner_info != null && message.hasOwnProperty(\"roblandowner_info\"))\n                    object.roblandowner_info = $root.twoonone.RobLandownerInfo.toObject(message.roblandowner_info, options);\n                if (message.role != null && message.hasOwnProperty(\"role\"))\n                    object.role = options.enums === String ? $root.twoonone.Role[message.role] === undefined ? message.role : $root.twoonone.Role[message.role] : message.role;\n                if (message.cards_length != null && message.hasOwnProperty(\"cards_length\"))\n                    object.cards_length = message.cards_length;\n                return object;\n            };\n\n            /**\n             * Converts this TableInfo to JSON.\n             * @function toJSON\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            TableInfo.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for TableInfo\n             * @function getTypeUrl\n             * @memberof twoonone.PlayerInfo.TableInfo\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            TableInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.PlayerInfo.TableInfo\";\n            };\n\n            return TableInfo;\n        })();\n\n        PlayerInfo.UserInfo = (function() {\n\n            /**\n             * Properties of a UserInfo.\n             * @memberof twoonone.PlayerInfo\n             * @interface IUserInfo\n             * @property {string|null} [id] UserInfo id\n             * @property {string|null} [name] UserInfo name\n             */\n\n            /**\n             * Constructs a new UserInfo.\n             * @memberof twoonone.PlayerInfo\n             * @classdesc Represents a UserInfo.\n             * @implements IUserInfo\n             * @constructor\n             * @param {twoonone.PlayerInfo.IUserInfo=} [properties] Properties to set\n             */\n            function UserInfo(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * UserInfo id.\n             * @member {string} id\n             * @memberof twoonone.PlayerInfo.UserInfo\n             * @instance\n             */\n            UserInfo.prototype.id = \"\";\n\n            /**\n             * UserInfo name.\n             * @member {string} name\n             * @memberof twoonone.PlayerInfo.UserInfo\n             * @instance\n             */\n            UserInfo.prototype.name = \"\";\n\n            /**\n             * Creates a new UserInfo instance using the specified properties.\n             * @function create\n             * @memberof twoonone.PlayerInfo.UserInfo\n             * @static\n             * @param {twoonone.PlayerInfo.IUserInfo=} [properties] Properties to set\n             * @returns {twoonone.PlayerInfo.UserInfo} UserInfo instance\n             */\n            UserInfo.create = function create(properties) {\n                return new UserInfo(properties);\n            };\n\n            /**\n             * Encodes the specified UserInfo message. Does not implicitly {@link twoonone.PlayerInfo.UserInfo.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.PlayerInfo.UserInfo\n             * @static\n             * @param {twoonone.PlayerInfo.IUserInfo} message UserInfo message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            UserInfo.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.id != null && Object.hasOwnProperty.call(message, \"id\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n                if (message.name != null && Object.hasOwnProperty.call(message, \"name\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified UserInfo message, length delimited. Does not implicitly {@link twoonone.PlayerInfo.UserInfo.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.PlayerInfo.UserInfo\n             * @static\n             * @param {twoonone.PlayerInfo.IUserInfo} message UserInfo message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            UserInfo.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a UserInfo message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.PlayerInfo.UserInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.PlayerInfo.UserInfo} UserInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            UserInfo.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.PlayerInfo.UserInfo();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.id = reader.string();\n                            break;\n                        }\n                    case 2: {\n                            message.name = reader.string();\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a UserInfo message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.PlayerInfo.UserInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.PlayerInfo.UserInfo} UserInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            UserInfo.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a UserInfo message.\n             * @function verify\n             * @memberof twoonone.PlayerInfo.UserInfo\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            UserInfo.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    if (!$util.isString(message.id))\n                        return \"id: string expected\";\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    if (!$util.isString(message.name))\n                        return \"name: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a UserInfo message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.PlayerInfo.UserInfo\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.PlayerInfo.UserInfo} UserInfo\n             */\n            UserInfo.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.PlayerInfo.UserInfo)\n                    return object;\n                let message = new $root.twoonone.PlayerInfo.UserInfo();\n                if (object.id != null)\n                    message.id = String(object.id);\n                if (object.name != null)\n                    message.name = String(object.name);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a UserInfo message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.PlayerInfo.UserInfo\n             * @static\n             * @param {twoonone.PlayerInfo.UserInfo} message UserInfo\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            UserInfo.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.id = \"\";\n                    object.name = \"\";\n                }\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    object.id = message.id;\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    object.name = message.name;\n                return object;\n            };\n\n            /**\n             * Converts this UserInfo to JSON.\n             * @function toJSON\n             * @memberof twoonone.PlayerInfo.UserInfo\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            UserInfo.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for UserInfo\n             * @function getTypeUrl\n             * @memberof twoonone.PlayerInfo.UserInfo\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            UserInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.PlayerInfo.UserInfo\";\n            };\n\n            return UserInfo;\n        })();\n\n        return PlayerInfo;\n    })();\n\n    twoonone.PlayerInfoFull = (function() {\n\n        /**\n         * Properties of a PlayerInfoFull.\n         * @memberof twoonone\n         * @interface IPlayerInfoFull\n         * @property {twoonone.PlayerInfo.IUserInfo|null} [user] PlayerInfoFull user\n         * @property {twoonone.PlayerInfo.ITableInfo|null} [table] PlayerInfoFull table\n         * @property {twoonone.PlayerInfoFull.IExtraInfo|null} [extra] PlayerInfoFull extra\n         */\n\n        /**\n         * Constructs a new PlayerInfoFull.\n         * @memberof twoonone\n         * @classdesc Represents a PlayerInfoFull.\n         * @implements IPlayerInfoFull\n         * @constructor\n         * @param {twoonone.IPlayerInfoFull=} [properties] Properties to set\n         */\n        function PlayerInfoFull(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PlayerInfoFull user.\n         * @member {twoonone.PlayerInfo.IUserInfo|null|undefined} user\n         * @memberof twoonone.PlayerInfoFull\n         * @instance\n         */\n        PlayerInfoFull.prototype.user = null;\n\n        /**\n         * PlayerInfoFull table.\n         * @member {twoonone.PlayerInfo.ITableInfo|null|undefined} table\n         * @memberof twoonone.PlayerInfoFull\n         * @instance\n         */\n        PlayerInfoFull.prototype.table = null;\n\n        /**\n         * PlayerInfoFull extra.\n         * @member {twoonone.PlayerInfoFull.IExtraInfo|null|undefined} extra\n         * @memberof twoonone.PlayerInfoFull\n         * @instance\n         */\n        PlayerInfoFull.prototype.extra = null;\n\n        /**\n         * Creates a new PlayerInfoFull instance using the specified properties.\n         * @function create\n         * @memberof twoonone.PlayerInfoFull\n         * @static\n         * @param {twoonone.IPlayerInfoFull=} [properties] Properties to set\n         * @returns {twoonone.PlayerInfoFull} PlayerInfoFull instance\n         */\n        PlayerInfoFull.create = function create(properties) {\n            return new PlayerInfoFull(properties);\n        };\n\n        /**\n         * Encodes the specified PlayerInfoFull message. Does not implicitly {@link twoonone.PlayerInfoFull.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.PlayerInfoFull\n         * @static\n         * @param {twoonone.IPlayerInfoFull} message PlayerInfoFull message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PlayerInfoFull.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.user != null && Object.hasOwnProperty.call(message, \"user\"))\n                $root.twoonone.PlayerInfo.UserInfo.encode(message.user, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.table != null && Object.hasOwnProperty.call(message, \"table\"))\n                $root.twoonone.PlayerInfo.TableInfo.encode(message.table, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.extra != null && Object.hasOwnProperty.call(message, \"extra\"))\n                $root.twoonone.PlayerInfoFull.ExtraInfo.encode(message.extra, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PlayerInfoFull message, length delimited. Does not implicitly {@link twoonone.PlayerInfoFull.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.PlayerInfoFull\n         * @static\n         * @param {twoonone.IPlayerInfoFull} message PlayerInfoFull message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PlayerInfoFull.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PlayerInfoFull message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.PlayerInfoFull\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.PlayerInfoFull} PlayerInfoFull\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PlayerInfoFull.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.PlayerInfoFull();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.user = $root.twoonone.PlayerInfo.UserInfo.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 2: {\n                        message.table = $root.twoonone.PlayerInfo.TableInfo.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 3: {\n                        message.extra = $root.twoonone.PlayerInfoFull.ExtraInfo.decode(reader, reader.uint32());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PlayerInfoFull message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.PlayerInfoFull\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.PlayerInfoFull} PlayerInfoFull\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PlayerInfoFull.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PlayerInfoFull message.\n         * @function verify\n         * @memberof twoonone.PlayerInfoFull\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PlayerInfoFull.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.user != null && message.hasOwnProperty(\"user\")) {\n                let error = $root.twoonone.PlayerInfo.UserInfo.verify(message.user);\n                if (error)\n                    return \"user.\" + error;\n            }\n            if (message.table != null && message.hasOwnProperty(\"table\")) {\n                let error = $root.twoonone.PlayerInfo.TableInfo.verify(message.table);\n                if (error)\n                    return \"table.\" + error;\n            }\n            if (message.extra != null && message.hasOwnProperty(\"extra\")) {\n                let error = $root.twoonone.PlayerInfoFull.ExtraInfo.verify(message.extra);\n                if (error)\n                    return \"extra.\" + error;\n            }\n            return null;\n        };\n\n        /**\n         * Creates a PlayerInfoFull message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.PlayerInfoFull\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.PlayerInfoFull} PlayerInfoFull\n         */\n        PlayerInfoFull.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.PlayerInfoFull)\n                return object;\n            let message = new $root.twoonone.PlayerInfoFull();\n            if (object.user != null) {\n                if (typeof object.user !== \"object\")\n                    throw TypeError(\".twoonone.PlayerInfoFull.user: object expected\");\n                message.user = $root.twoonone.PlayerInfo.UserInfo.fromObject(object.user);\n            }\n            if (object.table != null) {\n                if (typeof object.table !== \"object\")\n                    throw TypeError(\".twoonone.PlayerInfoFull.table: object expected\");\n                message.table = $root.twoonone.PlayerInfo.TableInfo.fromObject(object.table);\n            }\n            if (object.extra != null) {\n                if (typeof object.extra !== \"object\")\n                    throw TypeError(\".twoonone.PlayerInfoFull.extra: object expected\");\n                message.extra = $root.twoonone.PlayerInfoFull.ExtraInfo.fromObject(object.extra);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PlayerInfoFull message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.PlayerInfoFull\n         * @static\n         * @param {twoonone.PlayerInfoFull} message PlayerInfoFull\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PlayerInfoFull.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults) {\n                object.user = null;\n                object.table = null;\n                object.extra = null;\n            }\n            if (message.user != null && message.hasOwnProperty(\"user\"))\n                object.user = $root.twoonone.PlayerInfo.UserInfo.toObject(message.user, options);\n            if (message.table != null && message.hasOwnProperty(\"table\"))\n                object.table = $root.twoonone.PlayerInfo.TableInfo.toObject(message.table, options);\n            if (message.extra != null && message.hasOwnProperty(\"extra\"))\n                object.extra = $root.twoonone.PlayerInfoFull.ExtraInfo.toObject(message.extra, options);\n            return object;\n        };\n\n        /**\n         * Converts this PlayerInfoFull to JSON.\n         * @function toJSON\n         * @memberof twoonone.PlayerInfoFull\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PlayerInfoFull.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for PlayerInfoFull\n         * @function getTypeUrl\n         * @memberof twoonone.PlayerInfoFull\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        PlayerInfoFull.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.PlayerInfoFull\";\n        };\n\n        PlayerInfoFull.ExtraInfo = (function() {\n\n            /**\n             * Properties of an ExtraInfo.\n             * @memberof twoonone.PlayerInfoFull\n             * @interface IExtraInfo\n             * @property {Array.<twoonone.ICard>|null} [hand_cards] ExtraInfo hand_cards\n             */\n\n            /**\n             * Constructs a new ExtraInfo.\n             * @memberof twoonone.PlayerInfoFull\n             * @classdesc Represents an ExtraInfo.\n             * @implements IExtraInfo\n             * @constructor\n             * @param {twoonone.PlayerInfoFull.IExtraInfo=} [properties] Properties to set\n             */\n            function ExtraInfo(properties) {\n                this.hand_cards = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ExtraInfo hand_cards.\n             * @member {Array.<twoonone.ICard>} hand_cards\n             * @memberof twoonone.PlayerInfoFull.ExtraInfo\n             * @instance\n             */\n            ExtraInfo.prototype.hand_cards = $util.emptyArray;\n\n            /**\n             * Creates a new ExtraInfo instance using the specified properties.\n             * @function create\n             * @memberof twoonone.PlayerInfoFull.ExtraInfo\n             * @static\n             * @param {twoonone.PlayerInfoFull.IExtraInfo=} [properties] Properties to set\n             * @returns {twoonone.PlayerInfoFull.ExtraInfo} ExtraInfo instance\n             */\n            ExtraInfo.create = function create(properties) {\n                return new ExtraInfo(properties);\n            };\n\n            /**\n             * Encodes the specified ExtraInfo message. Does not implicitly {@link twoonone.PlayerInfoFull.ExtraInfo.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.PlayerInfoFull.ExtraInfo\n             * @static\n             * @param {twoonone.PlayerInfoFull.IExtraInfo} message ExtraInfo message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ExtraInfo.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.hand_cards != null && message.hand_cards.length)\n                    for (let i = 0; i < message.hand_cards.length; ++i)\n                        $root.twoonone.Card.encode(message.hand_cards[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ExtraInfo message, length delimited. Does not implicitly {@link twoonone.PlayerInfoFull.ExtraInfo.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.PlayerInfoFull.ExtraInfo\n             * @static\n             * @param {twoonone.PlayerInfoFull.IExtraInfo} message ExtraInfo message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ExtraInfo.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an ExtraInfo message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.PlayerInfoFull.ExtraInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.PlayerInfoFull.ExtraInfo} ExtraInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ExtraInfo.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.PlayerInfoFull.ExtraInfo();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            if (!(message.hand_cards && message.hand_cards.length))\n                                message.hand_cards = [];\n                            message.hand_cards.push($root.twoonone.Card.decode(reader, reader.uint32()));\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an ExtraInfo message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.PlayerInfoFull.ExtraInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.PlayerInfoFull.ExtraInfo} ExtraInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ExtraInfo.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an ExtraInfo message.\n             * @function verify\n             * @memberof twoonone.PlayerInfoFull.ExtraInfo\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ExtraInfo.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.hand_cards != null && message.hasOwnProperty(\"hand_cards\")) {\n                    if (!Array.isArray(message.hand_cards))\n                        return \"hand_cards: array expected\";\n                    for (let i = 0; i < message.hand_cards.length; ++i) {\n                        let error = $root.twoonone.Card.verify(message.hand_cards[i]);\n                        if (error)\n                            return \"hand_cards.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates an ExtraInfo message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.PlayerInfoFull.ExtraInfo\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.PlayerInfoFull.ExtraInfo} ExtraInfo\n             */\n            ExtraInfo.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.PlayerInfoFull.ExtraInfo)\n                    return object;\n                let message = new $root.twoonone.PlayerInfoFull.ExtraInfo();\n                if (object.hand_cards) {\n                    if (!Array.isArray(object.hand_cards))\n                        throw TypeError(\".twoonone.PlayerInfoFull.ExtraInfo.hand_cards: array expected\");\n                    message.hand_cards = [];\n                    for (let i = 0; i < object.hand_cards.length; ++i) {\n                        if (typeof object.hand_cards[i] !== \"object\")\n                            throw TypeError(\".twoonone.PlayerInfoFull.ExtraInfo.hand_cards: object expected\");\n                        message.hand_cards[i] = $root.twoonone.Card.fromObject(object.hand_cards[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an ExtraInfo message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.PlayerInfoFull.ExtraInfo\n             * @static\n             * @param {twoonone.PlayerInfoFull.ExtraInfo} message ExtraInfo\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ExtraInfo.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.hand_cards = [];\n                if (message.hand_cards && message.hand_cards.length) {\n                    object.hand_cards = [];\n                    for (let j = 0; j < message.hand_cards.length; ++j)\n                        object.hand_cards[j] = $root.twoonone.Card.toObject(message.hand_cards[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this ExtraInfo to JSON.\n             * @function toJSON\n             * @memberof twoonone.PlayerInfoFull.ExtraInfo\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ExtraInfo.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for ExtraInfo\n             * @function getTypeUrl\n             * @memberof twoonone.PlayerInfoFull.ExtraInfo\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            ExtraInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.PlayerInfoFull.ExtraInfo\";\n            };\n\n            return ExtraInfo;\n        })();\n\n        return PlayerInfoFull;\n    })();\n\n    /**\n     * RoomStage enum.\n     * @name twoonone.RoomStage\n     * @enum {number}\n     * @property {number} ROOM_STAGE_UNKNOWN=0 ROOM_STAGE_UNKNOWN value\n     * @property {number} ROOM_STAGE_WAITTING_START=1 ROOM_STAGE_WAITTING_START value\n     * @property {number} ROOM_STAGE_ROB_LANDOWNERING=2 ROOM_STAGE_ROB_LANDOWNERING value\n     * @property {number} ROOM_STAGE_SENDING_CARD=3 ROOM_STAGE_SENDING_CARD value\n     */\n    twoonone.RoomStage = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"ROOM_STAGE_UNKNOWN\"] = 0;\n        values[valuesById[1] = \"ROOM_STAGE_WAITTING_START\"] = 1;\n        values[valuesById[2] = \"ROOM_STAGE_ROB_LANDOWNERING\"] = 2;\n        values[valuesById[3] = \"ROOM_STAGE_SENDING_CARD\"] = 3;\n        return values;\n    })();\n\n    twoonone.RoomInfo = (function() {\n\n        /**\n         * Properties of a RoomInfo.\n         * @memberof twoonone\n         * @interface IRoomInfo\n         * @property {string|null} [hash] RoomInfo hash\n         * @property {Array.<twoonone.IPlayerInfo>|null} [player_infos] RoomInfo player_infos\n         * @property {number|null} [basic_coin] RoomInfo basic_coin\n         * @property {number|null} [multiple] RoomInfo multiple\n         * @property {twoonone.RoomStage|null} [stage] RoomInfo stage\n         * @property {Array.<twoonone.ISendCard>|null} [sendcards] RoomInfo sendcards\n         * @property {twoonone.IPlayerInfo|null} [operator_now] RoomInfo operator_now\n         * @property {twoonone.IPlayerInfoFull|null} [self] RoomInfo self\n         */\n\n        /**\n         * Constructs a new RoomInfo.\n         * @memberof twoonone\n         * @classdesc Represents a RoomInfo.\n         * @implements IRoomInfo\n         * @constructor\n         * @param {twoonone.IRoomInfo=} [properties] Properties to set\n         */\n        function RoomInfo(properties) {\n            this.player_infos = [];\n            this.sendcards = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * RoomInfo hash.\n         * @member {string} hash\n         * @memberof twoonone.RoomInfo\n         * @instance\n         */\n        RoomInfo.prototype.hash = \"\";\n\n        /**\n         * RoomInfo player_infos.\n         * @member {Array.<twoonone.IPlayerInfo>} player_infos\n         * @memberof twoonone.RoomInfo\n         * @instance\n         */\n        RoomInfo.prototype.player_infos = $util.emptyArray;\n\n        /**\n         * RoomInfo basic_coin.\n         * @member {number} basic_coin\n         * @memberof twoonone.RoomInfo\n         * @instance\n         */\n        RoomInfo.prototype.basic_coin = 0;\n\n        /**\n         * RoomInfo multiple.\n         * @member {number} multiple\n         * @memberof twoonone.RoomInfo\n         * @instance\n         */\n        RoomInfo.prototype.multiple = 0;\n\n        /**\n         * RoomInfo stage.\n         * @member {twoonone.RoomStage} stage\n         * @memberof twoonone.RoomInfo\n         * @instance\n         */\n        RoomInfo.prototype.stage = 0;\n\n        /**\n         * RoomInfo sendcards.\n         * @member {Array.<twoonone.ISendCard>} sendcards\n         * @memberof twoonone.RoomInfo\n         * @instance\n         */\n        RoomInfo.prototype.sendcards = $util.emptyArray;\n\n        /**\n         * RoomInfo operator_now.\n         * @member {twoonone.IPlayerInfo|null|undefined} operator_now\n         * @memberof twoonone.RoomInfo\n         * @instance\n         */\n        RoomInfo.prototype.operator_now = null;\n\n        /**\n         * RoomInfo self.\n         * @member {twoonone.IPlayerInfoFull|null|undefined} self\n         * @memberof twoonone.RoomInfo\n         * @instance\n         */\n        RoomInfo.prototype.self = null;\n\n        // OneOf field names bound to virtual getters and setters\n        let $oneOfFields;\n\n        // Virtual OneOf for proto3 optional field\n        Object.defineProperty(RoomInfo.prototype, \"_operator_now\", {\n            get: $util.oneOfGetter($oneOfFields = [\"operator_now\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new RoomInfo instance using the specified properties.\n         * @function create\n         * @memberof twoonone.RoomInfo\n         * @static\n         * @param {twoonone.IRoomInfo=} [properties] Properties to set\n         * @returns {twoonone.RoomInfo} RoomInfo instance\n         */\n        RoomInfo.create = function create(properties) {\n            return new RoomInfo(properties);\n        };\n\n        /**\n         * Encodes the specified RoomInfo message. Does not implicitly {@link twoonone.RoomInfo.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.RoomInfo\n         * @static\n         * @param {twoonone.IRoomInfo} message RoomInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RoomInfo.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.hash != null && Object.hasOwnProperty.call(message, \"hash\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.hash);\n            if (message.player_infos != null && message.player_infos.length)\n                for (let i = 0; i < message.player_infos.length; ++i)\n                    $root.twoonone.PlayerInfo.encode(message.player_infos[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.basic_coin != null && Object.hasOwnProperty.call(message, \"basic_coin\"))\n                writer.uint32(/* id 3, wireType 1 =*/25).double(message.basic_coin);\n            if (message.multiple != null && Object.hasOwnProperty.call(message, \"multiple\"))\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.multiple);\n            if (message.stage != null && Object.hasOwnProperty.call(message, \"stage\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.stage);\n            if (message.sendcards != null && message.sendcards.length)\n                for (let i = 0; i < message.sendcards.length; ++i)\n                    $root.twoonone.SendCard.encode(message.sendcards[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.operator_now != null && Object.hasOwnProperty.call(message, \"operator_now\"))\n                $root.twoonone.PlayerInfo.encode(message.operator_now, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.self != null && Object.hasOwnProperty.call(message, \"self\"))\n                $root.twoonone.PlayerInfoFull.encode(message.self, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RoomInfo message, length delimited. Does not implicitly {@link twoonone.RoomInfo.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.RoomInfo\n         * @static\n         * @param {twoonone.IRoomInfo} message RoomInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RoomInfo.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RoomInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.RoomInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.RoomInfo} RoomInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RoomInfo.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomInfo();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.hash = reader.string();\n                        break;\n                    }\n                case 2: {\n                        if (!(message.player_infos && message.player_infos.length))\n                            message.player_infos = [];\n                        message.player_infos.push($root.twoonone.PlayerInfo.decode(reader, reader.uint32()));\n                        break;\n                    }\n                case 3: {\n                        message.basic_coin = reader.double();\n                        break;\n                    }\n                case 4: {\n                        message.multiple = reader.int32();\n                        break;\n                    }\n                case 5: {\n                        message.stage = reader.int32();\n                        break;\n                    }\n                case 6: {\n                        if (!(message.sendcards && message.sendcards.length))\n                            message.sendcards = [];\n                        message.sendcards.push($root.twoonone.SendCard.decode(reader, reader.uint32()));\n                        break;\n                    }\n                case 7: {\n                        message.operator_now = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 8: {\n                        message.self = $root.twoonone.PlayerInfoFull.decode(reader, reader.uint32());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RoomInfo message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.RoomInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.RoomInfo} RoomInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RoomInfo.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RoomInfo message.\n         * @function verify\n         * @memberof twoonone.RoomInfo\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RoomInfo.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            let properties = {};\n            if (message.hash != null && message.hasOwnProperty(\"hash\"))\n                if (!$util.isString(message.hash))\n                    return \"hash: string expected\";\n            if (message.player_infos != null && message.hasOwnProperty(\"player_infos\")) {\n                if (!Array.isArray(message.player_infos))\n                    return \"player_infos: array expected\";\n                for (let i = 0; i < message.player_infos.length; ++i) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.player_infos[i]);\n                    if (error)\n                        return \"player_infos.\" + error;\n                }\n            }\n            if (message.basic_coin != null && message.hasOwnProperty(\"basic_coin\"))\n                if (typeof message.basic_coin !== \"number\")\n                    return \"basic_coin: number expected\";\n            if (message.multiple != null && message.hasOwnProperty(\"multiple\"))\n                if (!$util.isInteger(message.multiple))\n                    return \"multiple: integer expected\";\n            if (message.stage != null && message.hasOwnProperty(\"stage\"))\n                switch (message.stage) {\n                default:\n                    return \"stage: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                    break;\n                }\n            if (message.sendcards != null && message.hasOwnProperty(\"sendcards\")) {\n                if (!Array.isArray(message.sendcards))\n                    return \"sendcards: array expected\";\n                for (let i = 0; i < message.sendcards.length; ++i) {\n                    let error = $root.twoonone.SendCard.verify(message.sendcards[i]);\n                    if (error)\n                        return \"sendcards.\" + error;\n                }\n            }\n            if (message.operator_now != null && message.hasOwnProperty(\"operator_now\")) {\n                properties._operator_now = 1;\n                {\n                    let error = $root.twoonone.PlayerInfo.verify(message.operator_now);\n                    if (error)\n                        return \"operator_now.\" + error;\n                }\n            }\n            if (message.self != null && message.hasOwnProperty(\"self\")) {\n                let error = $root.twoonone.PlayerInfoFull.verify(message.self);\n                if (error)\n                    return \"self.\" + error;\n            }\n            return null;\n        };\n\n        /**\n         * Creates a RoomInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.RoomInfo\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.RoomInfo} RoomInfo\n         */\n        RoomInfo.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.RoomInfo)\n                return object;\n            let message = new $root.twoonone.RoomInfo();\n            if (object.hash != null)\n                message.hash = String(object.hash);\n            if (object.player_infos) {\n                if (!Array.isArray(object.player_infos))\n                    throw TypeError(\".twoonone.RoomInfo.player_infos: array expected\");\n                message.player_infos = [];\n                for (let i = 0; i < object.player_infos.length; ++i) {\n                    if (typeof object.player_infos[i] !== \"object\")\n                        throw TypeError(\".twoonone.RoomInfo.player_infos: object expected\");\n                    message.player_infos[i] = $root.twoonone.PlayerInfo.fromObject(object.player_infos[i]);\n                }\n            }\n            if (object.basic_coin != null)\n                message.basic_coin = Number(object.basic_coin);\n            if (object.multiple != null)\n                message.multiple = object.multiple | 0;\n            switch (object.stage) {\n            default:\n                if (typeof object.stage === \"number\") {\n                    message.stage = object.stage;\n                    break;\n                }\n                break;\n            case \"ROOM_STAGE_UNKNOWN\":\n            case 0:\n                message.stage = 0;\n                break;\n            case \"ROOM_STAGE_WAITTING_START\":\n            case 1:\n                message.stage = 1;\n                break;\n            case \"ROOM_STAGE_ROB_LANDOWNERING\":\n            case 2:\n                message.stage = 2;\n                break;\n            case \"ROOM_STAGE_SENDING_CARD\":\n            case 3:\n                message.stage = 3;\n                break;\n            }\n            if (object.sendcards) {\n                if (!Array.isArray(object.sendcards))\n                    throw TypeError(\".twoonone.RoomInfo.sendcards: array expected\");\n                message.sendcards = [];\n                for (let i = 0; i < object.sendcards.length; ++i) {\n                    if (typeof object.sendcards[i] !== \"object\")\n                        throw TypeError(\".twoonone.RoomInfo.sendcards: object expected\");\n                    message.sendcards[i] = $root.twoonone.SendCard.fromObject(object.sendcards[i]);\n                }\n            }\n            if (object.operator_now != null) {\n                if (typeof object.operator_now !== \"object\")\n                    throw TypeError(\".twoonone.RoomInfo.operator_now: object expected\");\n                message.operator_now = $root.twoonone.PlayerInfo.fromObject(object.operator_now);\n            }\n            if (object.self != null) {\n                if (typeof object.self !== \"object\")\n                    throw TypeError(\".twoonone.RoomInfo.self: object expected\");\n                message.self = $root.twoonone.PlayerInfoFull.fromObject(object.self);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a RoomInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.RoomInfo\n         * @static\n         * @param {twoonone.RoomInfo} message RoomInfo\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RoomInfo.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults) {\n                object.player_infos = [];\n                object.sendcards = [];\n            }\n            if (options.defaults) {\n                object.hash = \"\";\n                object.basic_coin = 0;\n                object.multiple = 0;\n                object.stage = options.enums === String ? \"ROOM_STAGE_UNKNOWN\" : 0;\n                object.self = null;\n            }\n            if (message.hash != null && message.hasOwnProperty(\"hash\"))\n                object.hash = message.hash;\n            if (message.player_infos && message.player_infos.length) {\n                object.player_infos = [];\n                for (let j = 0; j < message.player_infos.length; ++j)\n                    object.player_infos[j] = $root.twoonone.PlayerInfo.toObject(message.player_infos[j], options);\n            }\n            if (message.basic_coin != null && message.hasOwnProperty(\"basic_coin\"))\n                object.basic_coin = options.json && !isFinite(message.basic_coin) ? String(message.basic_coin) : message.basic_coin;\n            if (message.multiple != null && message.hasOwnProperty(\"multiple\"))\n                object.multiple = message.multiple;\n            if (message.stage != null && message.hasOwnProperty(\"stage\"))\n                object.stage = options.enums === String ? $root.twoonone.RoomStage[message.stage] === undefined ? message.stage : $root.twoonone.RoomStage[message.stage] : message.stage;\n            if (message.sendcards && message.sendcards.length) {\n                object.sendcards = [];\n                for (let j = 0; j < message.sendcards.length; ++j)\n                    object.sendcards[j] = $root.twoonone.SendCard.toObject(message.sendcards[j], options);\n            }\n            if (message.operator_now != null && message.hasOwnProperty(\"operator_now\")) {\n                object.operator_now = $root.twoonone.PlayerInfo.toObject(message.operator_now, options);\n                if (options.oneofs)\n                    object._operator_now = \"operator_now\";\n            }\n            if (message.self != null && message.hasOwnProperty(\"self\"))\n                object.self = $root.twoonone.PlayerInfoFull.toObject(message.self, options);\n            return object;\n        };\n\n        /**\n         * Converts this RoomInfo to JSON.\n         * @function toJSON\n         * @memberof twoonone.RoomInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RoomInfo.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RoomInfo\n         * @function getTypeUrl\n         * @memberof twoonone.RoomInfo\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RoomInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.RoomInfo\";\n        };\n\n        return RoomInfo;\n    })();\n\n    twoonone.GetRoomRequest = (function() {\n\n        /**\n         * Properties of a GetRoomRequest.\n         * @memberof twoonone\n         * @interface IGetRoomRequest\n         * @property {string|null} [room_hash] GetRoomRequest room_hash\n         */\n\n        /**\n         * Constructs a new GetRoomRequest.\n         * @memberof twoonone\n         * @classdesc Represents a GetRoomRequest.\n         * @implements IGetRoomRequest\n         * @constructor\n         * @param {twoonone.IGetRoomRequest=} [properties] Properties to set\n         */\n        function GetRoomRequest(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GetRoomRequest room_hash.\n         * @member {string} room_hash\n         * @memberof twoonone.GetRoomRequest\n         * @instance\n         */\n        GetRoomRequest.prototype.room_hash = \"\";\n\n        /**\n         * Creates a new GetRoomRequest instance using the specified properties.\n         * @function create\n         * @memberof twoonone.GetRoomRequest\n         * @static\n         * @param {twoonone.IGetRoomRequest=} [properties] Properties to set\n         * @returns {twoonone.GetRoomRequest} GetRoomRequest instance\n         */\n        GetRoomRequest.create = function create(properties) {\n            return new GetRoomRequest(properties);\n        };\n\n        /**\n         * Encodes the specified GetRoomRequest message. Does not implicitly {@link twoonone.GetRoomRequest.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.GetRoomRequest\n         * @static\n         * @param {twoonone.IGetRoomRequest} message GetRoomRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetRoomRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.room_hash != null && Object.hasOwnProperty.call(message, \"room_hash\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.room_hash);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GetRoomRequest message, length delimited. Does not implicitly {@link twoonone.GetRoomRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.GetRoomRequest\n         * @static\n         * @param {twoonone.IGetRoomRequest} message GetRoomRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetRoomRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GetRoomRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.GetRoomRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.GetRoomRequest} GetRoomRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetRoomRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.GetRoomRequest();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.room_hash = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GetRoomRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.GetRoomRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.GetRoomRequest} GetRoomRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetRoomRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GetRoomRequest message.\n         * @function verify\n         * @memberof twoonone.GetRoomRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GetRoomRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                if (!$util.isString(message.room_hash))\n                    return \"room_hash: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a GetRoomRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.GetRoomRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.GetRoomRequest} GetRoomRequest\n         */\n        GetRoomRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.GetRoomRequest)\n                return object;\n            let message = new $root.twoonone.GetRoomRequest();\n            if (object.room_hash != null)\n                message.room_hash = String(object.room_hash);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GetRoomRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.GetRoomRequest\n         * @static\n         * @param {twoonone.GetRoomRequest} message GetRoomRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GetRoomRequest.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.room_hash = \"\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                object.room_hash = message.room_hash;\n            return object;\n        };\n\n        /**\n         * Converts this GetRoomRequest to JSON.\n         * @function toJSON\n         * @memberof twoonone.GetRoomRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GetRoomRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for GetRoomRequest\n         * @function getTypeUrl\n         * @memberof twoonone.GetRoomRequest\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        GetRoomRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.GetRoomRequest\";\n        };\n\n        return GetRoomRequest;\n    })();\n\n    twoonone.GetRoomResponse = (function() {\n\n        /**\n         * Properties of a GetRoomResponse.\n         * @memberof twoonone\n         * @interface IGetRoomResponse\n         * @property {Object.<string,string>|null} [extra] GetRoomResponse extra\n         * @property {twoonone.IRoomInfo|null} [room_info] GetRoomResponse room_info\n         */\n\n        /**\n         * Constructs a new GetRoomResponse.\n         * @memberof twoonone\n         * @classdesc Represents a GetRoomResponse.\n         * @implements IGetRoomResponse\n         * @constructor\n         * @param {twoonone.IGetRoomResponse=} [properties] Properties to set\n         */\n        function GetRoomResponse(properties) {\n            this.extra = {};\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GetRoomResponse extra.\n         * @member {Object.<string,string>} extra\n         * @memberof twoonone.GetRoomResponse\n         * @instance\n         */\n        GetRoomResponse.prototype.extra = $util.emptyObject;\n\n        /**\n         * GetRoomResponse room_info.\n         * @member {twoonone.IRoomInfo|null|undefined} room_info\n         * @memberof twoonone.GetRoomResponse\n         * @instance\n         */\n        GetRoomResponse.prototype.room_info = null;\n\n        /**\n         * Creates a new GetRoomResponse instance using the specified properties.\n         * @function create\n         * @memberof twoonone.GetRoomResponse\n         * @static\n         * @param {twoonone.IGetRoomResponse=} [properties] Properties to set\n         * @returns {twoonone.GetRoomResponse} GetRoomResponse instance\n         */\n        GetRoomResponse.create = function create(properties) {\n            return new GetRoomResponse(properties);\n        };\n\n        /**\n         * Encodes the specified GetRoomResponse message. Does not implicitly {@link twoonone.GetRoomResponse.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.GetRoomResponse\n         * @static\n         * @param {twoonone.IGetRoomResponse} message GetRoomResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetRoomResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.room_info != null && Object.hasOwnProperty.call(message, \"room_info\"))\n                $root.twoonone.RoomInfo.encode(message.room_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.extra != null && Object.hasOwnProperty.call(message, \"extra\"))\n                for (let keys = Object.keys(message.extra), i = 0; i < keys.length; ++i)\n                    writer.uint32(/* id 100, wireType 2 =*/802).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.extra[keys[i]]).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GetRoomResponse message, length delimited. Does not implicitly {@link twoonone.GetRoomResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.GetRoomResponse\n         * @static\n         * @param {twoonone.IGetRoomResponse} message GetRoomResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetRoomResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GetRoomResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.GetRoomResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.GetRoomResponse} GetRoomResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetRoomResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.GetRoomResponse(), key, value;\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 100: {\n                        if (message.extra === $util.emptyObject)\n                            message.extra = {};\n                        let end2 = reader.uint32() + reader.pos;\n                        key = \"\";\n                        value = \"\";\n                        while (reader.pos < end2) {\n                            let tag2 = reader.uint32();\n                            switch (tag2 >>> 3) {\n                            case 1:\n                                key = reader.string();\n                                break;\n                            case 2:\n                                value = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag2 & 7);\n                                break;\n                            }\n                        }\n                        message.extra[key] = value;\n                        break;\n                    }\n                case 1: {\n                        message.room_info = $root.twoonone.RoomInfo.decode(reader, reader.uint32());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GetRoomResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.GetRoomResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.GetRoomResponse} GetRoomResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetRoomResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GetRoomResponse message.\n         * @function verify\n         * @memberof twoonone.GetRoomResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GetRoomResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.extra != null && message.hasOwnProperty(\"extra\")) {\n                if (!$util.isObject(message.extra))\n                    return \"extra: object expected\";\n                let key = Object.keys(message.extra);\n                for (let i = 0; i < key.length; ++i)\n                    if (!$util.isString(message.extra[key[i]]))\n                        return \"extra: string{k:string} expected\";\n            }\n            if (message.room_info != null && message.hasOwnProperty(\"room_info\")) {\n                let error = $root.twoonone.RoomInfo.verify(message.room_info);\n                if (error)\n                    return \"room_info.\" + error;\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GetRoomResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.GetRoomResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.GetRoomResponse} GetRoomResponse\n         */\n        GetRoomResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.GetRoomResponse)\n                return object;\n            let message = new $root.twoonone.GetRoomResponse();\n            if (object.extra) {\n                if (typeof object.extra !== \"object\")\n                    throw TypeError(\".twoonone.GetRoomResponse.extra: object expected\");\n                message.extra = {};\n                for (let keys = Object.keys(object.extra), i = 0; i < keys.length; ++i)\n                    message.extra[keys[i]] = String(object.extra[keys[i]]);\n            }\n            if (object.room_info != null) {\n                if (typeof object.room_info !== \"object\")\n                    throw TypeError(\".twoonone.GetRoomResponse.room_info: object expected\");\n                message.room_info = $root.twoonone.RoomInfo.fromObject(object.room_info);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GetRoomResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.GetRoomResponse\n         * @static\n         * @param {twoonone.GetRoomResponse} message GetRoomResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GetRoomResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.objects || options.defaults)\n                object.extra = {};\n            if (options.defaults)\n                object.room_info = null;\n            if (message.room_info != null && message.hasOwnProperty(\"room_info\"))\n                object.room_info = $root.twoonone.RoomInfo.toObject(message.room_info, options);\n            let keys2;\n            if (message.extra && (keys2 = Object.keys(message.extra)).length) {\n                object.extra = {};\n                for (let j = 0; j < keys2.length; ++j)\n                    object.extra[keys2[j]] = message.extra[keys2[j]];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GetRoomResponse to JSON.\n         * @function toJSON\n         * @memberof twoonone.GetRoomResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GetRoomResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for GetRoomResponse\n         * @function getTypeUrl\n         * @memberof twoonone.GetRoomResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        GetRoomResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.GetRoomResponse\";\n        };\n\n        return GetRoomResponse;\n    })();\n\n    twoonone.CreateRoomRequest = (function() {\n\n        /**\n         * Properties of a CreateRoomRequest.\n         * @memberof twoonone\n         * @interface ICreateRoomRequest\n         */\n\n        /**\n         * Constructs a new CreateRoomRequest.\n         * @memberof twoonone\n         * @classdesc Represents a CreateRoomRequest.\n         * @implements ICreateRoomRequest\n         * @constructor\n         * @param {twoonone.ICreateRoomRequest=} [properties] Properties to set\n         */\n        function CreateRoomRequest(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new CreateRoomRequest instance using the specified properties.\n         * @function create\n         * @memberof twoonone.CreateRoomRequest\n         * @static\n         * @param {twoonone.ICreateRoomRequest=} [properties] Properties to set\n         * @returns {twoonone.CreateRoomRequest} CreateRoomRequest instance\n         */\n        CreateRoomRequest.create = function create(properties) {\n            return new CreateRoomRequest(properties);\n        };\n\n        /**\n         * Encodes the specified CreateRoomRequest message. Does not implicitly {@link twoonone.CreateRoomRequest.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.CreateRoomRequest\n         * @static\n         * @param {twoonone.ICreateRoomRequest} message CreateRoomRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CreateRoomRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified CreateRoomRequest message, length delimited. Does not implicitly {@link twoonone.CreateRoomRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.CreateRoomRequest\n         * @static\n         * @param {twoonone.ICreateRoomRequest} message CreateRoomRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CreateRoomRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a CreateRoomRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.CreateRoomRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.CreateRoomRequest} CreateRoomRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CreateRoomRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.CreateRoomRequest();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a CreateRoomRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.CreateRoomRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.CreateRoomRequest} CreateRoomRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CreateRoomRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a CreateRoomRequest message.\n         * @function verify\n         * @memberof twoonone.CreateRoomRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        CreateRoomRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a CreateRoomRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.CreateRoomRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.CreateRoomRequest} CreateRoomRequest\n         */\n        CreateRoomRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.CreateRoomRequest)\n                return object;\n            return new $root.twoonone.CreateRoomRequest();\n        };\n\n        /**\n         * Creates a plain object from a CreateRoomRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.CreateRoomRequest\n         * @static\n         * @param {twoonone.CreateRoomRequest} message CreateRoomRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        CreateRoomRequest.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this CreateRoomRequest to JSON.\n         * @function toJSON\n         * @memberof twoonone.CreateRoomRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        CreateRoomRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for CreateRoomRequest\n         * @function getTypeUrl\n         * @memberof twoonone.CreateRoomRequest\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        CreateRoomRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.CreateRoomRequest\";\n        };\n\n        return CreateRoomRequest;\n    })();\n\n    twoonone.CreateRoomResponse = (function() {\n\n        /**\n         * Properties of a CreateRoomResponse.\n         * @memberof twoonone\n         * @interface ICreateRoomResponse\n         * @property {Object.<string,string>|null} [extra] CreateRoomResponse extra\n         * @property {string|null} [room_hash] CreateRoomResponse room_hash\n         */\n\n        /**\n         * Constructs a new CreateRoomResponse.\n         * @memberof twoonone\n         * @classdesc Represents a CreateRoomResponse.\n         * @implements ICreateRoomResponse\n         * @constructor\n         * @param {twoonone.ICreateRoomResponse=} [properties] Properties to set\n         */\n        function CreateRoomResponse(properties) {\n            this.extra = {};\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * CreateRoomResponse extra.\n         * @member {Object.<string,string>} extra\n         * @memberof twoonone.CreateRoomResponse\n         * @instance\n         */\n        CreateRoomResponse.prototype.extra = $util.emptyObject;\n\n        /**\n         * CreateRoomResponse room_hash.\n         * @member {string} room_hash\n         * @memberof twoonone.CreateRoomResponse\n         * @instance\n         */\n        CreateRoomResponse.prototype.room_hash = \"\";\n\n        /**\n         * Creates a new CreateRoomResponse instance using the specified properties.\n         * @function create\n         * @memberof twoonone.CreateRoomResponse\n         * @static\n         * @param {twoonone.ICreateRoomResponse=} [properties] Properties to set\n         * @returns {twoonone.CreateRoomResponse} CreateRoomResponse instance\n         */\n        CreateRoomResponse.create = function create(properties) {\n            return new CreateRoomResponse(properties);\n        };\n\n        /**\n         * Encodes the specified CreateRoomResponse message. Does not implicitly {@link twoonone.CreateRoomResponse.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.CreateRoomResponse\n         * @static\n         * @param {twoonone.ICreateRoomResponse} message CreateRoomResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CreateRoomResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.room_hash != null && Object.hasOwnProperty.call(message, \"room_hash\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.room_hash);\n            if (message.extra != null && Object.hasOwnProperty.call(message, \"extra\"))\n                for (let keys = Object.keys(message.extra), i = 0; i < keys.length; ++i)\n                    writer.uint32(/* id 100, wireType 2 =*/802).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.extra[keys[i]]).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified CreateRoomResponse message, length delimited. Does not implicitly {@link twoonone.CreateRoomResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.CreateRoomResponse\n         * @static\n         * @param {twoonone.ICreateRoomResponse} message CreateRoomResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CreateRoomResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a CreateRoomResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.CreateRoomResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.CreateRoomResponse} CreateRoomResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CreateRoomResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.CreateRoomResponse(), key, value;\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 100: {\n                        if (message.extra === $util.emptyObject)\n                            message.extra = {};\n                        let end2 = reader.uint32() + reader.pos;\n                        key = \"\";\n                        value = \"\";\n                        while (reader.pos < end2) {\n                            let tag2 = reader.uint32();\n                            switch (tag2 >>> 3) {\n                            case 1:\n                                key = reader.string();\n                                break;\n                            case 2:\n                                value = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag2 & 7);\n                                break;\n                            }\n                        }\n                        message.extra[key] = value;\n                        break;\n                    }\n                case 1: {\n                        message.room_hash = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a CreateRoomResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.CreateRoomResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.CreateRoomResponse} CreateRoomResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CreateRoomResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a CreateRoomResponse message.\n         * @function verify\n         * @memberof twoonone.CreateRoomResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        CreateRoomResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.extra != null && message.hasOwnProperty(\"extra\")) {\n                if (!$util.isObject(message.extra))\n                    return \"extra: object expected\";\n                let key = Object.keys(message.extra);\n                for (let i = 0; i < key.length; ++i)\n                    if (!$util.isString(message.extra[key[i]]))\n                        return \"extra: string{k:string} expected\";\n            }\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                if (!$util.isString(message.room_hash))\n                    return \"room_hash: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a CreateRoomResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.CreateRoomResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.CreateRoomResponse} CreateRoomResponse\n         */\n        CreateRoomResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.CreateRoomResponse)\n                return object;\n            let message = new $root.twoonone.CreateRoomResponse();\n            if (object.extra) {\n                if (typeof object.extra !== \"object\")\n                    throw TypeError(\".twoonone.CreateRoomResponse.extra: object expected\");\n                message.extra = {};\n                for (let keys = Object.keys(object.extra), i = 0; i < keys.length; ++i)\n                    message.extra[keys[i]] = String(object.extra[keys[i]]);\n            }\n            if (object.room_hash != null)\n                message.room_hash = String(object.room_hash);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a CreateRoomResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.CreateRoomResponse\n         * @static\n         * @param {twoonone.CreateRoomResponse} message CreateRoomResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        CreateRoomResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.objects || options.defaults)\n                object.extra = {};\n            if (options.defaults)\n                object.room_hash = \"\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                object.room_hash = message.room_hash;\n            let keys2;\n            if (message.extra && (keys2 = Object.keys(message.extra)).length) {\n                object.extra = {};\n                for (let j = 0; j < keys2.length; ++j)\n                    object.extra[keys2[j]] = message.extra[keys2[j]];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this CreateRoomResponse to JSON.\n         * @function toJSON\n         * @memberof twoonone.CreateRoomResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        CreateRoomResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for CreateRoomResponse\n         * @function getTypeUrl\n         * @memberof twoonone.CreateRoomResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        CreateRoomResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.CreateRoomResponse\";\n        };\n\n        return CreateRoomResponse;\n    })();\n\n    twoonone.JoinRoomRequest = (function() {\n\n        /**\n         * Properties of a JoinRoomRequest.\n         * @memberof twoonone\n         * @interface IJoinRoomRequest\n         * @property {string|null} [room_hash] JoinRoomRequest room_hash\n         */\n\n        /**\n         * Constructs a new JoinRoomRequest.\n         * @memberof twoonone\n         * @classdesc Represents a JoinRoomRequest.\n         * @implements IJoinRoomRequest\n         * @constructor\n         * @param {twoonone.IJoinRoomRequest=} [properties] Properties to set\n         */\n        function JoinRoomRequest(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * JoinRoomRequest room_hash.\n         * @member {string} room_hash\n         * @memberof twoonone.JoinRoomRequest\n         * @instance\n         */\n        JoinRoomRequest.prototype.room_hash = \"\";\n\n        /**\n         * Creates a new JoinRoomRequest instance using the specified properties.\n         * @function create\n         * @memberof twoonone.JoinRoomRequest\n         * @static\n         * @param {twoonone.IJoinRoomRequest=} [properties] Properties to set\n         * @returns {twoonone.JoinRoomRequest} JoinRoomRequest instance\n         */\n        JoinRoomRequest.create = function create(properties) {\n            return new JoinRoomRequest(properties);\n        };\n\n        /**\n         * Encodes the specified JoinRoomRequest message. Does not implicitly {@link twoonone.JoinRoomRequest.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.JoinRoomRequest\n         * @static\n         * @param {twoonone.IJoinRoomRequest} message JoinRoomRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        JoinRoomRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.room_hash != null && Object.hasOwnProperty.call(message, \"room_hash\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.room_hash);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified JoinRoomRequest message, length delimited. Does not implicitly {@link twoonone.JoinRoomRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.JoinRoomRequest\n         * @static\n         * @param {twoonone.IJoinRoomRequest} message JoinRoomRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        JoinRoomRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a JoinRoomRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.JoinRoomRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.JoinRoomRequest} JoinRoomRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        JoinRoomRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.JoinRoomRequest();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.room_hash = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a JoinRoomRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.JoinRoomRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.JoinRoomRequest} JoinRoomRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        JoinRoomRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a JoinRoomRequest message.\n         * @function verify\n         * @memberof twoonone.JoinRoomRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        JoinRoomRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                if (!$util.isString(message.room_hash))\n                    return \"room_hash: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a JoinRoomRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.JoinRoomRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.JoinRoomRequest} JoinRoomRequest\n         */\n        JoinRoomRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.JoinRoomRequest)\n                return object;\n            let message = new $root.twoonone.JoinRoomRequest();\n            if (object.room_hash != null)\n                message.room_hash = String(object.room_hash);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a JoinRoomRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.JoinRoomRequest\n         * @static\n         * @param {twoonone.JoinRoomRequest} message JoinRoomRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        JoinRoomRequest.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.room_hash = \"\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                object.room_hash = message.room_hash;\n            return object;\n        };\n\n        /**\n         * Converts this JoinRoomRequest to JSON.\n         * @function toJSON\n         * @memberof twoonone.JoinRoomRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        JoinRoomRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for JoinRoomRequest\n         * @function getTypeUrl\n         * @memberof twoonone.JoinRoomRequest\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        JoinRoomRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.JoinRoomRequest\";\n        };\n\n        return JoinRoomRequest;\n    })();\n\n    twoonone.JoinRoomResponse = (function() {\n\n        /**\n         * Properties of a JoinRoomResponse.\n         * @memberof twoonone\n         * @interface IJoinRoomResponse\n         * @property {Object.<string,string>|null} [extra] JoinRoomResponse extra\n         */\n\n        /**\n         * Constructs a new JoinRoomResponse.\n         * @memberof twoonone\n         * @classdesc Represents a JoinRoomResponse.\n         * @implements IJoinRoomResponse\n         * @constructor\n         * @param {twoonone.IJoinRoomResponse=} [properties] Properties to set\n         */\n        function JoinRoomResponse(properties) {\n            this.extra = {};\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * JoinRoomResponse extra.\n         * @member {Object.<string,string>} extra\n         * @memberof twoonone.JoinRoomResponse\n         * @instance\n         */\n        JoinRoomResponse.prototype.extra = $util.emptyObject;\n\n        /**\n         * Creates a new JoinRoomResponse instance using the specified properties.\n         * @function create\n         * @memberof twoonone.JoinRoomResponse\n         * @static\n         * @param {twoonone.IJoinRoomResponse=} [properties] Properties to set\n         * @returns {twoonone.JoinRoomResponse} JoinRoomResponse instance\n         */\n        JoinRoomResponse.create = function create(properties) {\n            return new JoinRoomResponse(properties);\n        };\n\n        /**\n         * Encodes the specified JoinRoomResponse message. Does not implicitly {@link twoonone.JoinRoomResponse.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.JoinRoomResponse\n         * @static\n         * @param {twoonone.IJoinRoomResponse} message JoinRoomResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        JoinRoomResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.extra != null && Object.hasOwnProperty.call(message, \"extra\"))\n                for (let keys = Object.keys(message.extra), i = 0; i < keys.length; ++i)\n                    writer.uint32(/* id 100, wireType 2 =*/802).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.extra[keys[i]]).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified JoinRoomResponse message, length delimited. Does not implicitly {@link twoonone.JoinRoomResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.JoinRoomResponse\n         * @static\n         * @param {twoonone.IJoinRoomResponse} message JoinRoomResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        JoinRoomResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a JoinRoomResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.JoinRoomResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.JoinRoomResponse} JoinRoomResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        JoinRoomResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.JoinRoomResponse(), key, value;\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 100: {\n                        if (message.extra === $util.emptyObject)\n                            message.extra = {};\n                        let end2 = reader.uint32() + reader.pos;\n                        key = \"\";\n                        value = \"\";\n                        while (reader.pos < end2) {\n                            let tag2 = reader.uint32();\n                            switch (tag2 >>> 3) {\n                            case 1:\n                                key = reader.string();\n                                break;\n                            case 2:\n                                value = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag2 & 7);\n                                break;\n                            }\n                        }\n                        message.extra[key] = value;\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a JoinRoomResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.JoinRoomResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.JoinRoomResponse} JoinRoomResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        JoinRoomResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a JoinRoomResponse message.\n         * @function verify\n         * @memberof twoonone.JoinRoomResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        JoinRoomResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.extra != null && message.hasOwnProperty(\"extra\")) {\n                if (!$util.isObject(message.extra))\n                    return \"extra: object expected\";\n                let key = Object.keys(message.extra);\n                for (let i = 0; i < key.length; ++i)\n                    if (!$util.isString(message.extra[key[i]]))\n                        return \"extra: string{k:string} expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a JoinRoomResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.JoinRoomResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.JoinRoomResponse} JoinRoomResponse\n         */\n        JoinRoomResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.JoinRoomResponse)\n                return object;\n            let message = new $root.twoonone.JoinRoomResponse();\n            if (object.extra) {\n                if (typeof object.extra !== \"object\")\n                    throw TypeError(\".twoonone.JoinRoomResponse.extra: object expected\");\n                message.extra = {};\n                for (let keys = Object.keys(object.extra), i = 0; i < keys.length; ++i)\n                    message.extra[keys[i]] = String(object.extra[keys[i]]);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a JoinRoomResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.JoinRoomResponse\n         * @static\n         * @param {twoonone.JoinRoomResponse} message JoinRoomResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        JoinRoomResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.objects || options.defaults)\n                object.extra = {};\n            let keys2;\n            if (message.extra && (keys2 = Object.keys(message.extra)).length) {\n                object.extra = {};\n                for (let j = 0; j < keys2.length; ++j)\n                    object.extra[keys2[j]] = message.extra[keys2[j]];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this JoinRoomResponse to JSON.\n         * @function toJSON\n         * @memberof twoonone.JoinRoomResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        JoinRoomResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for JoinRoomResponse\n         * @function getTypeUrl\n         * @memberof twoonone.JoinRoomResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        JoinRoomResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.JoinRoomResponse\";\n        };\n\n        return JoinRoomResponse;\n    })();\n\n    twoonone.ExitRoomRequest = (function() {\n\n        /**\n         * Properties of an ExitRoomRequest.\n         * @memberof twoonone\n         * @interface IExitRoomRequest\n         * @property {string|null} [room_hash] ExitRoomRequest room_hash\n         */\n\n        /**\n         * Constructs a new ExitRoomRequest.\n         * @memberof twoonone\n         * @classdesc Represents an ExitRoomRequest.\n         * @implements IExitRoomRequest\n         * @constructor\n         * @param {twoonone.IExitRoomRequest=} [properties] Properties to set\n         */\n        function ExitRoomRequest(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ExitRoomRequest room_hash.\n         * @member {string} room_hash\n         * @memberof twoonone.ExitRoomRequest\n         * @instance\n         */\n        ExitRoomRequest.prototype.room_hash = \"\";\n\n        /**\n         * Creates a new ExitRoomRequest instance using the specified properties.\n         * @function create\n         * @memberof twoonone.ExitRoomRequest\n         * @static\n         * @param {twoonone.IExitRoomRequest=} [properties] Properties to set\n         * @returns {twoonone.ExitRoomRequest} ExitRoomRequest instance\n         */\n        ExitRoomRequest.create = function create(properties) {\n            return new ExitRoomRequest(properties);\n        };\n\n        /**\n         * Encodes the specified ExitRoomRequest message. Does not implicitly {@link twoonone.ExitRoomRequest.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.ExitRoomRequest\n         * @static\n         * @param {twoonone.IExitRoomRequest} message ExitRoomRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ExitRoomRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.room_hash != null && Object.hasOwnProperty.call(message, \"room_hash\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.room_hash);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ExitRoomRequest message, length delimited. Does not implicitly {@link twoonone.ExitRoomRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.ExitRoomRequest\n         * @static\n         * @param {twoonone.IExitRoomRequest} message ExitRoomRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ExitRoomRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an ExitRoomRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.ExitRoomRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.ExitRoomRequest} ExitRoomRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ExitRoomRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.ExitRoomRequest();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.room_hash = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an ExitRoomRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.ExitRoomRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.ExitRoomRequest} ExitRoomRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ExitRoomRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an ExitRoomRequest message.\n         * @function verify\n         * @memberof twoonone.ExitRoomRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ExitRoomRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                if (!$util.isString(message.room_hash))\n                    return \"room_hash: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates an ExitRoomRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.ExitRoomRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.ExitRoomRequest} ExitRoomRequest\n         */\n        ExitRoomRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.ExitRoomRequest)\n                return object;\n            let message = new $root.twoonone.ExitRoomRequest();\n            if (object.room_hash != null)\n                message.room_hash = String(object.room_hash);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an ExitRoomRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.ExitRoomRequest\n         * @static\n         * @param {twoonone.ExitRoomRequest} message ExitRoomRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ExitRoomRequest.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.room_hash = \"\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                object.room_hash = message.room_hash;\n            return object;\n        };\n\n        /**\n         * Converts this ExitRoomRequest to JSON.\n         * @function toJSON\n         * @memberof twoonone.ExitRoomRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ExitRoomRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ExitRoomRequest\n         * @function getTypeUrl\n         * @memberof twoonone.ExitRoomRequest\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ExitRoomRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.ExitRoomRequest\";\n        };\n\n        return ExitRoomRequest;\n    })();\n\n    twoonone.ExitRoomResponse = (function() {\n\n        /**\n         * Properties of an ExitRoomResponse.\n         * @memberof twoonone\n         * @interface IExitRoomResponse\n         * @property {Object.<string,string>|null} [extra] ExitRoomResponse extra\n         */\n\n        /**\n         * Constructs a new ExitRoomResponse.\n         * @memberof twoonone\n         * @classdesc Represents an ExitRoomResponse.\n         * @implements IExitRoomResponse\n         * @constructor\n         * @param {twoonone.IExitRoomResponse=} [properties] Properties to set\n         */\n        function ExitRoomResponse(properties) {\n            this.extra = {};\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ExitRoomResponse extra.\n         * @member {Object.<string,string>} extra\n         * @memberof twoonone.ExitRoomResponse\n         * @instance\n         */\n        ExitRoomResponse.prototype.extra = $util.emptyObject;\n\n        /**\n         * Creates a new ExitRoomResponse instance using the specified properties.\n         * @function create\n         * @memberof twoonone.ExitRoomResponse\n         * @static\n         * @param {twoonone.IExitRoomResponse=} [properties] Properties to set\n         * @returns {twoonone.ExitRoomResponse} ExitRoomResponse instance\n         */\n        ExitRoomResponse.create = function create(properties) {\n            return new ExitRoomResponse(properties);\n        };\n\n        /**\n         * Encodes the specified ExitRoomResponse message. Does not implicitly {@link twoonone.ExitRoomResponse.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.ExitRoomResponse\n         * @static\n         * @param {twoonone.IExitRoomResponse} message ExitRoomResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ExitRoomResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.extra != null && Object.hasOwnProperty.call(message, \"extra\"))\n                for (let keys = Object.keys(message.extra), i = 0; i < keys.length; ++i)\n                    writer.uint32(/* id 100, wireType 2 =*/802).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.extra[keys[i]]).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ExitRoomResponse message, length delimited. Does not implicitly {@link twoonone.ExitRoomResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.ExitRoomResponse\n         * @static\n         * @param {twoonone.IExitRoomResponse} message ExitRoomResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ExitRoomResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an ExitRoomResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.ExitRoomResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.ExitRoomResponse} ExitRoomResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ExitRoomResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.ExitRoomResponse(), key, value;\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 100: {\n                        if (message.extra === $util.emptyObject)\n                            message.extra = {};\n                        let end2 = reader.uint32() + reader.pos;\n                        key = \"\";\n                        value = \"\";\n                        while (reader.pos < end2) {\n                            let tag2 = reader.uint32();\n                            switch (tag2 >>> 3) {\n                            case 1:\n                                key = reader.string();\n                                break;\n                            case 2:\n                                value = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag2 & 7);\n                                break;\n                            }\n                        }\n                        message.extra[key] = value;\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an ExitRoomResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.ExitRoomResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.ExitRoomResponse} ExitRoomResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ExitRoomResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an ExitRoomResponse message.\n         * @function verify\n         * @memberof twoonone.ExitRoomResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ExitRoomResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.extra != null && message.hasOwnProperty(\"extra\")) {\n                if (!$util.isObject(message.extra))\n                    return \"extra: object expected\";\n                let key = Object.keys(message.extra);\n                for (let i = 0; i < key.length; ++i)\n                    if (!$util.isString(message.extra[key[i]]))\n                        return \"extra: string{k:string} expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates an ExitRoomResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.ExitRoomResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.ExitRoomResponse} ExitRoomResponse\n         */\n        ExitRoomResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.ExitRoomResponse)\n                return object;\n            let message = new $root.twoonone.ExitRoomResponse();\n            if (object.extra) {\n                if (typeof object.extra !== \"object\")\n                    throw TypeError(\".twoonone.ExitRoomResponse.extra: object expected\");\n                message.extra = {};\n                for (let keys = Object.keys(object.extra), i = 0; i < keys.length; ++i)\n                    message.extra[keys[i]] = String(object.extra[keys[i]]);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an ExitRoomResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.ExitRoomResponse\n         * @static\n         * @param {twoonone.ExitRoomResponse} message ExitRoomResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ExitRoomResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.objects || options.defaults)\n                object.extra = {};\n            let keys2;\n            if (message.extra && (keys2 = Object.keys(message.extra)).length) {\n                object.extra = {};\n                for (let j = 0; j < keys2.length; ++j)\n                    object.extra[keys2[j]] = message.extra[keys2[j]];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ExitRoomResponse to JSON.\n         * @function toJSON\n         * @memberof twoonone.ExitRoomResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ExitRoomResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for ExitRoomResponse\n         * @function getTypeUrl\n         * @memberof twoonone.ExitRoomResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        ExitRoomResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.ExitRoomResponse\";\n        };\n\n        return ExitRoomResponse;\n    })();\n\n    twoonone.RobLandownerRequest = (function() {\n\n        /**\n         * Properties of a RobLandownerRequest.\n         * @memberof twoonone\n         * @interface IRobLandownerRequest\n         * @property {string|null} [room_hash] RobLandownerRequest room_hash\n         */\n\n        /**\n         * Constructs a new RobLandownerRequest.\n         * @memberof twoonone\n         * @classdesc Represents a RobLandownerRequest.\n         * @implements IRobLandownerRequest\n         * @constructor\n         * @param {twoonone.IRobLandownerRequest=} [properties] Properties to set\n         */\n        function RobLandownerRequest(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * RobLandownerRequest room_hash.\n         * @member {string} room_hash\n         * @memberof twoonone.RobLandownerRequest\n         * @instance\n         */\n        RobLandownerRequest.prototype.room_hash = \"\";\n\n        /**\n         * Creates a new RobLandownerRequest instance using the specified properties.\n         * @function create\n         * @memberof twoonone.RobLandownerRequest\n         * @static\n         * @param {twoonone.IRobLandownerRequest=} [properties] Properties to set\n         * @returns {twoonone.RobLandownerRequest} RobLandownerRequest instance\n         */\n        RobLandownerRequest.create = function create(properties) {\n            return new RobLandownerRequest(properties);\n        };\n\n        /**\n         * Encodes the specified RobLandownerRequest message. Does not implicitly {@link twoonone.RobLandownerRequest.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.RobLandownerRequest\n         * @static\n         * @param {twoonone.IRobLandownerRequest} message RobLandownerRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RobLandownerRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.room_hash != null && Object.hasOwnProperty.call(message, \"room_hash\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.room_hash);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RobLandownerRequest message, length delimited. Does not implicitly {@link twoonone.RobLandownerRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.RobLandownerRequest\n         * @static\n         * @param {twoonone.IRobLandownerRequest} message RobLandownerRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RobLandownerRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RobLandownerRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.RobLandownerRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.RobLandownerRequest} RobLandownerRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RobLandownerRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RobLandownerRequest();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.room_hash = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RobLandownerRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.RobLandownerRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.RobLandownerRequest} RobLandownerRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RobLandownerRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RobLandownerRequest message.\n         * @function verify\n         * @memberof twoonone.RobLandownerRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RobLandownerRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                if (!$util.isString(message.room_hash))\n                    return \"room_hash: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a RobLandownerRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.RobLandownerRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.RobLandownerRequest} RobLandownerRequest\n         */\n        RobLandownerRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.RobLandownerRequest)\n                return object;\n            let message = new $root.twoonone.RobLandownerRequest();\n            if (object.room_hash != null)\n                message.room_hash = String(object.room_hash);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a RobLandownerRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.RobLandownerRequest\n         * @static\n         * @param {twoonone.RobLandownerRequest} message RobLandownerRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RobLandownerRequest.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.room_hash = \"\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                object.room_hash = message.room_hash;\n            return object;\n        };\n\n        /**\n         * Converts this RobLandownerRequest to JSON.\n         * @function toJSON\n         * @memberof twoonone.RobLandownerRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RobLandownerRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RobLandownerRequest\n         * @function getTypeUrl\n         * @memberof twoonone.RobLandownerRequest\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RobLandownerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.RobLandownerRequest\";\n        };\n\n        return RobLandownerRequest;\n    })();\n\n    twoonone.RobLandownerResponse = (function() {\n\n        /**\n         * Properties of a RobLandownerResponse.\n         * @memberof twoonone\n         * @interface IRobLandownerResponse\n         * @property {Object.<string,string>|null} [extra] RobLandownerResponse extra\n         */\n\n        /**\n         * Constructs a new RobLandownerResponse.\n         * @memberof twoonone\n         * @classdesc Represents a RobLandownerResponse.\n         * @implements IRobLandownerResponse\n         * @constructor\n         * @param {twoonone.IRobLandownerResponse=} [properties] Properties to set\n         */\n        function RobLandownerResponse(properties) {\n            this.extra = {};\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * RobLandownerResponse extra.\n         * @member {Object.<string,string>} extra\n         * @memberof twoonone.RobLandownerResponse\n         * @instance\n         */\n        RobLandownerResponse.prototype.extra = $util.emptyObject;\n\n        /**\n         * Creates a new RobLandownerResponse instance using the specified properties.\n         * @function create\n         * @memberof twoonone.RobLandownerResponse\n         * @static\n         * @param {twoonone.IRobLandownerResponse=} [properties] Properties to set\n         * @returns {twoonone.RobLandownerResponse} RobLandownerResponse instance\n         */\n        RobLandownerResponse.create = function create(properties) {\n            return new RobLandownerResponse(properties);\n        };\n\n        /**\n         * Encodes the specified RobLandownerResponse message. Does not implicitly {@link twoonone.RobLandownerResponse.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.RobLandownerResponse\n         * @static\n         * @param {twoonone.IRobLandownerResponse} message RobLandownerResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RobLandownerResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.extra != null && Object.hasOwnProperty.call(message, \"extra\"))\n                for (let keys = Object.keys(message.extra), i = 0; i < keys.length; ++i)\n                    writer.uint32(/* id 100, wireType 2 =*/802).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.extra[keys[i]]).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RobLandownerResponse message, length delimited. Does not implicitly {@link twoonone.RobLandownerResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.RobLandownerResponse\n         * @static\n         * @param {twoonone.IRobLandownerResponse} message RobLandownerResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RobLandownerResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RobLandownerResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.RobLandownerResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.RobLandownerResponse} RobLandownerResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RobLandownerResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RobLandownerResponse(), key, value;\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 100: {\n                        if (message.extra === $util.emptyObject)\n                            message.extra = {};\n                        let end2 = reader.uint32() + reader.pos;\n                        key = \"\";\n                        value = \"\";\n                        while (reader.pos < end2) {\n                            let tag2 = reader.uint32();\n                            switch (tag2 >>> 3) {\n                            case 1:\n                                key = reader.string();\n                                break;\n                            case 2:\n                                value = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag2 & 7);\n                                break;\n                            }\n                        }\n                        message.extra[key] = value;\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RobLandownerResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.RobLandownerResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.RobLandownerResponse} RobLandownerResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RobLandownerResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RobLandownerResponse message.\n         * @function verify\n         * @memberof twoonone.RobLandownerResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RobLandownerResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.extra != null && message.hasOwnProperty(\"extra\")) {\n                if (!$util.isObject(message.extra))\n                    return \"extra: object expected\";\n                let key = Object.keys(message.extra);\n                for (let i = 0; i < key.length; ++i)\n                    if (!$util.isString(message.extra[key[i]]))\n                        return \"extra: string{k:string} expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a RobLandownerResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.RobLandownerResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.RobLandownerResponse} RobLandownerResponse\n         */\n        RobLandownerResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.RobLandownerResponse)\n                return object;\n            let message = new $root.twoonone.RobLandownerResponse();\n            if (object.extra) {\n                if (typeof object.extra !== \"object\")\n                    throw TypeError(\".twoonone.RobLandownerResponse.extra: object expected\");\n                message.extra = {};\n                for (let keys = Object.keys(object.extra), i = 0; i < keys.length; ++i)\n                    message.extra[keys[i]] = String(object.extra[keys[i]]);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a RobLandownerResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.RobLandownerResponse\n         * @static\n         * @param {twoonone.RobLandownerResponse} message RobLandownerResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RobLandownerResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.objects || options.defaults)\n                object.extra = {};\n            let keys2;\n            if (message.extra && (keys2 = Object.keys(message.extra)).length) {\n                object.extra = {};\n                for (let j = 0; j < keys2.length; ++j)\n                    object.extra[keys2[j]] = message.extra[keys2[j]];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this RobLandownerResponse to JSON.\n         * @function toJSON\n         * @memberof twoonone.RobLandownerResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RobLandownerResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RobLandownerResponse\n         * @function getTypeUrl\n         * @memberof twoonone.RobLandownerResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RobLandownerResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.RobLandownerResponse\";\n        };\n\n        return RobLandownerResponse;\n    })();\n\n    twoonone.NoRobLandownerRequest = (function() {\n\n        /**\n         * Properties of a NoRobLandownerRequest.\n         * @memberof twoonone\n         * @interface INoRobLandownerRequest\n         * @property {string|null} [room_hash] NoRobLandownerRequest room_hash\n         */\n\n        /**\n         * Constructs a new NoRobLandownerRequest.\n         * @memberof twoonone\n         * @classdesc Represents a NoRobLandownerRequest.\n         * @implements INoRobLandownerRequest\n         * @constructor\n         * @param {twoonone.INoRobLandownerRequest=} [properties] Properties to set\n         */\n        function NoRobLandownerRequest(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NoRobLandownerRequest room_hash.\n         * @member {string} room_hash\n         * @memberof twoonone.NoRobLandownerRequest\n         * @instance\n         */\n        NoRobLandownerRequest.prototype.room_hash = \"\";\n\n        /**\n         * Creates a new NoRobLandownerRequest instance using the specified properties.\n         * @function create\n         * @memberof twoonone.NoRobLandownerRequest\n         * @static\n         * @param {twoonone.INoRobLandownerRequest=} [properties] Properties to set\n         * @returns {twoonone.NoRobLandownerRequest} NoRobLandownerRequest instance\n         */\n        NoRobLandownerRequest.create = function create(properties) {\n            return new NoRobLandownerRequest(properties);\n        };\n\n        /**\n         * Encodes the specified NoRobLandownerRequest message. Does not implicitly {@link twoonone.NoRobLandownerRequest.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.NoRobLandownerRequest\n         * @static\n         * @param {twoonone.INoRobLandownerRequest} message NoRobLandownerRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NoRobLandownerRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.room_hash != null && Object.hasOwnProperty.call(message, \"room_hash\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.room_hash);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NoRobLandownerRequest message, length delimited. Does not implicitly {@link twoonone.NoRobLandownerRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.NoRobLandownerRequest\n         * @static\n         * @param {twoonone.INoRobLandownerRequest} message NoRobLandownerRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NoRobLandownerRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NoRobLandownerRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.NoRobLandownerRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.NoRobLandownerRequest} NoRobLandownerRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NoRobLandownerRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.NoRobLandownerRequest();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.room_hash = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NoRobLandownerRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.NoRobLandownerRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.NoRobLandownerRequest} NoRobLandownerRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NoRobLandownerRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NoRobLandownerRequest message.\n         * @function verify\n         * @memberof twoonone.NoRobLandownerRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NoRobLandownerRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                if (!$util.isString(message.room_hash))\n                    return \"room_hash: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NoRobLandownerRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.NoRobLandownerRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.NoRobLandownerRequest} NoRobLandownerRequest\n         */\n        NoRobLandownerRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.NoRobLandownerRequest)\n                return object;\n            let message = new $root.twoonone.NoRobLandownerRequest();\n            if (object.room_hash != null)\n                message.room_hash = String(object.room_hash);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NoRobLandownerRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.NoRobLandownerRequest\n         * @static\n         * @param {twoonone.NoRobLandownerRequest} message NoRobLandownerRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NoRobLandownerRequest.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.room_hash = \"\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                object.room_hash = message.room_hash;\n            return object;\n        };\n\n        /**\n         * Converts this NoRobLandownerRequest to JSON.\n         * @function toJSON\n         * @memberof twoonone.NoRobLandownerRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NoRobLandownerRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for NoRobLandownerRequest\n         * @function getTypeUrl\n         * @memberof twoonone.NoRobLandownerRequest\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        NoRobLandownerRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.NoRobLandownerRequest\";\n        };\n\n        return NoRobLandownerRequest;\n    })();\n\n    twoonone.NoRobLandownerResponse = (function() {\n\n        /**\n         * Properties of a NoRobLandownerResponse.\n         * @memberof twoonone\n         * @interface INoRobLandownerResponse\n         * @property {Object.<string,string>|null} [extra] NoRobLandownerResponse extra\n         */\n\n        /**\n         * Constructs a new NoRobLandownerResponse.\n         * @memberof twoonone\n         * @classdesc Represents a NoRobLandownerResponse.\n         * @implements INoRobLandownerResponse\n         * @constructor\n         * @param {twoonone.INoRobLandownerResponse=} [properties] Properties to set\n         */\n        function NoRobLandownerResponse(properties) {\n            this.extra = {};\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NoRobLandownerResponse extra.\n         * @member {Object.<string,string>} extra\n         * @memberof twoonone.NoRobLandownerResponse\n         * @instance\n         */\n        NoRobLandownerResponse.prototype.extra = $util.emptyObject;\n\n        /**\n         * Creates a new NoRobLandownerResponse instance using the specified properties.\n         * @function create\n         * @memberof twoonone.NoRobLandownerResponse\n         * @static\n         * @param {twoonone.INoRobLandownerResponse=} [properties] Properties to set\n         * @returns {twoonone.NoRobLandownerResponse} NoRobLandownerResponse instance\n         */\n        NoRobLandownerResponse.create = function create(properties) {\n            return new NoRobLandownerResponse(properties);\n        };\n\n        /**\n         * Encodes the specified NoRobLandownerResponse message. Does not implicitly {@link twoonone.NoRobLandownerResponse.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.NoRobLandownerResponse\n         * @static\n         * @param {twoonone.INoRobLandownerResponse} message NoRobLandownerResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NoRobLandownerResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.extra != null && Object.hasOwnProperty.call(message, \"extra\"))\n                for (let keys = Object.keys(message.extra), i = 0; i < keys.length; ++i)\n                    writer.uint32(/* id 100, wireType 2 =*/802).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.extra[keys[i]]).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NoRobLandownerResponse message, length delimited. Does not implicitly {@link twoonone.NoRobLandownerResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.NoRobLandownerResponse\n         * @static\n         * @param {twoonone.INoRobLandownerResponse} message NoRobLandownerResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NoRobLandownerResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NoRobLandownerResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.NoRobLandownerResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.NoRobLandownerResponse} NoRobLandownerResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NoRobLandownerResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.NoRobLandownerResponse(), key, value;\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 100: {\n                        if (message.extra === $util.emptyObject)\n                            message.extra = {};\n                        let end2 = reader.uint32() + reader.pos;\n                        key = \"\";\n                        value = \"\";\n                        while (reader.pos < end2) {\n                            let tag2 = reader.uint32();\n                            switch (tag2 >>> 3) {\n                            case 1:\n                                key = reader.string();\n                                break;\n                            case 2:\n                                value = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag2 & 7);\n                                break;\n                            }\n                        }\n                        message.extra[key] = value;\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NoRobLandownerResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.NoRobLandownerResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.NoRobLandownerResponse} NoRobLandownerResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NoRobLandownerResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NoRobLandownerResponse message.\n         * @function verify\n         * @memberof twoonone.NoRobLandownerResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NoRobLandownerResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.extra != null && message.hasOwnProperty(\"extra\")) {\n                if (!$util.isObject(message.extra))\n                    return \"extra: object expected\";\n                let key = Object.keys(message.extra);\n                for (let i = 0; i < key.length; ++i)\n                    if (!$util.isString(message.extra[key[i]]))\n                        return \"extra: string{k:string} expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a NoRobLandownerResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.NoRobLandownerResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.NoRobLandownerResponse} NoRobLandownerResponse\n         */\n        NoRobLandownerResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.NoRobLandownerResponse)\n                return object;\n            let message = new $root.twoonone.NoRobLandownerResponse();\n            if (object.extra) {\n                if (typeof object.extra !== \"object\")\n                    throw TypeError(\".twoonone.NoRobLandownerResponse.extra: object expected\");\n                message.extra = {};\n                for (let keys = Object.keys(object.extra), i = 0; i < keys.length; ++i)\n                    message.extra[keys[i]] = String(object.extra[keys[i]]);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NoRobLandownerResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.NoRobLandownerResponse\n         * @static\n         * @param {twoonone.NoRobLandownerResponse} message NoRobLandownerResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NoRobLandownerResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.objects || options.defaults)\n                object.extra = {};\n            let keys2;\n            if (message.extra && (keys2 = Object.keys(message.extra)).length) {\n                object.extra = {};\n                for (let j = 0; j < keys2.length; ++j)\n                    object.extra[keys2[j]] = message.extra[keys2[j]];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this NoRobLandownerResponse to JSON.\n         * @function toJSON\n         * @memberof twoonone.NoRobLandownerResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NoRobLandownerResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for NoRobLandownerResponse\n         * @function getTypeUrl\n         * @memberof twoonone.NoRobLandownerResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        NoRobLandownerResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.NoRobLandownerResponse\";\n        };\n\n        return NoRobLandownerResponse;\n    })();\n\n    twoonone.SendCardRequest = (function() {\n\n        /**\n         * Properties of a SendCardRequest.\n         * @memberof twoonone\n         * @interface ISendCardRequest\n         * @property {string|null} [room_hash] SendCardRequest room_hash\n         * @property {Array.<twoonone.ICard>|null} [sendcards] SendCardRequest sendcards\n         */\n\n        /**\n         * Constructs a new SendCardRequest.\n         * @memberof twoonone\n         * @classdesc Represents a SendCardRequest.\n         * @implements ISendCardRequest\n         * @constructor\n         * @param {twoonone.ISendCardRequest=} [properties] Properties to set\n         */\n        function SendCardRequest(properties) {\n            this.sendcards = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SendCardRequest room_hash.\n         * @member {string} room_hash\n         * @memberof twoonone.SendCardRequest\n         * @instance\n         */\n        SendCardRequest.prototype.room_hash = \"\";\n\n        /**\n         * SendCardRequest sendcards.\n         * @member {Array.<twoonone.ICard>} sendcards\n         * @memberof twoonone.SendCardRequest\n         * @instance\n         */\n        SendCardRequest.prototype.sendcards = $util.emptyArray;\n\n        /**\n         * Creates a new SendCardRequest instance using the specified properties.\n         * @function create\n         * @memberof twoonone.SendCardRequest\n         * @static\n         * @param {twoonone.ISendCardRequest=} [properties] Properties to set\n         * @returns {twoonone.SendCardRequest} SendCardRequest instance\n         */\n        SendCardRequest.create = function create(properties) {\n            return new SendCardRequest(properties);\n        };\n\n        /**\n         * Encodes the specified SendCardRequest message. Does not implicitly {@link twoonone.SendCardRequest.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.SendCardRequest\n         * @static\n         * @param {twoonone.ISendCardRequest} message SendCardRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SendCardRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.room_hash != null && Object.hasOwnProperty.call(message, \"room_hash\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.room_hash);\n            if (message.sendcards != null && message.sendcards.length)\n                for (let i = 0; i < message.sendcards.length; ++i)\n                    $root.twoonone.Card.encode(message.sendcards[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SendCardRequest message, length delimited. Does not implicitly {@link twoonone.SendCardRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.SendCardRequest\n         * @static\n         * @param {twoonone.ISendCardRequest} message SendCardRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SendCardRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SendCardRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.SendCardRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.SendCardRequest} SendCardRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SendCardRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.SendCardRequest();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.room_hash = reader.string();\n                        break;\n                    }\n                case 2: {\n                        if (!(message.sendcards && message.sendcards.length))\n                            message.sendcards = [];\n                        message.sendcards.push($root.twoonone.Card.decode(reader, reader.uint32()));\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SendCardRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.SendCardRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.SendCardRequest} SendCardRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SendCardRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SendCardRequest message.\n         * @function verify\n         * @memberof twoonone.SendCardRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SendCardRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                if (!$util.isString(message.room_hash))\n                    return \"room_hash: string expected\";\n            if (message.sendcards != null && message.hasOwnProperty(\"sendcards\")) {\n                if (!Array.isArray(message.sendcards))\n                    return \"sendcards: array expected\";\n                for (let i = 0; i < message.sendcards.length; ++i) {\n                    let error = $root.twoonone.Card.verify(message.sendcards[i]);\n                    if (error)\n                        return \"sendcards.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a SendCardRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.SendCardRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.SendCardRequest} SendCardRequest\n         */\n        SendCardRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.SendCardRequest)\n                return object;\n            let message = new $root.twoonone.SendCardRequest();\n            if (object.room_hash != null)\n                message.room_hash = String(object.room_hash);\n            if (object.sendcards) {\n                if (!Array.isArray(object.sendcards))\n                    throw TypeError(\".twoonone.SendCardRequest.sendcards: array expected\");\n                message.sendcards = [];\n                for (let i = 0; i < object.sendcards.length; ++i) {\n                    if (typeof object.sendcards[i] !== \"object\")\n                        throw TypeError(\".twoonone.SendCardRequest.sendcards: object expected\");\n                    message.sendcards[i] = $root.twoonone.Card.fromObject(object.sendcards[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SendCardRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.SendCardRequest\n         * @static\n         * @param {twoonone.SendCardRequest} message SendCardRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SendCardRequest.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults)\n                object.sendcards = [];\n            if (options.defaults)\n                object.room_hash = \"\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                object.room_hash = message.room_hash;\n            if (message.sendcards && message.sendcards.length) {\n                object.sendcards = [];\n                for (let j = 0; j < message.sendcards.length; ++j)\n                    object.sendcards[j] = $root.twoonone.Card.toObject(message.sendcards[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this SendCardRequest to JSON.\n         * @function toJSON\n         * @memberof twoonone.SendCardRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SendCardRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SendCardRequest\n         * @function getTypeUrl\n         * @memberof twoonone.SendCardRequest\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SendCardRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.SendCardRequest\";\n        };\n\n        return SendCardRequest;\n    })();\n\n    twoonone.SendCardResponse = (function() {\n\n        /**\n         * Properties of a SendCardResponse.\n         * @memberof twoonone\n         * @interface ISendCardResponse\n         * @property {Object.<string,string>|null} [extra] SendCardResponse extra\n         */\n\n        /**\n         * Constructs a new SendCardResponse.\n         * @memberof twoonone\n         * @classdesc Represents a SendCardResponse.\n         * @implements ISendCardResponse\n         * @constructor\n         * @param {twoonone.ISendCardResponse=} [properties] Properties to set\n         */\n        function SendCardResponse(properties) {\n            this.extra = {};\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * SendCardResponse extra.\n         * @member {Object.<string,string>} extra\n         * @memberof twoonone.SendCardResponse\n         * @instance\n         */\n        SendCardResponse.prototype.extra = $util.emptyObject;\n\n        /**\n         * Creates a new SendCardResponse instance using the specified properties.\n         * @function create\n         * @memberof twoonone.SendCardResponse\n         * @static\n         * @param {twoonone.ISendCardResponse=} [properties] Properties to set\n         * @returns {twoonone.SendCardResponse} SendCardResponse instance\n         */\n        SendCardResponse.create = function create(properties) {\n            return new SendCardResponse(properties);\n        };\n\n        /**\n         * Encodes the specified SendCardResponse message. Does not implicitly {@link twoonone.SendCardResponse.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.SendCardResponse\n         * @static\n         * @param {twoonone.ISendCardResponse} message SendCardResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SendCardResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.extra != null && Object.hasOwnProperty.call(message, \"extra\"))\n                for (let keys = Object.keys(message.extra), i = 0; i < keys.length; ++i)\n                    writer.uint32(/* id 100, wireType 2 =*/802).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.extra[keys[i]]).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified SendCardResponse message, length delimited. Does not implicitly {@link twoonone.SendCardResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.SendCardResponse\n         * @static\n         * @param {twoonone.ISendCardResponse} message SendCardResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        SendCardResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a SendCardResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.SendCardResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.SendCardResponse} SendCardResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SendCardResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.SendCardResponse(), key, value;\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 100: {\n                        if (message.extra === $util.emptyObject)\n                            message.extra = {};\n                        let end2 = reader.uint32() + reader.pos;\n                        key = \"\";\n                        value = \"\";\n                        while (reader.pos < end2) {\n                            let tag2 = reader.uint32();\n                            switch (tag2 >>> 3) {\n                            case 1:\n                                key = reader.string();\n                                break;\n                            case 2:\n                                value = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag2 & 7);\n                                break;\n                            }\n                        }\n                        message.extra[key] = value;\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a SendCardResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.SendCardResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.SendCardResponse} SendCardResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        SendCardResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a SendCardResponse message.\n         * @function verify\n         * @memberof twoonone.SendCardResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        SendCardResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.extra != null && message.hasOwnProperty(\"extra\")) {\n                if (!$util.isObject(message.extra))\n                    return \"extra: object expected\";\n                let key = Object.keys(message.extra);\n                for (let i = 0; i < key.length; ++i)\n                    if (!$util.isString(message.extra[key[i]]))\n                        return \"extra: string{k:string} expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a SendCardResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.SendCardResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.SendCardResponse} SendCardResponse\n         */\n        SendCardResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.SendCardResponse)\n                return object;\n            let message = new $root.twoonone.SendCardResponse();\n            if (object.extra) {\n                if (typeof object.extra !== \"object\")\n                    throw TypeError(\".twoonone.SendCardResponse.extra: object expected\");\n                message.extra = {};\n                for (let keys = Object.keys(object.extra), i = 0; i < keys.length; ++i)\n                    message.extra[keys[i]] = String(object.extra[keys[i]]);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a SendCardResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.SendCardResponse\n         * @static\n         * @param {twoonone.SendCardResponse} message SendCardResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        SendCardResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.objects || options.defaults)\n                object.extra = {};\n            let keys2;\n            if (message.extra && (keys2 = Object.keys(message.extra)).length) {\n                object.extra = {};\n                for (let j = 0; j < keys2.length; ++j)\n                    object.extra[keys2[j]] = message.extra[keys2[j]];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this SendCardResponse to JSON.\n         * @function toJSON\n         * @memberof twoonone.SendCardResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        SendCardResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for SendCardResponse\n         * @function getTypeUrl\n         * @memberof twoonone.SendCardResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        SendCardResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.SendCardResponse\";\n        };\n\n        return SendCardResponse;\n    })();\n\n    twoonone.NoSendCardRequest = (function() {\n\n        /**\n         * Properties of a NoSendCardRequest.\n         * @memberof twoonone\n         * @interface INoSendCardRequest\n         * @property {string|null} [room_hash] NoSendCardRequest room_hash\n         */\n\n        /**\n         * Constructs a new NoSendCardRequest.\n         * @memberof twoonone\n         * @classdesc Represents a NoSendCardRequest.\n         * @implements INoSendCardRequest\n         * @constructor\n         * @param {twoonone.INoSendCardRequest=} [properties] Properties to set\n         */\n        function NoSendCardRequest(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NoSendCardRequest room_hash.\n         * @member {string} room_hash\n         * @memberof twoonone.NoSendCardRequest\n         * @instance\n         */\n        NoSendCardRequest.prototype.room_hash = \"\";\n\n        /**\n         * Creates a new NoSendCardRequest instance using the specified properties.\n         * @function create\n         * @memberof twoonone.NoSendCardRequest\n         * @static\n         * @param {twoonone.INoSendCardRequest=} [properties] Properties to set\n         * @returns {twoonone.NoSendCardRequest} NoSendCardRequest instance\n         */\n        NoSendCardRequest.create = function create(properties) {\n            return new NoSendCardRequest(properties);\n        };\n\n        /**\n         * Encodes the specified NoSendCardRequest message. Does not implicitly {@link twoonone.NoSendCardRequest.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.NoSendCardRequest\n         * @static\n         * @param {twoonone.INoSendCardRequest} message NoSendCardRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NoSendCardRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.room_hash != null && Object.hasOwnProperty.call(message, \"room_hash\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.room_hash);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NoSendCardRequest message, length delimited. Does not implicitly {@link twoonone.NoSendCardRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.NoSendCardRequest\n         * @static\n         * @param {twoonone.INoSendCardRequest} message NoSendCardRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NoSendCardRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NoSendCardRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.NoSendCardRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.NoSendCardRequest} NoSendCardRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NoSendCardRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.NoSendCardRequest();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.room_hash = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NoSendCardRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.NoSendCardRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.NoSendCardRequest} NoSendCardRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NoSendCardRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NoSendCardRequest message.\n         * @function verify\n         * @memberof twoonone.NoSendCardRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NoSendCardRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                if (!$util.isString(message.room_hash))\n                    return \"room_hash: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NoSendCardRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.NoSendCardRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.NoSendCardRequest} NoSendCardRequest\n         */\n        NoSendCardRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.NoSendCardRequest)\n                return object;\n            let message = new $root.twoonone.NoSendCardRequest();\n            if (object.room_hash != null)\n                message.room_hash = String(object.room_hash);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NoSendCardRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.NoSendCardRequest\n         * @static\n         * @param {twoonone.NoSendCardRequest} message NoSendCardRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NoSendCardRequest.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.room_hash = \"\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                object.room_hash = message.room_hash;\n            return object;\n        };\n\n        /**\n         * Converts this NoSendCardRequest to JSON.\n         * @function toJSON\n         * @memberof twoonone.NoSendCardRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NoSendCardRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for NoSendCardRequest\n         * @function getTypeUrl\n         * @memberof twoonone.NoSendCardRequest\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        NoSendCardRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.NoSendCardRequest\";\n        };\n\n        return NoSendCardRequest;\n    })();\n\n    twoonone.NoSendCardResponse = (function() {\n\n        /**\n         * Properties of a NoSendCardResponse.\n         * @memberof twoonone\n         * @interface INoSendCardResponse\n         * @property {Object.<string,string>|null} [extra] NoSendCardResponse extra\n         */\n\n        /**\n         * Constructs a new NoSendCardResponse.\n         * @memberof twoonone\n         * @classdesc Represents a NoSendCardResponse.\n         * @implements INoSendCardResponse\n         * @constructor\n         * @param {twoonone.INoSendCardResponse=} [properties] Properties to set\n         */\n        function NoSendCardResponse(properties) {\n            this.extra = {};\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NoSendCardResponse extra.\n         * @member {Object.<string,string>} extra\n         * @memberof twoonone.NoSendCardResponse\n         * @instance\n         */\n        NoSendCardResponse.prototype.extra = $util.emptyObject;\n\n        /**\n         * Creates a new NoSendCardResponse instance using the specified properties.\n         * @function create\n         * @memberof twoonone.NoSendCardResponse\n         * @static\n         * @param {twoonone.INoSendCardResponse=} [properties] Properties to set\n         * @returns {twoonone.NoSendCardResponse} NoSendCardResponse instance\n         */\n        NoSendCardResponse.create = function create(properties) {\n            return new NoSendCardResponse(properties);\n        };\n\n        /**\n         * Encodes the specified NoSendCardResponse message. Does not implicitly {@link twoonone.NoSendCardResponse.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.NoSendCardResponse\n         * @static\n         * @param {twoonone.INoSendCardResponse} message NoSendCardResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NoSendCardResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.extra != null && Object.hasOwnProperty.call(message, \"extra\"))\n                for (let keys = Object.keys(message.extra), i = 0; i < keys.length; ++i)\n                    writer.uint32(/* id 100, wireType 2 =*/802).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.extra[keys[i]]).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NoSendCardResponse message, length delimited. Does not implicitly {@link twoonone.NoSendCardResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.NoSendCardResponse\n         * @static\n         * @param {twoonone.INoSendCardResponse} message NoSendCardResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NoSendCardResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NoSendCardResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.NoSendCardResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.NoSendCardResponse} NoSendCardResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NoSendCardResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.NoSendCardResponse(), key, value;\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 100: {\n                        if (message.extra === $util.emptyObject)\n                            message.extra = {};\n                        let end2 = reader.uint32() + reader.pos;\n                        key = \"\";\n                        value = \"\";\n                        while (reader.pos < end2) {\n                            let tag2 = reader.uint32();\n                            switch (tag2 >>> 3) {\n                            case 1:\n                                key = reader.string();\n                                break;\n                            case 2:\n                                value = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag2 & 7);\n                                break;\n                            }\n                        }\n                        message.extra[key] = value;\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NoSendCardResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.NoSendCardResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.NoSendCardResponse} NoSendCardResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NoSendCardResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NoSendCardResponse message.\n         * @function verify\n         * @memberof twoonone.NoSendCardResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NoSendCardResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.extra != null && message.hasOwnProperty(\"extra\")) {\n                if (!$util.isObject(message.extra))\n                    return \"extra: object expected\";\n                let key = Object.keys(message.extra);\n                for (let i = 0; i < key.length; ++i)\n                    if (!$util.isString(message.extra[key[i]]))\n                        return \"extra: string{k:string} expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a NoSendCardResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.NoSendCardResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.NoSendCardResponse} NoSendCardResponse\n         */\n        NoSendCardResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.NoSendCardResponse)\n                return object;\n            let message = new $root.twoonone.NoSendCardResponse();\n            if (object.extra) {\n                if (typeof object.extra !== \"object\")\n                    throw TypeError(\".twoonone.NoSendCardResponse.extra: object expected\");\n                message.extra = {};\n                for (let keys = Object.keys(object.extra), i = 0; i < keys.length; ++i)\n                    message.extra[keys[i]] = String(object.extra[keys[i]]);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NoSendCardResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.NoSendCardResponse\n         * @static\n         * @param {twoonone.NoSendCardResponse} message NoSendCardResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NoSendCardResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.objects || options.defaults)\n                object.extra = {};\n            let keys2;\n            if (message.extra && (keys2 = Object.keys(message.extra)).length) {\n                object.extra = {};\n                for (let j = 0; j < keys2.length; ++j)\n                    object.extra[keys2[j]] = message.extra[keys2[j]];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this NoSendCardResponse to JSON.\n         * @function toJSON\n         * @memberof twoonone.NoSendCardResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NoSendCardResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for NoSendCardResponse\n         * @function getTypeUrl\n         * @memberof twoonone.NoSendCardResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        NoSendCardResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.NoSendCardResponse\";\n        };\n\n        return NoSendCardResponse;\n    })();\n\n    twoonone.GetDailyCoinRequest = (function() {\n\n        /**\n         * Properties of a GetDailyCoinRequest.\n         * @memberof twoonone\n         * @interface IGetDailyCoinRequest\n         */\n\n        /**\n         * Constructs a new GetDailyCoinRequest.\n         * @memberof twoonone\n         * @classdesc Represents a GetDailyCoinRequest.\n         * @implements IGetDailyCoinRequest\n         * @constructor\n         * @param {twoonone.IGetDailyCoinRequest=} [properties] Properties to set\n         */\n        function GetDailyCoinRequest(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new GetDailyCoinRequest instance using the specified properties.\n         * @function create\n         * @memberof twoonone.GetDailyCoinRequest\n         * @static\n         * @param {twoonone.IGetDailyCoinRequest=} [properties] Properties to set\n         * @returns {twoonone.GetDailyCoinRequest} GetDailyCoinRequest instance\n         */\n        GetDailyCoinRequest.create = function create(properties) {\n            return new GetDailyCoinRequest(properties);\n        };\n\n        /**\n         * Encodes the specified GetDailyCoinRequest message. Does not implicitly {@link twoonone.GetDailyCoinRequest.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.GetDailyCoinRequest\n         * @static\n         * @param {twoonone.IGetDailyCoinRequest} message GetDailyCoinRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetDailyCoinRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GetDailyCoinRequest message, length delimited. Does not implicitly {@link twoonone.GetDailyCoinRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.GetDailyCoinRequest\n         * @static\n         * @param {twoonone.IGetDailyCoinRequest} message GetDailyCoinRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetDailyCoinRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GetDailyCoinRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.GetDailyCoinRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.GetDailyCoinRequest} GetDailyCoinRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetDailyCoinRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.GetDailyCoinRequest();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GetDailyCoinRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.GetDailyCoinRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.GetDailyCoinRequest} GetDailyCoinRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetDailyCoinRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GetDailyCoinRequest message.\n         * @function verify\n         * @memberof twoonone.GetDailyCoinRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GetDailyCoinRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a GetDailyCoinRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.GetDailyCoinRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.GetDailyCoinRequest} GetDailyCoinRequest\n         */\n        GetDailyCoinRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.GetDailyCoinRequest)\n                return object;\n            return new $root.twoonone.GetDailyCoinRequest();\n        };\n\n        /**\n         * Creates a plain object from a GetDailyCoinRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.GetDailyCoinRequest\n         * @static\n         * @param {twoonone.GetDailyCoinRequest} message GetDailyCoinRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GetDailyCoinRequest.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this GetDailyCoinRequest to JSON.\n         * @function toJSON\n         * @memberof twoonone.GetDailyCoinRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GetDailyCoinRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for GetDailyCoinRequest\n         * @function getTypeUrl\n         * @memberof twoonone.GetDailyCoinRequest\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        GetDailyCoinRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.GetDailyCoinRequest\";\n        };\n\n        return GetDailyCoinRequest;\n    })();\n\n    twoonone.GetDailyCoinResponse = (function() {\n\n        /**\n         * Properties of a GetDailyCoinResponse.\n         * @memberof twoonone\n         * @interface IGetDailyCoinResponse\n         * @property {Object.<string,string>|null} [extra] GetDailyCoinResponse extra\n         */\n\n        /**\n         * Constructs a new GetDailyCoinResponse.\n         * @memberof twoonone\n         * @classdesc Represents a GetDailyCoinResponse.\n         * @implements IGetDailyCoinResponse\n         * @constructor\n         * @param {twoonone.IGetDailyCoinResponse=} [properties] Properties to set\n         */\n        function GetDailyCoinResponse(properties) {\n            this.extra = {};\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GetDailyCoinResponse extra.\n         * @member {Object.<string,string>} extra\n         * @memberof twoonone.GetDailyCoinResponse\n         * @instance\n         */\n        GetDailyCoinResponse.prototype.extra = $util.emptyObject;\n\n        /**\n         * Creates a new GetDailyCoinResponse instance using the specified properties.\n         * @function create\n         * @memberof twoonone.GetDailyCoinResponse\n         * @static\n         * @param {twoonone.IGetDailyCoinResponse=} [properties] Properties to set\n         * @returns {twoonone.GetDailyCoinResponse} GetDailyCoinResponse instance\n         */\n        GetDailyCoinResponse.create = function create(properties) {\n            return new GetDailyCoinResponse(properties);\n        };\n\n        /**\n         * Encodes the specified GetDailyCoinResponse message. Does not implicitly {@link twoonone.GetDailyCoinResponse.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.GetDailyCoinResponse\n         * @static\n         * @param {twoonone.IGetDailyCoinResponse} message GetDailyCoinResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetDailyCoinResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.extra != null && Object.hasOwnProperty.call(message, \"extra\"))\n                for (let keys = Object.keys(message.extra), i = 0; i < keys.length; ++i)\n                    writer.uint32(/* id 100, wireType 2 =*/802).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.extra[keys[i]]).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GetDailyCoinResponse message, length delimited. Does not implicitly {@link twoonone.GetDailyCoinResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.GetDailyCoinResponse\n         * @static\n         * @param {twoonone.IGetDailyCoinResponse} message GetDailyCoinResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetDailyCoinResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GetDailyCoinResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.GetDailyCoinResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.GetDailyCoinResponse} GetDailyCoinResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetDailyCoinResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.GetDailyCoinResponse(), key, value;\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 100: {\n                        if (message.extra === $util.emptyObject)\n                            message.extra = {};\n                        let end2 = reader.uint32() + reader.pos;\n                        key = \"\";\n                        value = \"\";\n                        while (reader.pos < end2) {\n                            let tag2 = reader.uint32();\n                            switch (tag2 >>> 3) {\n                            case 1:\n                                key = reader.string();\n                                break;\n                            case 2:\n                                value = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag2 & 7);\n                                break;\n                            }\n                        }\n                        message.extra[key] = value;\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GetDailyCoinResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.GetDailyCoinResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.GetDailyCoinResponse} GetDailyCoinResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetDailyCoinResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GetDailyCoinResponse message.\n         * @function verify\n         * @memberof twoonone.GetDailyCoinResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GetDailyCoinResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.extra != null && message.hasOwnProperty(\"extra\")) {\n                if (!$util.isObject(message.extra))\n                    return \"extra: object expected\";\n                let key = Object.keys(message.extra);\n                for (let i = 0; i < key.length; ++i)\n                    if (!$util.isString(message.extra[key[i]]))\n                        return \"extra: string{k:string} expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GetDailyCoinResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.GetDailyCoinResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.GetDailyCoinResponse} GetDailyCoinResponse\n         */\n        GetDailyCoinResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.GetDailyCoinResponse)\n                return object;\n            let message = new $root.twoonone.GetDailyCoinResponse();\n            if (object.extra) {\n                if (typeof object.extra !== \"object\")\n                    throw TypeError(\".twoonone.GetDailyCoinResponse.extra: object expected\");\n                message.extra = {};\n                for (let keys = Object.keys(object.extra), i = 0; i < keys.length; ++i)\n                    message.extra[keys[i]] = String(object.extra[keys[i]]);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GetDailyCoinResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.GetDailyCoinResponse\n         * @static\n         * @param {twoonone.GetDailyCoinResponse} message GetDailyCoinResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GetDailyCoinResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.objects || options.defaults)\n                object.extra = {};\n            let keys2;\n            if (message.extra && (keys2 = Object.keys(message.extra)).length) {\n                object.extra = {};\n                for (let j = 0; j < keys2.length; ++j)\n                    object.extra[keys2[j]] = message.extra[keys2[j]];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GetDailyCoinResponse to JSON.\n         * @function toJSON\n         * @memberof twoonone.GetDailyCoinResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GetDailyCoinResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for GetDailyCoinResponse\n         * @function getTypeUrl\n         * @memberof twoonone.GetDailyCoinResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        GetDailyCoinResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.GetDailyCoinResponse\";\n        };\n\n        return GetDailyCoinResponse;\n    })();\n\n    twoonone.StartRoomRequest = (function() {\n\n        /**\n         * Properties of a StartRoomRequest.\n         * @memberof twoonone\n         * @interface IStartRoomRequest\n         * @property {string|null} [room_hash] StartRoomRequest room_hash\n         */\n\n        /**\n         * Constructs a new StartRoomRequest.\n         * @memberof twoonone\n         * @classdesc Represents a StartRoomRequest.\n         * @implements IStartRoomRequest\n         * @constructor\n         * @param {twoonone.IStartRoomRequest=} [properties] Properties to set\n         */\n        function StartRoomRequest(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StartRoomRequest room_hash.\n         * @member {string} room_hash\n         * @memberof twoonone.StartRoomRequest\n         * @instance\n         */\n        StartRoomRequest.prototype.room_hash = \"\";\n\n        /**\n         * Creates a new StartRoomRequest instance using the specified properties.\n         * @function create\n         * @memberof twoonone.StartRoomRequest\n         * @static\n         * @param {twoonone.IStartRoomRequest=} [properties] Properties to set\n         * @returns {twoonone.StartRoomRequest} StartRoomRequest instance\n         */\n        StartRoomRequest.create = function create(properties) {\n            return new StartRoomRequest(properties);\n        };\n\n        /**\n         * Encodes the specified StartRoomRequest message. Does not implicitly {@link twoonone.StartRoomRequest.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.StartRoomRequest\n         * @static\n         * @param {twoonone.IStartRoomRequest} message StartRoomRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StartRoomRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.room_hash != null && Object.hasOwnProperty.call(message, \"room_hash\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.room_hash);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StartRoomRequest message, length delimited. Does not implicitly {@link twoonone.StartRoomRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.StartRoomRequest\n         * @static\n         * @param {twoonone.IStartRoomRequest} message StartRoomRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StartRoomRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StartRoomRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.StartRoomRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.StartRoomRequest} StartRoomRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StartRoomRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.StartRoomRequest();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.room_hash = reader.string();\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StartRoomRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.StartRoomRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.StartRoomRequest} StartRoomRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StartRoomRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StartRoomRequest message.\n         * @function verify\n         * @memberof twoonone.StartRoomRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StartRoomRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                if (!$util.isString(message.room_hash))\n                    return \"room_hash: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StartRoomRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.StartRoomRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.StartRoomRequest} StartRoomRequest\n         */\n        StartRoomRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.StartRoomRequest)\n                return object;\n            let message = new $root.twoonone.StartRoomRequest();\n            if (object.room_hash != null)\n                message.room_hash = String(object.room_hash);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StartRoomRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.StartRoomRequest\n         * @static\n         * @param {twoonone.StartRoomRequest} message StartRoomRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StartRoomRequest.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.defaults)\n                object.room_hash = \"\";\n            if (message.room_hash != null && message.hasOwnProperty(\"room_hash\"))\n                object.room_hash = message.room_hash;\n            return object;\n        };\n\n        /**\n         * Converts this StartRoomRequest to JSON.\n         * @function toJSON\n         * @memberof twoonone.StartRoomRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StartRoomRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for StartRoomRequest\n         * @function getTypeUrl\n         * @memberof twoonone.StartRoomRequest\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        StartRoomRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.StartRoomRequest\";\n        };\n\n        return StartRoomRequest;\n    })();\n\n    twoonone.StartRoomResponse = (function() {\n\n        /**\n         * Properties of a StartRoomResponse.\n         * @memberof twoonone\n         * @interface IStartRoomResponse\n         * @property {Object.<string,string>|null} [extra] StartRoomResponse extra\n         */\n\n        /**\n         * Constructs a new StartRoomResponse.\n         * @memberof twoonone\n         * @classdesc Represents a StartRoomResponse.\n         * @implements IStartRoomResponse\n         * @constructor\n         * @param {twoonone.IStartRoomResponse=} [properties] Properties to set\n         */\n        function StartRoomResponse(properties) {\n            this.extra = {};\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StartRoomResponse extra.\n         * @member {Object.<string,string>} extra\n         * @memberof twoonone.StartRoomResponse\n         * @instance\n         */\n        StartRoomResponse.prototype.extra = $util.emptyObject;\n\n        /**\n         * Creates a new StartRoomResponse instance using the specified properties.\n         * @function create\n         * @memberof twoonone.StartRoomResponse\n         * @static\n         * @param {twoonone.IStartRoomResponse=} [properties] Properties to set\n         * @returns {twoonone.StartRoomResponse} StartRoomResponse instance\n         */\n        StartRoomResponse.create = function create(properties) {\n            return new StartRoomResponse(properties);\n        };\n\n        /**\n         * Encodes the specified StartRoomResponse message. Does not implicitly {@link twoonone.StartRoomResponse.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.StartRoomResponse\n         * @static\n         * @param {twoonone.IStartRoomResponse} message StartRoomResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StartRoomResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.extra != null && Object.hasOwnProperty.call(message, \"extra\"))\n                for (let keys = Object.keys(message.extra), i = 0; i < keys.length; ++i)\n                    writer.uint32(/* id 100, wireType 2 =*/802).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.extra[keys[i]]).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StartRoomResponse message, length delimited. Does not implicitly {@link twoonone.StartRoomResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.StartRoomResponse\n         * @static\n         * @param {twoonone.IStartRoomResponse} message StartRoomResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StartRoomResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StartRoomResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.StartRoomResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.StartRoomResponse} StartRoomResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StartRoomResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.StartRoomResponse(), key, value;\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 100: {\n                        if (message.extra === $util.emptyObject)\n                            message.extra = {};\n                        let end2 = reader.uint32() + reader.pos;\n                        key = \"\";\n                        value = \"\";\n                        while (reader.pos < end2) {\n                            let tag2 = reader.uint32();\n                            switch (tag2 >>> 3) {\n                            case 1:\n                                key = reader.string();\n                                break;\n                            case 2:\n                                value = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag2 & 7);\n                                break;\n                            }\n                        }\n                        message.extra[key] = value;\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StartRoomResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.StartRoomResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.StartRoomResponse} StartRoomResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StartRoomResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StartRoomResponse message.\n         * @function verify\n         * @memberof twoonone.StartRoomResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StartRoomResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.extra != null && message.hasOwnProperty(\"extra\")) {\n                if (!$util.isObject(message.extra))\n                    return \"extra: object expected\";\n                let key = Object.keys(message.extra);\n                for (let i = 0; i < key.length; ++i)\n                    if (!$util.isString(message.extra[key[i]]))\n                        return \"extra: string{k:string} expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a StartRoomResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.StartRoomResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.StartRoomResponse} StartRoomResponse\n         */\n        StartRoomResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.StartRoomResponse)\n                return object;\n            let message = new $root.twoonone.StartRoomResponse();\n            if (object.extra) {\n                if (typeof object.extra !== \"object\")\n                    throw TypeError(\".twoonone.StartRoomResponse.extra: object expected\");\n                message.extra = {};\n                for (let keys = Object.keys(object.extra), i = 0; i < keys.length; ++i)\n                    message.extra[keys[i]] = String(object.extra[keys[i]]);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StartRoomResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.StartRoomResponse\n         * @static\n         * @param {twoonone.StartRoomResponse} message StartRoomResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StartRoomResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.objects || options.defaults)\n                object.extra = {};\n            let keys2;\n            if (message.extra && (keys2 = Object.keys(message.extra)).length) {\n                object.extra = {};\n                for (let j = 0; j < keys2.length; ++j)\n                    object.extra[keys2[j]] = message.extra[keys2[j]];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this StartRoomResponse to JSON.\n         * @function toJSON\n         * @memberof twoonone.StartRoomResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StartRoomResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for StartRoomResponse\n         * @function getTypeUrl\n         * @memberof twoonone.StartRoomResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        StartRoomResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.StartRoomResponse\";\n        };\n\n        return StartRoomResponse;\n    })();\n\n    twoonone.GetRoomsRequest = (function() {\n\n        /**\n         * Properties of a GetRoomsRequest.\n         * @memberof twoonone\n         * @interface IGetRoomsRequest\n         */\n\n        /**\n         * Constructs a new GetRoomsRequest.\n         * @memberof twoonone\n         * @classdesc Represents a GetRoomsRequest.\n         * @implements IGetRoomsRequest\n         * @constructor\n         * @param {twoonone.IGetRoomsRequest=} [properties] Properties to set\n         */\n        function GetRoomsRequest(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new GetRoomsRequest instance using the specified properties.\n         * @function create\n         * @memberof twoonone.GetRoomsRequest\n         * @static\n         * @param {twoonone.IGetRoomsRequest=} [properties] Properties to set\n         * @returns {twoonone.GetRoomsRequest} GetRoomsRequest instance\n         */\n        GetRoomsRequest.create = function create(properties) {\n            return new GetRoomsRequest(properties);\n        };\n\n        /**\n         * Encodes the specified GetRoomsRequest message. Does not implicitly {@link twoonone.GetRoomsRequest.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.GetRoomsRequest\n         * @static\n         * @param {twoonone.IGetRoomsRequest} message GetRoomsRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetRoomsRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GetRoomsRequest message, length delimited. Does not implicitly {@link twoonone.GetRoomsRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.GetRoomsRequest\n         * @static\n         * @param {twoonone.IGetRoomsRequest} message GetRoomsRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetRoomsRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GetRoomsRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.GetRoomsRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.GetRoomsRequest} GetRoomsRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetRoomsRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.GetRoomsRequest();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GetRoomsRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.GetRoomsRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.GetRoomsRequest} GetRoomsRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetRoomsRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GetRoomsRequest message.\n         * @function verify\n         * @memberof twoonone.GetRoomsRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GetRoomsRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a GetRoomsRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.GetRoomsRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.GetRoomsRequest} GetRoomsRequest\n         */\n        GetRoomsRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.GetRoomsRequest)\n                return object;\n            return new $root.twoonone.GetRoomsRequest();\n        };\n\n        /**\n         * Creates a plain object from a GetRoomsRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.GetRoomsRequest\n         * @static\n         * @param {twoonone.GetRoomsRequest} message GetRoomsRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GetRoomsRequest.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this GetRoomsRequest to JSON.\n         * @function toJSON\n         * @memberof twoonone.GetRoomsRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GetRoomsRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for GetRoomsRequest\n         * @function getTypeUrl\n         * @memberof twoonone.GetRoomsRequest\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        GetRoomsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.GetRoomsRequest\";\n        };\n\n        return GetRoomsRequest;\n    })();\n\n    twoonone.GetRoomsResponse = (function() {\n\n        /**\n         * Properties of a GetRoomsResponse.\n         * @memberof twoonone\n         * @interface IGetRoomsResponse\n         * @property {Object.<string,string>|null} [extra] GetRoomsResponse extra\n         * @property {Array.<twoonone.IRoomInfo>|null} [room_infos] GetRoomsResponse room_infos\n         */\n\n        /**\n         * Constructs a new GetRoomsResponse.\n         * @memberof twoonone\n         * @classdesc Represents a GetRoomsResponse.\n         * @implements IGetRoomsResponse\n         * @constructor\n         * @param {twoonone.IGetRoomsResponse=} [properties] Properties to set\n         */\n        function GetRoomsResponse(properties) {\n            this.extra = {};\n            this.room_infos = [];\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GetRoomsResponse extra.\n         * @member {Object.<string,string>} extra\n         * @memberof twoonone.GetRoomsResponse\n         * @instance\n         */\n        GetRoomsResponse.prototype.extra = $util.emptyObject;\n\n        /**\n         * GetRoomsResponse room_infos.\n         * @member {Array.<twoonone.IRoomInfo>} room_infos\n         * @memberof twoonone.GetRoomsResponse\n         * @instance\n         */\n        GetRoomsResponse.prototype.room_infos = $util.emptyArray;\n\n        /**\n         * Creates a new GetRoomsResponse instance using the specified properties.\n         * @function create\n         * @memberof twoonone.GetRoomsResponse\n         * @static\n         * @param {twoonone.IGetRoomsResponse=} [properties] Properties to set\n         * @returns {twoonone.GetRoomsResponse} GetRoomsResponse instance\n         */\n        GetRoomsResponse.create = function create(properties) {\n            return new GetRoomsResponse(properties);\n        };\n\n        /**\n         * Encodes the specified GetRoomsResponse message. Does not implicitly {@link twoonone.GetRoomsResponse.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.GetRoomsResponse\n         * @static\n         * @param {twoonone.IGetRoomsResponse} message GetRoomsResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetRoomsResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.room_infos != null && message.room_infos.length)\n                for (let i = 0; i < message.room_infos.length; ++i)\n                    $root.twoonone.RoomInfo.encode(message.room_infos[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.extra != null && Object.hasOwnProperty.call(message, \"extra\"))\n                for (let keys = Object.keys(message.extra), i = 0; i < keys.length; ++i)\n                    writer.uint32(/* id 100, wireType 2 =*/802).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.extra[keys[i]]).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GetRoomsResponse message, length delimited. Does not implicitly {@link twoonone.GetRoomsResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.GetRoomsResponse\n         * @static\n         * @param {twoonone.IGetRoomsResponse} message GetRoomsResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GetRoomsResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GetRoomsResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.GetRoomsResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.GetRoomsResponse} GetRoomsResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetRoomsResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.GetRoomsResponse(), key, value;\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 100: {\n                        if (message.extra === $util.emptyObject)\n                            message.extra = {};\n                        let end2 = reader.uint32() + reader.pos;\n                        key = \"\";\n                        value = \"\";\n                        while (reader.pos < end2) {\n                            let tag2 = reader.uint32();\n                            switch (tag2 >>> 3) {\n                            case 1:\n                                key = reader.string();\n                                break;\n                            case 2:\n                                value = reader.string();\n                                break;\n                            default:\n                                reader.skipType(tag2 & 7);\n                                break;\n                            }\n                        }\n                        message.extra[key] = value;\n                        break;\n                    }\n                case 1: {\n                        if (!(message.room_infos && message.room_infos.length))\n                            message.room_infos = [];\n                        message.room_infos.push($root.twoonone.RoomInfo.decode(reader, reader.uint32()));\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GetRoomsResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.GetRoomsResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.GetRoomsResponse} GetRoomsResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GetRoomsResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GetRoomsResponse message.\n         * @function verify\n         * @memberof twoonone.GetRoomsResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GetRoomsResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.extra != null && message.hasOwnProperty(\"extra\")) {\n                if (!$util.isObject(message.extra))\n                    return \"extra: object expected\";\n                let key = Object.keys(message.extra);\n                for (let i = 0; i < key.length; ++i)\n                    if (!$util.isString(message.extra[key[i]]))\n                        return \"extra: string{k:string} expected\";\n            }\n            if (message.room_infos != null && message.hasOwnProperty(\"room_infos\")) {\n                if (!Array.isArray(message.room_infos))\n                    return \"room_infos: array expected\";\n                for (let i = 0; i < message.room_infos.length; ++i) {\n                    let error = $root.twoonone.RoomInfo.verify(message.room_infos[i]);\n                    if (error)\n                        return \"room_infos.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GetRoomsResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.GetRoomsResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.GetRoomsResponse} GetRoomsResponse\n         */\n        GetRoomsResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.GetRoomsResponse)\n                return object;\n            let message = new $root.twoonone.GetRoomsResponse();\n            if (object.extra) {\n                if (typeof object.extra !== \"object\")\n                    throw TypeError(\".twoonone.GetRoomsResponse.extra: object expected\");\n                message.extra = {};\n                for (let keys = Object.keys(object.extra), i = 0; i < keys.length; ++i)\n                    message.extra[keys[i]] = String(object.extra[keys[i]]);\n            }\n            if (object.room_infos) {\n                if (!Array.isArray(object.room_infos))\n                    throw TypeError(\".twoonone.GetRoomsResponse.room_infos: array expected\");\n                message.room_infos = [];\n                for (let i = 0; i < object.room_infos.length; ++i) {\n                    if (typeof object.room_infos[i] !== \"object\")\n                        throw TypeError(\".twoonone.GetRoomsResponse.room_infos: object expected\");\n                    message.room_infos[i] = $root.twoonone.RoomInfo.fromObject(object.room_infos[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GetRoomsResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.GetRoomsResponse\n         * @static\n         * @param {twoonone.GetRoomsResponse} message GetRoomsResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GetRoomsResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (options.arrays || options.defaults)\n                object.room_infos = [];\n            if (options.objects || options.defaults)\n                object.extra = {};\n            if (message.room_infos && message.room_infos.length) {\n                object.room_infos = [];\n                for (let j = 0; j < message.room_infos.length; ++j)\n                    object.room_infos[j] = $root.twoonone.RoomInfo.toObject(message.room_infos[j], options);\n            }\n            let keys2;\n            if (message.extra && (keys2 = Object.keys(message.extra)).length) {\n                object.extra = {};\n                for (let j = 0; j < keys2.length; ++j)\n                    object.extra[keys2[j]] = message.extra[keys2[j]];\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GetRoomsResponse to JSON.\n         * @function toJSON\n         * @memberof twoonone.GetRoomsResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GetRoomsResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for GetRoomsResponse\n         * @function getTypeUrl\n         * @memberof twoonone.GetRoomsResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        GetRoomsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.GetRoomsResponse\";\n        };\n\n        return GetRoomsResponse;\n    })();\n\n    twoonone.RoomEventResponse = (function() {\n\n        /**\n         * Properties of a RoomEventResponse.\n         * @memberof twoonone\n         * @interface IRoomEventResponse\n         * @property {twoonone.RoomEventResponse.IRobLandownerIntoSendingCard|null} [roblandowner_into_sendingcard] RoomEventResponse roblandowner_into_sendingcard\n         * @property {twoonone.RoomEventResponse.IRobLandownerContinuousRob|null} [roblandowner_continuous_rob] RoomEventResponse roblandowner_continuous_rob\n         * @property {twoonone.RoomEventResponse.ISendCardSpringNotice|null} [sendcard_spring_notice] RoomEventResponse sendcard_spring_notice\n         * @property {twoonone.RoomEventResponse.ISendCardBoomNotice|null} [sendcard_boom_notice] RoomEventResponse sendcard_boom_notice\n         * @property {twoonone.RoomEventResponse.ISendCardKingBoomNotice|null} [sendcard_kingboom_notice] RoomEventResponse sendcard_kingboom_notice\n         * @property {twoonone.RoomEventResponse.IGameFinish|null} [game_finish] RoomEventResponse game_finish\n         * @property {twoonone.RoomEventResponse.ISendCardCardNumberNotice|null} [sendcard_cardnumber_notice] RoomEventResponse sendcard_cardnumber_notice\n         * @property {twoonone.RoomEventResponse.IRoomJoinPlayer|null} [room_join_player] RoomEventResponse room_join_player\n         * @property {twoonone.RoomEventResponse.IRoomExitPlayer|null} [room_exit_player] RoomEventResponse room_exit_player\n         * @property {twoonone.RoomEventResponse.IRoomStarted|null} [room_started] RoomEventResponse room_started\n         * @property {twoonone.RoomEventResponse.IRoomRobLandowner|null} [room_rob_landowner] RoomEventResponse room_rob_landowner\n         * @property {twoonone.RoomEventResponse.IRoomNoRobLandowner|null} [room_norob_landowner] RoomEventResponse room_norob_landowner\n         * @property {twoonone.RoomEventResponse.IRoomSendCard|null} [room_sendcard] RoomEventResponse room_sendcard\n         * @property {twoonone.RoomEventResponse.IRoomNoSendCard|null} [room_no_sendcard] RoomEventResponse room_no_sendcard\n         * @property {twoonone.RoomEventResponse.IRoomReRobLandowner|null} [room_re_roblandowner] RoomEventResponse room_re_roblandowner\n         */\n\n        /**\n         * Constructs a new RoomEventResponse.\n         * @memberof twoonone\n         * @classdesc Represents a RoomEventResponse.\n         * @implements IRoomEventResponse\n         * @constructor\n         * @param {twoonone.IRoomEventResponse=} [properties] Properties to set\n         */\n        function RoomEventResponse(properties) {\n            if (properties)\n                for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * RoomEventResponse roblandowner_into_sendingcard.\n         * @member {twoonone.RoomEventResponse.IRobLandownerIntoSendingCard|null|undefined} roblandowner_into_sendingcard\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.roblandowner_into_sendingcard = null;\n\n        /**\n         * RoomEventResponse roblandowner_continuous_rob.\n         * @member {twoonone.RoomEventResponse.IRobLandownerContinuousRob|null|undefined} roblandowner_continuous_rob\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.roblandowner_continuous_rob = null;\n\n        /**\n         * RoomEventResponse sendcard_spring_notice.\n         * @member {twoonone.RoomEventResponse.ISendCardSpringNotice|null|undefined} sendcard_spring_notice\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.sendcard_spring_notice = null;\n\n        /**\n         * RoomEventResponse sendcard_boom_notice.\n         * @member {twoonone.RoomEventResponse.ISendCardBoomNotice|null|undefined} sendcard_boom_notice\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.sendcard_boom_notice = null;\n\n        /**\n         * RoomEventResponse sendcard_kingboom_notice.\n         * @member {twoonone.RoomEventResponse.ISendCardKingBoomNotice|null|undefined} sendcard_kingboom_notice\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.sendcard_kingboom_notice = null;\n\n        /**\n         * RoomEventResponse game_finish.\n         * @member {twoonone.RoomEventResponse.IGameFinish|null|undefined} game_finish\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.game_finish = null;\n\n        /**\n         * RoomEventResponse sendcard_cardnumber_notice.\n         * @member {twoonone.RoomEventResponse.ISendCardCardNumberNotice|null|undefined} sendcard_cardnumber_notice\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.sendcard_cardnumber_notice = null;\n\n        /**\n         * RoomEventResponse room_join_player.\n         * @member {twoonone.RoomEventResponse.IRoomJoinPlayer|null|undefined} room_join_player\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.room_join_player = null;\n\n        /**\n         * RoomEventResponse room_exit_player.\n         * @member {twoonone.RoomEventResponse.IRoomExitPlayer|null|undefined} room_exit_player\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.room_exit_player = null;\n\n        /**\n         * RoomEventResponse room_started.\n         * @member {twoonone.RoomEventResponse.IRoomStarted|null|undefined} room_started\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.room_started = null;\n\n        /**\n         * RoomEventResponse room_rob_landowner.\n         * @member {twoonone.RoomEventResponse.IRoomRobLandowner|null|undefined} room_rob_landowner\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.room_rob_landowner = null;\n\n        /**\n         * RoomEventResponse room_norob_landowner.\n         * @member {twoonone.RoomEventResponse.IRoomNoRobLandowner|null|undefined} room_norob_landowner\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.room_norob_landowner = null;\n\n        /**\n         * RoomEventResponse room_sendcard.\n         * @member {twoonone.RoomEventResponse.IRoomSendCard|null|undefined} room_sendcard\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.room_sendcard = null;\n\n        /**\n         * RoomEventResponse room_no_sendcard.\n         * @member {twoonone.RoomEventResponse.IRoomNoSendCard|null|undefined} room_no_sendcard\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.room_no_sendcard = null;\n\n        /**\n         * RoomEventResponse room_re_roblandowner.\n         * @member {twoonone.RoomEventResponse.IRoomReRobLandowner|null|undefined} room_re_roblandowner\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        RoomEventResponse.prototype.room_re_roblandowner = null;\n\n        // OneOf field names bound to virtual getters and setters\n        let $oneOfFields;\n\n        /**\n         * RoomEventResponse Body.\n         * @member {\"roblandowner_into_sendingcard\"|\"roblandowner_continuous_rob\"|\"sendcard_spring_notice\"|\"sendcard_boom_notice\"|\"sendcard_kingboom_notice\"|\"game_finish\"|\"sendcard_cardnumber_notice\"|\"room_join_player\"|\"room_exit_player\"|\"room_started\"|\"room_rob_landowner\"|\"room_norob_landowner\"|\"room_sendcard\"|\"room_no_sendcard\"|\"room_re_roblandowner\"|undefined} Body\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         */\n        Object.defineProperty(RoomEventResponse.prototype, \"Body\", {\n            get: $util.oneOfGetter($oneOfFields = [\"roblandowner_into_sendingcard\", \"roblandowner_continuous_rob\", \"sendcard_spring_notice\", \"sendcard_boom_notice\", \"sendcard_kingboom_notice\", \"game_finish\", \"sendcard_cardnumber_notice\", \"room_join_player\", \"room_exit_player\", \"room_started\", \"room_rob_landowner\", \"room_norob_landowner\", \"room_sendcard\", \"room_no_sendcard\", \"room_re_roblandowner\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new RoomEventResponse instance using the specified properties.\n         * @function create\n         * @memberof twoonone.RoomEventResponse\n         * @static\n         * @param {twoonone.IRoomEventResponse=} [properties] Properties to set\n         * @returns {twoonone.RoomEventResponse} RoomEventResponse instance\n         */\n        RoomEventResponse.create = function create(properties) {\n            return new RoomEventResponse(properties);\n        };\n\n        /**\n         * Encodes the specified RoomEventResponse message. Does not implicitly {@link twoonone.RoomEventResponse.verify|verify} messages.\n         * @function encode\n         * @memberof twoonone.RoomEventResponse\n         * @static\n         * @param {twoonone.IRoomEventResponse} message RoomEventResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RoomEventResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.roblandowner_into_sendingcard != null && Object.hasOwnProperty.call(message, \"roblandowner_into_sendingcard\"))\n                $root.twoonone.RoomEventResponse.RobLandownerIntoSendingCard.encode(message.roblandowner_into_sendingcard, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.roblandowner_continuous_rob != null && Object.hasOwnProperty.call(message, \"roblandowner_continuous_rob\"))\n                $root.twoonone.RoomEventResponse.RobLandownerContinuousRob.encode(message.roblandowner_continuous_rob, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.sendcard_spring_notice != null && Object.hasOwnProperty.call(message, \"sendcard_spring_notice\"))\n                $root.twoonone.RoomEventResponse.SendCardSpringNotice.encode(message.sendcard_spring_notice, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.sendcard_boom_notice != null && Object.hasOwnProperty.call(message, \"sendcard_boom_notice\"))\n                $root.twoonone.RoomEventResponse.SendCardBoomNotice.encode(message.sendcard_boom_notice, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n            if (message.sendcard_kingboom_notice != null && Object.hasOwnProperty.call(message, \"sendcard_kingboom_notice\"))\n                $root.twoonone.RoomEventResponse.SendCardKingBoomNotice.encode(message.sendcard_kingboom_notice, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.game_finish != null && Object.hasOwnProperty.call(message, \"game_finish\"))\n                $root.twoonone.RoomEventResponse.GameFinish.encode(message.game_finish, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.sendcard_cardnumber_notice != null && Object.hasOwnProperty.call(message, \"sendcard_cardnumber_notice\"))\n                $root.twoonone.RoomEventResponse.SendCardCardNumberNotice.encode(message.sendcard_cardnumber_notice, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.room_join_player != null && Object.hasOwnProperty.call(message, \"room_join_player\"))\n                $root.twoonone.RoomEventResponse.RoomJoinPlayer.encode(message.room_join_player, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.room_exit_player != null && Object.hasOwnProperty.call(message, \"room_exit_player\"))\n                $root.twoonone.RoomEventResponse.RoomExitPlayer.encode(message.room_exit_player, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n            if (message.room_started != null && Object.hasOwnProperty.call(message, \"room_started\"))\n                $root.twoonone.RoomEventResponse.RoomStarted.encode(message.room_started, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.room_rob_landowner != null && Object.hasOwnProperty.call(message, \"room_rob_landowner\"))\n                $root.twoonone.RoomEventResponse.RoomRobLandowner.encode(message.room_rob_landowner, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.room_norob_landowner != null && Object.hasOwnProperty.call(message, \"room_norob_landowner\"))\n                $root.twoonone.RoomEventResponse.RoomNoRobLandowner.encode(message.room_norob_landowner, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.room_sendcard != null && Object.hasOwnProperty.call(message, \"room_sendcard\"))\n                $root.twoonone.RoomEventResponse.RoomSendCard.encode(message.room_sendcard, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.room_no_sendcard != null && Object.hasOwnProperty.call(message, \"room_no_sendcard\"))\n                $root.twoonone.RoomEventResponse.RoomNoSendCard.encode(message.room_no_sendcard, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            if (message.room_re_roblandowner != null && Object.hasOwnProperty.call(message, \"room_re_roblandowner\"))\n                $root.twoonone.RoomEventResponse.RoomReRobLandowner.encode(message.room_re_roblandowner, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified RoomEventResponse message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof twoonone.RoomEventResponse\n         * @static\n         * @param {twoonone.IRoomEventResponse} message RoomEventResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RoomEventResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a RoomEventResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof twoonone.RoomEventResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {twoonone.RoomEventResponse} RoomEventResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RoomEventResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse();\n            while (reader.pos < end) {\n                let tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1: {\n                        message.roblandowner_into_sendingcard = $root.twoonone.RoomEventResponse.RobLandownerIntoSendingCard.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 2: {\n                        message.roblandowner_continuous_rob = $root.twoonone.RoomEventResponse.RobLandownerContinuousRob.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 3: {\n                        message.sendcard_spring_notice = $root.twoonone.RoomEventResponse.SendCardSpringNotice.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 4: {\n                        message.sendcard_boom_notice = $root.twoonone.RoomEventResponse.SendCardBoomNotice.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 5: {\n                        message.sendcard_kingboom_notice = $root.twoonone.RoomEventResponse.SendCardKingBoomNotice.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 6: {\n                        message.game_finish = $root.twoonone.RoomEventResponse.GameFinish.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 7: {\n                        message.sendcard_cardnumber_notice = $root.twoonone.RoomEventResponse.SendCardCardNumberNotice.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 8: {\n                        message.room_join_player = $root.twoonone.RoomEventResponse.RoomJoinPlayer.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 9: {\n                        message.room_exit_player = $root.twoonone.RoomEventResponse.RoomExitPlayer.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 10: {\n                        message.room_started = $root.twoonone.RoomEventResponse.RoomStarted.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 11: {\n                        message.room_rob_landowner = $root.twoonone.RoomEventResponse.RoomRobLandowner.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 12: {\n                        message.room_norob_landowner = $root.twoonone.RoomEventResponse.RoomNoRobLandowner.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 13: {\n                        message.room_sendcard = $root.twoonone.RoomEventResponse.RoomSendCard.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 14: {\n                        message.room_no_sendcard = $root.twoonone.RoomEventResponse.RoomNoSendCard.decode(reader, reader.uint32());\n                        break;\n                    }\n                case 15: {\n                        message.room_re_roblandowner = $root.twoonone.RoomEventResponse.RoomReRobLandowner.decode(reader, reader.uint32());\n                        break;\n                    }\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a RoomEventResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof twoonone.RoomEventResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {twoonone.RoomEventResponse} RoomEventResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RoomEventResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a RoomEventResponse message.\n         * @function verify\n         * @memberof twoonone.RoomEventResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        RoomEventResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            let properties = {};\n            if (message.roblandowner_into_sendingcard != null && message.hasOwnProperty(\"roblandowner_into_sendingcard\")) {\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.RobLandownerIntoSendingCard.verify(message.roblandowner_into_sendingcard);\n                    if (error)\n                        return \"roblandowner_into_sendingcard.\" + error;\n                }\n            }\n            if (message.roblandowner_continuous_rob != null && message.hasOwnProperty(\"roblandowner_continuous_rob\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.RobLandownerContinuousRob.verify(message.roblandowner_continuous_rob);\n                    if (error)\n                        return \"roblandowner_continuous_rob.\" + error;\n                }\n            }\n            if (message.sendcard_spring_notice != null && message.hasOwnProperty(\"sendcard_spring_notice\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.SendCardSpringNotice.verify(message.sendcard_spring_notice);\n                    if (error)\n                        return \"sendcard_spring_notice.\" + error;\n                }\n            }\n            if (message.sendcard_boom_notice != null && message.hasOwnProperty(\"sendcard_boom_notice\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.SendCardBoomNotice.verify(message.sendcard_boom_notice);\n                    if (error)\n                        return \"sendcard_boom_notice.\" + error;\n                }\n            }\n            if (message.sendcard_kingboom_notice != null && message.hasOwnProperty(\"sendcard_kingboom_notice\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.SendCardKingBoomNotice.verify(message.sendcard_kingboom_notice);\n                    if (error)\n                        return \"sendcard_kingboom_notice.\" + error;\n                }\n            }\n            if (message.game_finish != null && message.hasOwnProperty(\"game_finish\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.GameFinish.verify(message.game_finish);\n                    if (error)\n                        return \"game_finish.\" + error;\n                }\n            }\n            if (message.sendcard_cardnumber_notice != null && message.hasOwnProperty(\"sendcard_cardnumber_notice\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.SendCardCardNumberNotice.verify(message.sendcard_cardnumber_notice);\n                    if (error)\n                        return \"sendcard_cardnumber_notice.\" + error;\n                }\n            }\n            if (message.room_join_player != null && message.hasOwnProperty(\"room_join_player\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.RoomJoinPlayer.verify(message.room_join_player);\n                    if (error)\n                        return \"room_join_player.\" + error;\n                }\n            }\n            if (message.room_exit_player != null && message.hasOwnProperty(\"room_exit_player\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.RoomExitPlayer.verify(message.room_exit_player);\n                    if (error)\n                        return \"room_exit_player.\" + error;\n                }\n            }\n            if (message.room_started != null && message.hasOwnProperty(\"room_started\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.RoomStarted.verify(message.room_started);\n                    if (error)\n                        return \"room_started.\" + error;\n                }\n            }\n            if (message.room_rob_landowner != null && message.hasOwnProperty(\"room_rob_landowner\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.RoomRobLandowner.verify(message.room_rob_landowner);\n                    if (error)\n                        return \"room_rob_landowner.\" + error;\n                }\n            }\n            if (message.room_norob_landowner != null && message.hasOwnProperty(\"room_norob_landowner\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.RoomNoRobLandowner.verify(message.room_norob_landowner);\n                    if (error)\n                        return \"room_norob_landowner.\" + error;\n                }\n            }\n            if (message.room_sendcard != null && message.hasOwnProperty(\"room_sendcard\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.RoomSendCard.verify(message.room_sendcard);\n                    if (error)\n                        return \"room_sendcard.\" + error;\n                }\n            }\n            if (message.room_no_sendcard != null && message.hasOwnProperty(\"room_no_sendcard\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.RoomNoSendCard.verify(message.room_no_sendcard);\n                    if (error)\n                        return \"room_no_sendcard.\" + error;\n                }\n            }\n            if (message.room_re_roblandowner != null && message.hasOwnProperty(\"room_re_roblandowner\")) {\n                if (properties.Body === 1)\n                    return \"Body: multiple values\";\n                properties.Body = 1;\n                {\n                    let error = $root.twoonone.RoomEventResponse.RoomReRobLandowner.verify(message.room_re_roblandowner);\n                    if (error)\n                        return \"room_re_roblandowner.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a RoomEventResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof twoonone.RoomEventResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {twoonone.RoomEventResponse} RoomEventResponse\n         */\n        RoomEventResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.twoonone.RoomEventResponse)\n                return object;\n            let message = new $root.twoonone.RoomEventResponse();\n            if (object.roblandowner_into_sendingcard != null) {\n                if (typeof object.roblandowner_into_sendingcard !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.roblandowner_into_sendingcard: object expected\");\n                message.roblandowner_into_sendingcard = $root.twoonone.RoomEventResponse.RobLandownerIntoSendingCard.fromObject(object.roblandowner_into_sendingcard);\n            }\n            if (object.roblandowner_continuous_rob != null) {\n                if (typeof object.roblandowner_continuous_rob !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.roblandowner_continuous_rob: object expected\");\n                message.roblandowner_continuous_rob = $root.twoonone.RoomEventResponse.RobLandownerContinuousRob.fromObject(object.roblandowner_continuous_rob);\n            }\n            if (object.sendcard_spring_notice != null) {\n                if (typeof object.sendcard_spring_notice !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.sendcard_spring_notice: object expected\");\n                message.sendcard_spring_notice = $root.twoonone.RoomEventResponse.SendCardSpringNotice.fromObject(object.sendcard_spring_notice);\n            }\n            if (object.sendcard_boom_notice != null) {\n                if (typeof object.sendcard_boom_notice !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.sendcard_boom_notice: object expected\");\n                message.sendcard_boom_notice = $root.twoonone.RoomEventResponse.SendCardBoomNotice.fromObject(object.sendcard_boom_notice);\n            }\n            if (object.sendcard_kingboom_notice != null) {\n                if (typeof object.sendcard_kingboom_notice !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.sendcard_kingboom_notice: object expected\");\n                message.sendcard_kingboom_notice = $root.twoonone.RoomEventResponse.SendCardKingBoomNotice.fromObject(object.sendcard_kingboom_notice);\n            }\n            if (object.game_finish != null) {\n                if (typeof object.game_finish !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.game_finish: object expected\");\n                message.game_finish = $root.twoonone.RoomEventResponse.GameFinish.fromObject(object.game_finish);\n            }\n            if (object.sendcard_cardnumber_notice != null) {\n                if (typeof object.sendcard_cardnumber_notice !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.sendcard_cardnumber_notice: object expected\");\n                message.sendcard_cardnumber_notice = $root.twoonone.RoomEventResponse.SendCardCardNumberNotice.fromObject(object.sendcard_cardnumber_notice);\n            }\n            if (object.room_join_player != null) {\n                if (typeof object.room_join_player !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.room_join_player: object expected\");\n                message.room_join_player = $root.twoonone.RoomEventResponse.RoomJoinPlayer.fromObject(object.room_join_player);\n            }\n            if (object.room_exit_player != null) {\n                if (typeof object.room_exit_player !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.room_exit_player: object expected\");\n                message.room_exit_player = $root.twoonone.RoomEventResponse.RoomExitPlayer.fromObject(object.room_exit_player);\n            }\n            if (object.room_started != null) {\n                if (typeof object.room_started !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.room_started: object expected\");\n                message.room_started = $root.twoonone.RoomEventResponse.RoomStarted.fromObject(object.room_started);\n            }\n            if (object.room_rob_landowner != null) {\n                if (typeof object.room_rob_landowner !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.room_rob_landowner: object expected\");\n                message.room_rob_landowner = $root.twoonone.RoomEventResponse.RoomRobLandowner.fromObject(object.room_rob_landowner);\n            }\n            if (object.room_norob_landowner != null) {\n                if (typeof object.room_norob_landowner !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.room_norob_landowner: object expected\");\n                message.room_norob_landowner = $root.twoonone.RoomEventResponse.RoomNoRobLandowner.fromObject(object.room_norob_landowner);\n            }\n            if (object.room_sendcard != null) {\n                if (typeof object.room_sendcard !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.room_sendcard: object expected\");\n                message.room_sendcard = $root.twoonone.RoomEventResponse.RoomSendCard.fromObject(object.room_sendcard);\n            }\n            if (object.room_no_sendcard != null) {\n                if (typeof object.room_no_sendcard !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.room_no_sendcard: object expected\");\n                message.room_no_sendcard = $root.twoonone.RoomEventResponse.RoomNoSendCard.fromObject(object.room_no_sendcard);\n            }\n            if (object.room_re_roblandowner != null) {\n                if (typeof object.room_re_roblandowner !== \"object\")\n                    throw TypeError(\".twoonone.RoomEventResponse.room_re_roblandowner: object expected\");\n                message.room_re_roblandowner = $root.twoonone.RoomEventResponse.RoomReRobLandowner.fromObject(object.room_re_roblandowner);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a RoomEventResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof twoonone.RoomEventResponse\n         * @static\n         * @param {twoonone.RoomEventResponse} message RoomEventResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RoomEventResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            let object = {};\n            if (message.roblandowner_into_sendingcard != null && message.hasOwnProperty(\"roblandowner_into_sendingcard\")) {\n                object.roblandowner_into_sendingcard = $root.twoonone.RoomEventResponse.RobLandownerIntoSendingCard.toObject(message.roblandowner_into_sendingcard, options);\n                if (options.oneofs)\n                    object.Body = \"roblandowner_into_sendingcard\";\n            }\n            if (message.roblandowner_continuous_rob != null && message.hasOwnProperty(\"roblandowner_continuous_rob\")) {\n                object.roblandowner_continuous_rob = $root.twoonone.RoomEventResponse.RobLandownerContinuousRob.toObject(message.roblandowner_continuous_rob, options);\n                if (options.oneofs)\n                    object.Body = \"roblandowner_continuous_rob\";\n            }\n            if (message.sendcard_spring_notice != null && message.hasOwnProperty(\"sendcard_spring_notice\")) {\n                object.sendcard_spring_notice = $root.twoonone.RoomEventResponse.SendCardSpringNotice.toObject(message.sendcard_spring_notice, options);\n                if (options.oneofs)\n                    object.Body = \"sendcard_spring_notice\";\n            }\n            if (message.sendcard_boom_notice != null && message.hasOwnProperty(\"sendcard_boom_notice\")) {\n                object.sendcard_boom_notice = $root.twoonone.RoomEventResponse.SendCardBoomNotice.toObject(message.sendcard_boom_notice, options);\n                if (options.oneofs)\n                    object.Body = \"sendcard_boom_notice\";\n            }\n            if (message.sendcard_kingboom_notice != null && message.hasOwnProperty(\"sendcard_kingboom_notice\")) {\n                object.sendcard_kingboom_notice = $root.twoonone.RoomEventResponse.SendCardKingBoomNotice.toObject(message.sendcard_kingboom_notice, options);\n                if (options.oneofs)\n                    object.Body = \"sendcard_kingboom_notice\";\n            }\n            if (message.game_finish != null && message.hasOwnProperty(\"game_finish\")) {\n                object.game_finish = $root.twoonone.RoomEventResponse.GameFinish.toObject(message.game_finish, options);\n                if (options.oneofs)\n                    object.Body = \"game_finish\";\n            }\n            if (message.sendcard_cardnumber_notice != null && message.hasOwnProperty(\"sendcard_cardnumber_notice\")) {\n                object.sendcard_cardnumber_notice = $root.twoonone.RoomEventResponse.SendCardCardNumberNotice.toObject(message.sendcard_cardnumber_notice, options);\n                if (options.oneofs)\n                    object.Body = \"sendcard_cardnumber_notice\";\n            }\n            if (message.room_join_player != null && message.hasOwnProperty(\"room_join_player\")) {\n                object.room_join_player = $root.twoonone.RoomEventResponse.RoomJoinPlayer.toObject(message.room_join_player, options);\n                if (options.oneofs)\n                    object.Body = \"room_join_player\";\n            }\n            if (message.room_exit_player != null && message.hasOwnProperty(\"room_exit_player\")) {\n                object.room_exit_player = $root.twoonone.RoomEventResponse.RoomExitPlayer.toObject(message.room_exit_player, options);\n                if (options.oneofs)\n                    object.Body = \"room_exit_player\";\n            }\n            if (message.room_started != null && message.hasOwnProperty(\"room_started\")) {\n                object.room_started = $root.twoonone.RoomEventResponse.RoomStarted.toObject(message.room_started, options);\n                if (options.oneofs)\n                    object.Body = \"room_started\";\n            }\n            if (message.room_rob_landowner != null && message.hasOwnProperty(\"room_rob_landowner\")) {\n                object.room_rob_landowner = $root.twoonone.RoomEventResponse.RoomRobLandowner.toObject(message.room_rob_landowner, options);\n                if (options.oneofs)\n                    object.Body = \"room_rob_landowner\";\n            }\n            if (message.room_norob_landowner != null && message.hasOwnProperty(\"room_norob_landowner\")) {\n                object.room_norob_landowner = $root.twoonone.RoomEventResponse.RoomNoRobLandowner.toObject(message.room_norob_landowner, options);\n                if (options.oneofs)\n                    object.Body = \"room_norob_landowner\";\n            }\n            if (message.room_sendcard != null && message.hasOwnProperty(\"room_sendcard\")) {\n                object.room_sendcard = $root.twoonone.RoomEventResponse.RoomSendCard.toObject(message.room_sendcard, options);\n                if (options.oneofs)\n                    object.Body = \"room_sendcard\";\n            }\n            if (message.room_no_sendcard != null && message.hasOwnProperty(\"room_no_sendcard\")) {\n                object.room_no_sendcard = $root.twoonone.RoomEventResponse.RoomNoSendCard.toObject(message.room_no_sendcard, options);\n                if (options.oneofs)\n                    object.Body = \"room_no_sendcard\";\n            }\n            if (message.room_re_roblandowner != null && message.hasOwnProperty(\"room_re_roblandowner\")) {\n                object.room_re_roblandowner = $root.twoonone.RoomEventResponse.RoomReRobLandowner.toObject(message.room_re_roblandowner, options);\n                if (options.oneofs)\n                    object.Body = \"room_re_roblandowner\";\n            }\n            return object;\n        };\n\n        /**\n         * Converts this RoomEventResponse to JSON.\n         * @function toJSON\n         * @memberof twoonone.RoomEventResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RoomEventResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for RoomEventResponse\n         * @function getTypeUrl\n         * @memberof twoonone.RoomEventResponse\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        RoomEventResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/twoonone.RoomEventResponse\";\n        };\n\n        RoomEventResponse.RoomJoinPlayer = (function() {\n\n            /**\n             * Properties of a RoomJoinPlayer.\n             * @memberof twoonone.RoomEventResponse\n             * @interface IRoomJoinPlayer\n             * @property {twoonone.IPlayerInfo|null} [joiner_info] RoomJoinPlayer joiner_info\n             * @property {Array.<twoonone.IPlayerInfo>|null} [player_infos] RoomJoinPlayer player_infos\n             */\n\n            /**\n             * Constructs a new RoomJoinPlayer.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a RoomJoinPlayer.\n             * @implements IRoomJoinPlayer\n             * @constructor\n             * @param {twoonone.RoomEventResponse.IRoomJoinPlayer=} [properties] Properties to set\n             */\n            function RoomJoinPlayer(properties) {\n                this.player_infos = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RoomJoinPlayer joiner_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} joiner_info\n             * @memberof twoonone.RoomEventResponse.RoomJoinPlayer\n             * @instance\n             */\n            RoomJoinPlayer.prototype.joiner_info = null;\n\n            /**\n             * RoomJoinPlayer player_infos.\n             * @member {Array.<twoonone.IPlayerInfo>} player_infos\n             * @memberof twoonone.RoomEventResponse.RoomJoinPlayer\n             * @instance\n             */\n            RoomJoinPlayer.prototype.player_infos = $util.emptyArray;\n\n            /**\n             * Creates a new RoomJoinPlayer instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.RoomJoinPlayer\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomJoinPlayer=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.RoomJoinPlayer} RoomJoinPlayer instance\n             */\n            RoomJoinPlayer.create = function create(properties) {\n                return new RoomJoinPlayer(properties);\n            };\n\n            /**\n             * Encodes the specified RoomJoinPlayer message. Does not implicitly {@link twoonone.RoomEventResponse.RoomJoinPlayer.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.RoomJoinPlayer\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomJoinPlayer} message RoomJoinPlayer message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomJoinPlayer.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.joiner_info != null && Object.hasOwnProperty.call(message, \"joiner_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.joiner_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.player_infos != null && message.player_infos.length)\n                    for (let i = 0; i < message.player_infos.length; ++i)\n                        $root.twoonone.PlayerInfo.encode(message.player_infos[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RoomJoinPlayer message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.RoomJoinPlayer.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomJoinPlayer\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomJoinPlayer} message RoomJoinPlayer message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomJoinPlayer.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RoomJoinPlayer message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.RoomJoinPlayer\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.RoomJoinPlayer} RoomJoinPlayer\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomJoinPlayer.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.RoomJoinPlayer();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.joiner_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    case 2: {\n                            if (!(message.player_infos && message.player_infos.length))\n                                message.player_infos = [];\n                            message.player_infos.push($root.twoonone.PlayerInfo.decode(reader, reader.uint32()));\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RoomJoinPlayer message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomJoinPlayer\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.RoomJoinPlayer} RoomJoinPlayer\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomJoinPlayer.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RoomJoinPlayer message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.RoomJoinPlayer\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RoomJoinPlayer.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.joiner_info != null && message.hasOwnProperty(\"joiner_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.joiner_info);\n                    if (error)\n                        return \"joiner_info.\" + error;\n                }\n                if (message.player_infos != null && message.hasOwnProperty(\"player_infos\")) {\n                    if (!Array.isArray(message.player_infos))\n                        return \"player_infos: array expected\";\n                    for (let i = 0; i < message.player_infos.length; ++i) {\n                        let error = $root.twoonone.PlayerInfo.verify(message.player_infos[i]);\n                        if (error)\n                            return \"player_infos.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a RoomJoinPlayer message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.RoomJoinPlayer\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.RoomJoinPlayer} RoomJoinPlayer\n             */\n            RoomJoinPlayer.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.RoomJoinPlayer)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.RoomJoinPlayer();\n                if (object.joiner_info != null) {\n                    if (typeof object.joiner_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomJoinPlayer.joiner_info: object expected\");\n                    message.joiner_info = $root.twoonone.PlayerInfo.fromObject(object.joiner_info);\n                }\n                if (object.player_infos) {\n                    if (!Array.isArray(object.player_infos))\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomJoinPlayer.player_infos: array expected\");\n                    message.player_infos = [];\n                    for (let i = 0; i < object.player_infos.length; ++i) {\n                        if (typeof object.player_infos[i] !== \"object\")\n                            throw TypeError(\".twoonone.RoomEventResponse.RoomJoinPlayer.player_infos: object expected\");\n                        message.player_infos[i] = $root.twoonone.PlayerInfo.fromObject(object.player_infos[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RoomJoinPlayer message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.RoomJoinPlayer\n             * @static\n             * @param {twoonone.RoomEventResponse.RoomJoinPlayer} message RoomJoinPlayer\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RoomJoinPlayer.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.player_infos = [];\n                if (options.defaults)\n                    object.joiner_info = null;\n                if (message.joiner_info != null && message.hasOwnProperty(\"joiner_info\"))\n                    object.joiner_info = $root.twoonone.PlayerInfo.toObject(message.joiner_info, options);\n                if (message.player_infos && message.player_infos.length) {\n                    object.player_infos = [];\n                    for (let j = 0; j < message.player_infos.length; ++j)\n                        object.player_infos[j] = $root.twoonone.PlayerInfo.toObject(message.player_infos[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this RoomJoinPlayer to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.RoomJoinPlayer\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RoomJoinPlayer.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for RoomJoinPlayer\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.RoomJoinPlayer\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            RoomJoinPlayer.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.RoomJoinPlayer\";\n            };\n\n            return RoomJoinPlayer;\n        })();\n\n        RoomEventResponse.RoomExitPlayer = (function() {\n\n            /**\n             * Properties of a RoomExitPlayer.\n             * @memberof twoonone.RoomEventResponse\n             * @interface IRoomExitPlayer\n             * @property {twoonone.IPlayerInfo|null} [leaver_info] RoomExitPlayer leaver_info\n             * @property {Array.<twoonone.IPlayerInfo>|null} [player_infos] RoomExitPlayer player_infos\n             */\n\n            /**\n             * Constructs a new RoomExitPlayer.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a RoomExitPlayer.\n             * @implements IRoomExitPlayer\n             * @constructor\n             * @param {twoonone.RoomEventResponse.IRoomExitPlayer=} [properties] Properties to set\n             */\n            function RoomExitPlayer(properties) {\n                this.player_infos = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RoomExitPlayer leaver_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} leaver_info\n             * @memberof twoonone.RoomEventResponse.RoomExitPlayer\n             * @instance\n             */\n            RoomExitPlayer.prototype.leaver_info = null;\n\n            /**\n             * RoomExitPlayer player_infos.\n             * @member {Array.<twoonone.IPlayerInfo>} player_infos\n             * @memberof twoonone.RoomEventResponse.RoomExitPlayer\n             * @instance\n             */\n            RoomExitPlayer.prototype.player_infos = $util.emptyArray;\n\n            /**\n             * Creates a new RoomExitPlayer instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.RoomExitPlayer\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomExitPlayer=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.RoomExitPlayer} RoomExitPlayer instance\n             */\n            RoomExitPlayer.create = function create(properties) {\n                return new RoomExitPlayer(properties);\n            };\n\n            /**\n             * Encodes the specified RoomExitPlayer message. Does not implicitly {@link twoonone.RoomEventResponse.RoomExitPlayer.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.RoomExitPlayer\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomExitPlayer} message RoomExitPlayer message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomExitPlayer.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.leaver_info != null && Object.hasOwnProperty.call(message, \"leaver_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.leaver_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.player_infos != null && message.player_infos.length)\n                    for (let i = 0; i < message.player_infos.length; ++i)\n                        $root.twoonone.PlayerInfo.encode(message.player_infos[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RoomExitPlayer message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.RoomExitPlayer.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomExitPlayer\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomExitPlayer} message RoomExitPlayer message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomExitPlayer.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RoomExitPlayer message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.RoomExitPlayer\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.RoomExitPlayer} RoomExitPlayer\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomExitPlayer.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.RoomExitPlayer();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.leaver_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    case 2: {\n                            if (!(message.player_infos && message.player_infos.length))\n                                message.player_infos = [];\n                            message.player_infos.push($root.twoonone.PlayerInfo.decode(reader, reader.uint32()));\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RoomExitPlayer message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomExitPlayer\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.RoomExitPlayer} RoomExitPlayer\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomExitPlayer.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RoomExitPlayer message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.RoomExitPlayer\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RoomExitPlayer.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.leaver_info != null && message.hasOwnProperty(\"leaver_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.leaver_info);\n                    if (error)\n                        return \"leaver_info.\" + error;\n                }\n                if (message.player_infos != null && message.hasOwnProperty(\"player_infos\")) {\n                    if (!Array.isArray(message.player_infos))\n                        return \"player_infos: array expected\";\n                    for (let i = 0; i < message.player_infos.length; ++i) {\n                        let error = $root.twoonone.PlayerInfo.verify(message.player_infos[i]);\n                        if (error)\n                            return \"player_infos.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a RoomExitPlayer message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.RoomExitPlayer\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.RoomExitPlayer} RoomExitPlayer\n             */\n            RoomExitPlayer.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.RoomExitPlayer)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.RoomExitPlayer();\n                if (object.leaver_info != null) {\n                    if (typeof object.leaver_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomExitPlayer.leaver_info: object expected\");\n                    message.leaver_info = $root.twoonone.PlayerInfo.fromObject(object.leaver_info);\n                }\n                if (object.player_infos) {\n                    if (!Array.isArray(object.player_infos))\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomExitPlayer.player_infos: array expected\");\n                    message.player_infos = [];\n                    for (let i = 0; i < object.player_infos.length; ++i) {\n                        if (typeof object.player_infos[i] !== \"object\")\n                            throw TypeError(\".twoonone.RoomEventResponse.RoomExitPlayer.player_infos: object expected\");\n                        message.player_infos[i] = $root.twoonone.PlayerInfo.fromObject(object.player_infos[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RoomExitPlayer message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.RoomExitPlayer\n             * @static\n             * @param {twoonone.RoomEventResponse.RoomExitPlayer} message RoomExitPlayer\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RoomExitPlayer.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.player_infos = [];\n                if (options.defaults)\n                    object.leaver_info = null;\n                if (message.leaver_info != null && message.hasOwnProperty(\"leaver_info\"))\n                    object.leaver_info = $root.twoonone.PlayerInfo.toObject(message.leaver_info, options);\n                if (message.player_infos && message.player_infos.length) {\n                    object.player_infos = [];\n                    for (let j = 0; j < message.player_infos.length; ++j)\n                        object.player_infos[j] = $root.twoonone.PlayerInfo.toObject(message.player_infos[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this RoomExitPlayer to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.RoomExitPlayer\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RoomExitPlayer.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for RoomExitPlayer\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.RoomExitPlayer\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            RoomExitPlayer.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.RoomExitPlayer\";\n            };\n\n            return RoomExitPlayer;\n        })();\n\n        RoomEventResponse.RoomStarted = (function() {\n\n            /**\n             * Properties of a RoomStarted.\n             * @memberof twoonone.RoomEventResponse\n             * @interface IRoomStarted\n             * @property {twoonone.IPlayerInfo|null} [next_operator_info] RoomStarted next_operator_info\n             */\n\n            /**\n             * Constructs a new RoomStarted.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a RoomStarted.\n             * @implements IRoomStarted\n             * @constructor\n             * @param {twoonone.RoomEventResponse.IRoomStarted=} [properties] Properties to set\n             */\n            function RoomStarted(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RoomStarted next_operator_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} next_operator_info\n             * @memberof twoonone.RoomEventResponse.RoomStarted\n             * @instance\n             */\n            RoomStarted.prototype.next_operator_info = null;\n\n            /**\n             * Creates a new RoomStarted instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.RoomStarted\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomStarted=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.RoomStarted} RoomStarted instance\n             */\n            RoomStarted.create = function create(properties) {\n                return new RoomStarted(properties);\n            };\n\n            /**\n             * Encodes the specified RoomStarted message. Does not implicitly {@link twoonone.RoomEventResponse.RoomStarted.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.RoomStarted\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomStarted} message RoomStarted message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomStarted.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.next_operator_info != null && Object.hasOwnProperty.call(message, \"next_operator_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.next_operator_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RoomStarted message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.RoomStarted.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomStarted\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomStarted} message RoomStarted message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomStarted.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RoomStarted message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.RoomStarted\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.RoomStarted} RoomStarted\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomStarted.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.RoomStarted();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.next_operator_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RoomStarted message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomStarted\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.RoomStarted} RoomStarted\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomStarted.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RoomStarted message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.RoomStarted\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RoomStarted.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.next_operator_info != null && message.hasOwnProperty(\"next_operator_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.next_operator_info);\n                    if (error)\n                        return \"next_operator_info.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a RoomStarted message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.RoomStarted\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.RoomStarted} RoomStarted\n             */\n            RoomStarted.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.RoomStarted)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.RoomStarted();\n                if (object.next_operator_info != null) {\n                    if (typeof object.next_operator_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomStarted.next_operator_info: object expected\");\n                    message.next_operator_info = $root.twoonone.PlayerInfo.fromObject(object.next_operator_info);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RoomStarted message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.RoomStarted\n             * @static\n             * @param {twoonone.RoomEventResponse.RoomStarted} message RoomStarted\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RoomStarted.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults)\n                    object.next_operator_info = null;\n                if (message.next_operator_info != null && message.hasOwnProperty(\"next_operator_info\"))\n                    object.next_operator_info = $root.twoonone.PlayerInfo.toObject(message.next_operator_info, options);\n                return object;\n            };\n\n            /**\n             * Converts this RoomStarted to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.RoomStarted\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RoomStarted.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for RoomStarted\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.RoomStarted\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            RoomStarted.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.RoomStarted\";\n            };\n\n            return RoomStarted;\n        })();\n\n        RoomEventResponse.RoomRobLandowner = (function() {\n\n            /**\n             * Properties of a RoomRobLandowner.\n             * @memberof twoonone.RoomEventResponse\n             * @interface IRoomRobLandowner\n             * @property {twoonone.IPlayerInfo|null} [operator_info] RoomRobLandowner operator_info\n             * @property {twoonone.IPlayerInfo|null} [next_operator_info] RoomRobLandowner next_operator_info\n             */\n\n            /**\n             * Constructs a new RoomRobLandowner.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a RoomRobLandowner.\n             * @implements IRoomRobLandowner\n             * @constructor\n             * @param {twoonone.RoomEventResponse.IRoomRobLandowner=} [properties] Properties to set\n             */\n            function RoomRobLandowner(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RoomRobLandowner operator_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} operator_info\n             * @memberof twoonone.RoomEventResponse.RoomRobLandowner\n             * @instance\n             */\n            RoomRobLandowner.prototype.operator_info = null;\n\n            /**\n             * RoomRobLandowner next_operator_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} next_operator_info\n             * @memberof twoonone.RoomEventResponse.RoomRobLandowner\n             * @instance\n             */\n            RoomRobLandowner.prototype.next_operator_info = null;\n\n            /**\n             * Creates a new RoomRobLandowner instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.RoomRobLandowner\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomRobLandowner=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.RoomRobLandowner} RoomRobLandowner instance\n             */\n            RoomRobLandowner.create = function create(properties) {\n                return new RoomRobLandowner(properties);\n            };\n\n            /**\n             * Encodes the specified RoomRobLandowner message. Does not implicitly {@link twoonone.RoomEventResponse.RoomRobLandowner.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.RoomRobLandowner\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomRobLandowner} message RoomRobLandowner message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomRobLandowner.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.operator_info != null && Object.hasOwnProperty.call(message, \"operator_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.operator_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.next_operator_info != null && Object.hasOwnProperty.call(message, \"next_operator_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.next_operator_info, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RoomRobLandowner message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.RoomRobLandowner.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomRobLandowner\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomRobLandowner} message RoomRobLandowner message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomRobLandowner.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RoomRobLandowner message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.RoomRobLandowner\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.RoomRobLandowner} RoomRobLandowner\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomRobLandowner.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.RoomRobLandowner();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.operator_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    case 2: {\n                            message.next_operator_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RoomRobLandowner message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomRobLandowner\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.RoomRobLandowner} RoomRobLandowner\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomRobLandowner.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RoomRobLandowner message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.RoomRobLandowner\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RoomRobLandowner.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.operator_info != null && message.hasOwnProperty(\"operator_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.operator_info);\n                    if (error)\n                        return \"operator_info.\" + error;\n                }\n                if (message.next_operator_info != null && message.hasOwnProperty(\"next_operator_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.next_operator_info);\n                    if (error)\n                        return \"next_operator_info.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a RoomRobLandowner message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.RoomRobLandowner\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.RoomRobLandowner} RoomRobLandowner\n             */\n            RoomRobLandowner.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.RoomRobLandowner)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.RoomRobLandowner();\n                if (object.operator_info != null) {\n                    if (typeof object.operator_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomRobLandowner.operator_info: object expected\");\n                    message.operator_info = $root.twoonone.PlayerInfo.fromObject(object.operator_info);\n                }\n                if (object.next_operator_info != null) {\n                    if (typeof object.next_operator_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomRobLandowner.next_operator_info: object expected\");\n                    message.next_operator_info = $root.twoonone.PlayerInfo.fromObject(object.next_operator_info);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RoomRobLandowner message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.RoomRobLandowner\n             * @static\n             * @param {twoonone.RoomEventResponse.RoomRobLandowner} message RoomRobLandowner\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RoomRobLandowner.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.operator_info = null;\n                    object.next_operator_info = null;\n                }\n                if (message.operator_info != null && message.hasOwnProperty(\"operator_info\"))\n                    object.operator_info = $root.twoonone.PlayerInfo.toObject(message.operator_info, options);\n                if (message.next_operator_info != null && message.hasOwnProperty(\"next_operator_info\"))\n                    object.next_operator_info = $root.twoonone.PlayerInfo.toObject(message.next_operator_info, options);\n                return object;\n            };\n\n            /**\n             * Converts this RoomRobLandowner to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.RoomRobLandowner\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RoomRobLandowner.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for RoomRobLandowner\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.RoomRobLandowner\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            RoomRobLandowner.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.RoomRobLandowner\";\n            };\n\n            return RoomRobLandowner;\n        })();\n\n        RoomEventResponse.RoomNoRobLandowner = (function() {\n\n            /**\n             * Properties of a RoomNoRobLandowner.\n             * @memberof twoonone.RoomEventResponse\n             * @interface IRoomNoRobLandowner\n             * @property {twoonone.IPlayerInfo|null} [operator_info] RoomNoRobLandowner operator_info\n             * @property {twoonone.IPlayerInfo|null} [next_operator_info] RoomNoRobLandowner next_operator_info\n             */\n\n            /**\n             * Constructs a new RoomNoRobLandowner.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a RoomNoRobLandowner.\n             * @implements IRoomNoRobLandowner\n             * @constructor\n             * @param {twoonone.RoomEventResponse.IRoomNoRobLandowner=} [properties] Properties to set\n             */\n            function RoomNoRobLandowner(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RoomNoRobLandowner operator_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} operator_info\n             * @memberof twoonone.RoomEventResponse.RoomNoRobLandowner\n             * @instance\n             */\n            RoomNoRobLandowner.prototype.operator_info = null;\n\n            /**\n             * RoomNoRobLandowner next_operator_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} next_operator_info\n             * @memberof twoonone.RoomEventResponse.RoomNoRobLandowner\n             * @instance\n             */\n            RoomNoRobLandowner.prototype.next_operator_info = null;\n\n            /**\n             * Creates a new RoomNoRobLandowner instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.RoomNoRobLandowner\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomNoRobLandowner=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.RoomNoRobLandowner} RoomNoRobLandowner instance\n             */\n            RoomNoRobLandowner.create = function create(properties) {\n                return new RoomNoRobLandowner(properties);\n            };\n\n            /**\n             * Encodes the specified RoomNoRobLandowner message. Does not implicitly {@link twoonone.RoomEventResponse.RoomNoRobLandowner.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.RoomNoRobLandowner\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomNoRobLandowner} message RoomNoRobLandowner message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomNoRobLandowner.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.operator_info != null && Object.hasOwnProperty.call(message, \"operator_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.operator_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.next_operator_info != null && Object.hasOwnProperty.call(message, \"next_operator_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.next_operator_info, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RoomNoRobLandowner message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.RoomNoRobLandowner.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomNoRobLandowner\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomNoRobLandowner} message RoomNoRobLandowner message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomNoRobLandowner.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RoomNoRobLandowner message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.RoomNoRobLandowner\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.RoomNoRobLandowner} RoomNoRobLandowner\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomNoRobLandowner.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.RoomNoRobLandowner();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.operator_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    case 2: {\n                            message.next_operator_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RoomNoRobLandowner message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomNoRobLandowner\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.RoomNoRobLandowner} RoomNoRobLandowner\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomNoRobLandowner.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RoomNoRobLandowner message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.RoomNoRobLandowner\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RoomNoRobLandowner.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.operator_info != null && message.hasOwnProperty(\"operator_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.operator_info);\n                    if (error)\n                        return \"operator_info.\" + error;\n                }\n                if (message.next_operator_info != null && message.hasOwnProperty(\"next_operator_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.next_operator_info);\n                    if (error)\n                        return \"next_operator_info.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a RoomNoRobLandowner message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.RoomNoRobLandowner\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.RoomNoRobLandowner} RoomNoRobLandowner\n             */\n            RoomNoRobLandowner.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.RoomNoRobLandowner)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.RoomNoRobLandowner();\n                if (object.operator_info != null) {\n                    if (typeof object.operator_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomNoRobLandowner.operator_info: object expected\");\n                    message.operator_info = $root.twoonone.PlayerInfo.fromObject(object.operator_info);\n                }\n                if (object.next_operator_info != null) {\n                    if (typeof object.next_operator_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomNoRobLandowner.next_operator_info: object expected\");\n                    message.next_operator_info = $root.twoonone.PlayerInfo.fromObject(object.next_operator_info);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RoomNoRobLandowner message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.RoomNoRobLandowner\n             * @static\n             * @param {twoonone.RoomEventResponse.RoomNoRobLandowner} message RoomNoRobLandowner\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RoomNoRobLandowner.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.operator_info = null;\n                    object.next_operator_info = null;\n                }\n                if (message.operator_info != null && message.hasOwnProperty(\"operator_info\"))\n                    object.operator_info = $root.twoonone.PlayerInfo.toObject(message.operator_info, options);\n                if (message.next_operator_info != null && message.hasOwnProperty(\"next_operator_info\"))\n                    object.next_operator_info = $root.twoonone.PlayerInfo.toObject(message.next_operator_info, options);\n                return object;\n            };\n\n            /**\n             * Converts this RoomNoRobLandowner to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.RoomNoRobLandowner\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RoomNoRobLandowner.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for RoomNoRobLandowner\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.RoomNoRobLandowner\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            RoomNoRobLandowner.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.RoomNoRobLandowner\";\n            };\n\n            return RoomNoRobLandowner;\n        })();\n\n        RoomEventResponse.RoomSendCard = (function() {\n\n            /**\n             * Properties of a RoomSendCard.\n             * @memberof twoonone.RoomEventResponse\n             * @interface IRoomSendCard\n             * @property {twoonone.IPlayerInfo|null} [operator_info] RoomSendCard operator_info\n             * @property {twoonone.IPlayerInfo|null} [next_operator_info] RoomSendCard next_operator_info\n             * @property {Array.<twoonone.ICard>|null} [sendcards] RoomSendCard sendcards\n             */\n\n            /**\n             * Constructs a new RoomSendCard.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a RoomSendCard.\n             * @implements IRoomSendCard\n             * @constructor\n             * @param {twoonone.RoomEventResponse.IRoomSendCard=} [properties] Properties to set\n             */\n            function RoomSendCard(properties) {\n                this.sendcards = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RoomSendCard operator_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} operator_info\n             * @memberof twoonone.RoomEventResponse.RoomSendCard\n             * @instance\n             */\n            RoomSendCard.prototype.operator_info = null;\n\n            /**\n             * RoomSendCard next_operator_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} next_operator_info\n             * @memberof twoonone.RoomEventResponse.RoomSendCard\n             * @instance\n             */\n            RoomSendCard.prototype.next_operator_info = null;\n\n            /**\n             * RoomSendCard sendcards.\n             * @member {Array.<twoonone.ICard>} sendcards\n             * @memberof twoonone.RoomEventResponse.RoomSendCard\n             * @instance\n             */\n            RoomSendCard.prototype.sendcards = $util.emptyArray;\n\n            /**\n             * Creates a new RoomSendCard instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.RoomSendCard\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomSendCard=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.RoomSendCard} RoomSendCard instance\n             */\n            RoomSendCard.create = function create(properties) {\n                return new RoomSendCard(properties);\n            };\n\n            /**\n             * Encodes the specified RoomSendCard message. Does not implicitly {@link twoonone.RoomEventResponse.RoomSendCard.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.RoomSendCard\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomSendCard} message RoomSendCard message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomSendCard.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.operator_info != null && Object.hasOwnProperty.call(message, \"operator_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.operator_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.next_operator_info != null && Object.hasOwnProperty.call(message, \"next_operator_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.next_operator_info, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.sendcards != null && message.sendcards.length)\n                    for (let i = 0; i < message.sendcards.length; ++i)\n                        $root.twoonone.Card.encode(message.sendcards[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RoomSendCard message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.RoomSendCard.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomSendCard\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomSendCard} message RoomSendCard message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomSendCard.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RoomSendCard message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.RoomSendCard\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.RoomSendCard} RoomSendCard\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomSendCard.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.RoomSendCard();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.operator_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    case 2: {\n                            message.next_operator_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    case 3: {\n                            if (!(message.sendcards && message.sendcards.length))\n                                message.sendcards = [];\n                            message.sendcards.push($root.twoonone.Card.decode(reader, reader.uint32()));\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RoomSendCard message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomSendCard\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.RoomSendCard} RoomSendCard\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomSendCard.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RoomSendCard message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.RoomSendCard\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RoomSendCard.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.operator_info != null && message.hasOwnProperty(\"operator_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.operator_info);\n                    if (error)\n                        return \"operator_info.\" + error;\n                }\n                if (message.next_operator_info != null && message.hasOwnProperty(\"next_operator_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.next_operator_info);\n                    if (error)\n                        return \"next_operator_info.\" + error;\n                }\n                if (message.sendcards != null && message.hasOwnProperty(\"sendcards\")) {\n                    if (!Array.isArray(message.sendcards))\n                        return \"sendcards: array expected\";\n                    for (let i = 0; i < message.sendcards.length; ++i) {\n                        let error = $root.twoonone.Card.verify(message.sendcards[i]);\n                        if (error)\n                            return \"sendcards.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a RoomSendCard message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.RoomSendCard\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.RoomSendCard} RoomSendCard\n             */\n            RoomSendCard.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.RoomSendCard)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.RoomSendCard();\n                if (object.operator_info != null) {\n                    if (typeof object.operator_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomSendCard.operator_info: object expected\");\n                    message.operator_info = $root.twoonone.PlayerInfo.fromObject(object.operator_info);\n                }\n                if (object.next_operator_info != null) {\n                    if (typeof object.next_operator_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomSendCard.next_operator_info: object expected\");\n                    message.next_operator_info = $root.twoonone.PlayerInfo.fromObject(object.next_operator_info);\n                }\n                if (object.sendcards) {\n                    if (!Array.isArray(object.sendcards))\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomSendCard.sendcards: array expected\");\n                    message.sendcards = [];\n                    for (let i = 0; i < object.sendcards.length; ++i) {\n                        if (typeof object.sendcards[i] !== \"object\")\n                            throw TypeError(\".twoonone.RoomEventResponse.RoomSendCard.sendcards: object expected\");\n                        message.sendcards[i] = $root.twoonone.Card.fromObject(object.sendcards[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RoomSendCard message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.RoomSendCard\n             * @static\n             * @param {twoonone.RoomEventResponse.RoomSendCard} message RoomSendCard\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RoomSendCard.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.sendcards = [];\n                if (options.defaults) {\n                    object.operator_info = null;\n                    object.next_operator_info = null;\n                }\n                if (message.operator_info != null && message.hasOwnProperty(\"operator_info\"))\n                    object.operator_info = $root.twoonone.PlayerInfo.toObject(message.operator_info, options);\n                if (message.next_operator_info != null && message.hasOwnProperty(\"next_operator_info\"))\n                    object.next_operator_info = $root.twoonone.PlayerInfo.toObject(message.next_operator_info, options);\n                if (message.sendcards && message.sendcards.length) {\n                    object.sendcards = [];\n                    for (let j = 0; j < message.sendcards.length; ++j)\n                        object.sendcards[j] = $root.twoonone.Card.toObject(message.sendcards[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this RoomSendCard to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.RoomSendCard\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RoomSendCard.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for RoomSendCard\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.RoomSendCard\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            RoomSendCard.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.RoomSendCard\";\n            };\n\n            return RoomSendCard;\n        })();\n\n        RoomEventResponse.RoomNoSendCard = (function() {\n\n            /**\n             * Properties of a RoomNoSendCard.\n             * @memberof twoonone.RoomEventResponse\n             * @interface IRoomNoSendCard\n             * @property {twoonone.IPlayerInfo|null} [operator_info] RoomNoSendCard operator_info\n             * @property {twoonone.IPlayerInfo|null} [next_operator_info] RoomNoSendCard next_operator_info\n             */\n\n            /**\n             * Constructs a new RoomNoSendCard.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a RoomNoSendCard.\n             * @implements IRoomNoSendCard\n             * @constructor\n             * @param {twoonone.RoomEventResponse.IRoomNoSendCard=} [properties] Properties to set\n             */\n            function RoomNoSendCard(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RoomNoSendCard operator_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} operator_info\n             * @memberof twoonone.RoomEventResponse.RoomNoSendCard\n             * @instance\n             */\n            RoomNoSendCard.prototype.operator_info = null;\n\n            /**\n             * RoomNoSendCard next_operator_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} next_operator_info\n             * @memberof twoonone.RoomEventResponse.RoomNoSendCard\n             * @instance\n             */\n            RoomNoSendCard.prototype.next_operator_info = null;\n\n            /**\n             * Creates a new RoomNoSendCard instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.RoomNoSendCard\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomNoSendCard=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.RoomNoSendCard} RoomNoSendCard instance\n             */\n            RoomNoSendCard.create = function create(properties) {\n                return new RoomNoSendCard(properties);\n            };\n\n            /**\n             * Encodes the specified RoomNoSendCard message. Does not implicitly {@link twoonone.RoomEventResponse.RoomNoSendCard.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.RoomNoSendCard\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomNoSendCard} message RoomNoSendCard message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomNoSendCard.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.operator_info != null && Object.hasOwnProperty.call(message, \"operator_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.operator_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.next_operator_info != null && Object.hasOwnProperty.call(message, \"next_operator_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.next_operator_info, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RoomNoSendCard message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.RoomNoSendCard.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomNoSendCard\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomNoSendCard} message RoomNoSendCard message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomNoSendCard.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RoomNoSendCard message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.RoomNoSendCard\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.RoomNoSendCard} RoomNoSendCard\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomNoSendCard.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.RoomNoSendCard();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.operator_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    case 2: {\n                            message.next_operator_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RoomNoSendCard message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomNoSendCard\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.RoomNoSendCard} RoomNoSendCard\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomNoSendCard.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RoomNoSendCard message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.RoomNoSendCard\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RoomNoSendCard.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.operator_info != null && message.hasOwnProperty(\"operator_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.operator_info);\n                    if (error)\n                        return \"operator_info.\" + error;\n                }\n                if (message.next_operator_info != null && message.hasOwnProperty(\"next_operator_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.next_operator_info);\n                    if (error)\n                        return \"next_operator_info.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a RoomNoSendCard message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.RoomNoSendCard\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.RoomNoSendCard} RoomNoSendCard\n             */\n            RoomNoSendCard.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.RoomNoSendCard)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.RoomNoSendCard();\n                if (object.operator_info != null) {\n                    if (typeof object.operator_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomNoSendCard.operator_info: object expected\");\n                    message.operator_info = $root.twoonone.PlayerInfo.fromObject(object.operator_info);\n                }\n                if (object.next_operator_info != null) {\n                    if (typeof object.next_operator_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomNoSendCard.next_operator_info: object expected\");\n                    message.next_operator_info = $root.twoonone.PlayerInfo.fromObject(object.next_operator_info);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RoomNoSendCard message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.RoomNoSendCard\n             * @static\n             * @param {twoonone.RoomEventResponse.RoomNoSendCard} message RoomNoSendCard\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RoomNoSendCard.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.operator_info = null;\n                    object.next_operator_info = null;\n                }\n                if (message.operator_info != null && message.hasOwnProperty(\"operator_info\"))\n                    object.operator_info = $root.twoonone.PlayerInfo.toObject(message.operator_info, options);\n                if (message.next_operator_info != null && message.hasOwnProperty(\"next_operator_info\"))\n                    object.next_operator_info = $root.twoonone.PlayerInfo.toObject(message.next_operator_info, options);\n                return object;\n            };\n\n            /**\n             * Converts this RoomNoSendCard to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.RoomNoSendCard\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RoomNoSendCard.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for RoomNoSendCard\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.RoomNoSendCard\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            RoomNoSendCard.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.RoomNoSendCard\";\n            };\n\n            return RoomNoSendCard;\n        })();\n\n        RoomEventResponse.RoomReRobLandowner = (function() {\n\n            /**\n             * Properties of a RoomReRobLandowner.\n             * @memberof twoonone.RoomEventResponse\n             * @interface IRoomReRobLandowner\n             * @property {twoonone.IPlayerInfo|null} [next_operator_info] RoomReRobLandowner next_operator_info\n             */\n\n            /**\n             * Constructs a new RoomReRobLandowner.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a RoomReRobLandowner.\n             * @implements IRoomReRobLandowner\n             * @constructor\n             * @param {twoonone.RoomEventResponse.IRoomReRobLandowner=} [properties] Properties to set\n             */\n            function RoomReRobLandowner(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RoomReRobLandowner next_operator_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} next_operator_info\n             * @memberof twoonone.RoomEventResponse.RoomReRobLandowner\n             * @instance\n             */\n            RoomReRobLandowner.prototype.next_operator_info = null;\n\n            /**\n             * Creates a new RoomReRobLandowner instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.RoomReRobLandowner\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomReRobLandowner=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.RoomReRobLandowner} RoomReRobLandowner instance\n             */\n            RoomReRobLandowner.create = function create(properties) {\n                return new RoomReRobLandowner(properties);\n            };\n\n            /**\n             * Encodes the specified RoomReRobLandowner message. Does not implicitly {@link twoonone.RoomEventResponse.RoomReRobLandowner.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.RoomReRobLandowner\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomReRobLandowner} message RoomReRobLandowner message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomReRobLandowner.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.next_operator_info != null && Object.hasOwnProperty.call(message, \"next_operator_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.next_operator_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RoomReRobLandowner message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.RoomReRobLandowner.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomReRobLandowner\n             * @static\n             * @param {twoonone.RoomEventResponse.IRoomReRobLandowner} message RoomReRobLandowner message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RoomReRobLandowner.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RoomReRobLandowner message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.RoomReRobLandowner\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.RoomReRobLandowner} RoomReRobLandowner\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomReRobLandowner.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.RoomReRobLandowner();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.next_operator_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RoomReRobLandowner message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.RoomReRobLandowner\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.RoomReRobLandowner} RoomReRobLandowner\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RoomReRobLandowner.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RoomReRobLandowner message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.RoomReRobLandowner\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RoomReRobLandowner.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.next_operator_info != null && message.hasOwnProperty(\"next_operator_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.next_operator_info);\n                    if (error)\n                        return \"next_operator_info.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a RoomReRobLandowner message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.RoomReRobLandowner\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.RoomReRobLandowner} RoomReRobLandowner\n             */\n            RoomReRobLandowner.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.RoomReRobLandowner)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.RoomReRobLandowner();\n                if (object.next_operator_info != null) {\n                    if (typeof object.next_operator_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.RoomReRobLandowner.next_operator_info: object expected\");\n                    message.next_operator_info = $root.twoonone.PlayerInfo.fromObject(object.next_operator_info);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RoomReRobLandowner message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.RoomReRobLandowner\n             * @static\n             * @param {twoonone.RoomEventResponse.RoomReRobLandowner} message RoomReRobLandowner\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RoomReRobLandowner.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults)\n                    object.next_operator_info = null;\n                if (message.next_operator_info != null && message.hasOwnProperty(\"next_operator_info\"))\n                    object.next_operator_info = $root.twoonone.PlayerInfo.toObject(message.next_operator_info, options);\n                return object;\n            };\n\n            /**\n             * Converts this RoomReRobLandowner to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.RoomReRobLandowner\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RoomReRobLandowner.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for RoomReRobLandowner\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.RoomReRobLandowner\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            RoomReRobLandowner.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.RoomReRobLandowner\";\n            };\n\n            return RoomReRobLandowner;\n        })();\n\n        RoomEventResponse.RobLandownerIntoSendingCard = (function() {\n\n            /**\n             * Properties of a RobLandownerIntoSendingCard.\n             * @memberof twoonone.RoomEventResponse\n             * @interface IRobLandownerIntoSendingCard\n             * @property {twoonone.IPlayerInfo|null} [sendcarder_info] RobLandownerIntoSendingCard sendcarder_info\n             * @property {Array.<twoonone.ICard>|null} [landowner_cards] RobLandownerIntoSendingCard landowner_cards\n             */\n\n            /**\n             * Constructs a new RobLandownerIntoSendingCard.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a RobLandownerIntoSendingCard.\n             * @implements IRobLandownerIntoSendingCard\n             * @constructor\n             * @param {twoonone.RoomEventResponse.IRobLandownerIntoSendingCard=} [properties] Properties to set\n             */\n            function RobLandownerIntoSendingCard(properties) {\n                this.landowner_cards = [];\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RobLandownerIntoSendingCard sendcarder_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} sendcarder_info\n             * @memberof twoonone.RoomEventResponse.RobLandownerIntoSendingCard\n             * @instance\n             */\n            RobLandownerIntoSendingCard.prototype.sendcarder_info = null;\n\n            /**\n             * RobLandownerIntoSendingCard landowner_cards.\n             * @member {Array.<twoonone.ICard>} landowner_cards\n             * @memberof twoonone.RoomEventResponse.RobLandownerIntoSendingCard\n             * @instance\n             */\n            RobLandownerIntoSendingCard.prototype.landowner_cards = $util.emptyArray;\n\n            /**\n             * Creates a new RobLandownerIntoSendingCard instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.RobLandownerIntoSendingCard\n             * @static\n             * @param {twoonone.RoomEventResponse.IRobLandownerIntoSendingCard=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.RobLandownerIntoSendingCard} RobLandownerIntoSendingCard instance\n             */\n            RobLandownerIntoSendingCard.create = function create(properties) {\n                return new RobLandownerIntoSendingCard(properties);\n            };\n\n            /**\n             * Encodes the specified RobLandownerIntoSendingCard message. Does not implicitly {@link twoonone.RoomEventResponse.RobLandownerIntoSendingCard.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.RobLandownerIntoSendingCard\n             * @static\n             * @param {twoonone.RoomEventResponse.IRobLandownerIntoSendingCard} message RobLandownerIntoSendingCard message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RobLandownerIntoSendingCard.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.sendcarder_info != null && Object.hasOwnProperty.call(message, \"sendcarder_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.sendcarder_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.landowner_cards != null && message.landowner_cards.length)\n                    for (let i = 0; i < message.landowner_cards.length; ++i)\n                        $root.twoonone.Card.encode(message.landowner_cards[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RobLandownerIntoSendingCard message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.RobLandownerIntoSendingCard.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.RobLandownerIntoSendingCard\n             * @static\n             * @param {twoonone.RoomEventResponse.IRobLandownerIntoSendingCard} message RobLandownerIntoSendingCard message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RobLandownerIntoSendingCard.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RobLandownerIntoSendingCard message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.RobLandownerIntoSendingCard\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.RobLandownerIntoSendingCard} RobLandownerIntoSendingCard\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RobLandownerIntoSendingCard.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.RobLandownerIntoSendingCard();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.sendcarder_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    case 2: {\n                            if (!(message.landowner_cards && message.landowner_cards.length))\n                                message.landowner_cards = [];\n                            message.landowner_cards.push($root.twoonone.Card.decode(reader, reader.uint32()));\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RobLandownerIntoSendingCard message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.RobLandownerIntoSendingCard\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.RobLandownerIntoSendingCard} RobLandownerIntoSendingCard\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RobLandownerIntoSendingCard.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RobLandownerIntoSendingCard message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.RobLandownerIntoSendingCard\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RobLandownerIntoSendingCard.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.sendcarder_info != null && message.hasOwnProperty(\"sendcarder_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.sendcarder_info);\n                    if (error)\n                        return \"sendcarder_info.\" + error;\n                }\n                if (message.landowner_cards != null && message.hasOwnProperty(\"landowner_cards\")) {\n                    if (!Array.isArray(message.landowner_cards))\n                        return \"landowner_cards: array expected\";\n                    for (let i = 0; i < message.landowner_cards.length; ++i) {\n                        let error = $root.twoonone.Card.verify(message.landowner_cards[i]);\n                        if (error)\n                            return \"landowner_cards.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a RobLandownerIntoSendingCard message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.RobLandownerIntoSendingCard\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.RobLandownerIntoSendingCard} RobLandownerIntoSendingCard\n             */\n            RobLandownerIntoSendingCard.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.RobLandownerIntoSendingCard)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.RobLandownerIntoSendingCard();\n                if (object.sendcarder_info != null) {\n                    if (typeof object.sendcarder_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.RobLandownerIntoSendingCard.sendcarder_info: object expected\");\n                    message.sendcarder_info = $root.twoonone.PlayerInfo.fromObject(object.sendcarder_info);\n                }\n                if (object.landowner_cards) {\n                    if (!Array.isArray(object.landowner_cards))\n                        throw TypeError(\".twoonone.RoomEventResponse.RobLandownerIntoSendingCard.landowner_cards: array expected\");\n                    message.landowner_cards = [];\n                    for (let i = 0; i < object.landowner_cards.length; ++i) {\n                        if (typeof object.landowner_cards[i] !== \"object\")\n                            throw TypeError(\".twoonone.RoomEventResponse.RobLandownerIntoSendingCard.landowner_cards: object expected\");\n                        message.landowner_cards[i] = $root.twoonone.Card.fromObject(object.landowner_cards[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RobLandownerIntoSendingCard message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.RobLandownerIntoSendingCard\n             * @static\n             * @param {twoonone.RoomEventResponse.RobLandownerIntoSendingCard} message RobLandownerIntoSendingCard\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RobLandownerIntoSendingCard.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.arrays || options.defaults)\n                    object.landowner_cards = [];\n                if (options.defaults)\n                    object.sendcarder_info = null;\n                if (message.sendcarder_info != null && message.hasOwnProperty(\"sendcarder_info\"))\n                    object.sendcarder_info = $root.twoonone.PlayerInfo.toObject(message.sendcarder_info, options);\n                if (message.landowner_cards && message.landowner_cards.length) {\n                    object.landowner_cards = [];\n                    for (let j = 0; j < message.landowner_cards.length; ++j)\n                        object.landowner_cards[j] = $root.twoonone.Card.toObject(message.landowner_cards[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this RobLandownerIntoSendingCard to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.RobLandownerIntoSendingCard\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RobLandownerIntoSendingCard.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for RobLandownerIntoSendingCard\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.RobLandownerIntoSendingCard\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            RobLandownerIntoSendingCard.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.RobLandownerIntoSendingCard\";\n            };\n\n            return RobLandownerIntoSendingCard;\n        })();\n\n        RoomEventResponse.RobLandownerContinuousRob = (function() {\n\n            /**\n             * Properties of a RobLandownerContinuousRob.\n             * @memberof twoonone.RoomEventResponse\n             * @interface IRobLandownerContinuousRob\n             * @property {number|null} [multiple] RobLandownerContinuousRob multiple\n             */\n\n            /**\n             * Constructs a new RobLandownerContinuousRob.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a RobLandownerContinuousRob.\n             * @implements IRobLandownerContinuousRob\n             * @constructor\n             * @param {twoonone.RoomEventResponse.IRobLandownerContinuousRob=} [properties] Properties to set\n             */\n            function RobLandownerContinuousRob(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RobLandownerContinuousRob multiple.\n             * @member {number} multiple\n             * @memberof twoonone.RoomEventResponse.RobLandownerContinuousRob\n             * @instance\n             */\n            RobLandownerContinuousRob.prototype.multiple = 0;\n\n            /**\n             * Creates a new RobLandownerContinuousRob instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.RobLandownerContinuousRob\n             * @static\n             * @param {twoonone.RoomEventResponse.IRobLandownerContinuousRob=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.RobLandownerContinuousRob} RobLandownerContinuousRob instance\n             */\n            RobLandownerContinuousRob.create = function create(properties) {\n                return new RobLandownerContinuousRob(properties);\n            };\n\n            /**\n             * Encodes the specified RobLandownerContinuousRob message. Does not implicitly {@link twoonone.RoomEventResponse.RobLandownerContinuousRob.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.RobLandownerContinuousRob\n             * @static\n             * @param {twoonone.RoomEventResponse.IRobLandownerContinuousRob} message RobLandownerContinuousRob message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RobLandownerContinuousRob.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.multiple != null && Object.hasOwnProperty.call(message, \"multiple\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.multiple);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RobLandownerContinuousRob message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.RobLandownerContinuousRob.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.RobLandownerContinuousRob\n             * @static\n             * @param {twoonone.RoomEventResponse.IRobLandownerContinuousRob} message RobLandownerContinuousRob message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RobLandownerContinuousRob.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RobLandownerContinuousRob message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.RobLandownerContinuousRob\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.RobLandownerContinuousRob} RobLandownerContinuousRob\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RobLandownerContinuousRob.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.RobLandownerContinuousRob();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.multiple = reader.int32();\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RobLandownerContinuousRob message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.RobLandownerContinuousRob\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.RobLandownerContinuousRob} RobLandownerContinuousRob\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RobLandownerContinuousRob.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RobLandownerContinuousRob message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.RobLandownerContinuousRob\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RobLandownerContinuousRob.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.multiple != null && message.hasOwnProperty(\"multiple\"))\n                    if (!$util.isInteger(message.multiple))\n                        return \"multiple: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a RobLandownerContinuousRob message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.RobLandownerContinuousRob\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.RobLandownerContinuousRob} RobLandownerContinuousRob\n             */\n            RobLandownerContinuousRob.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.RobLandownerContinuousRob)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.RobLandownerContinuousRob();\n                if (object.multiple != null)\n                    message.multiple = object.multiple | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RobLandownerContinuousRob message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.RobLandownerContinuousRob\n             * @static\n             * @param {twoonone.RoomEventResponse.RobLandownerContinuousRob} message RobLandownerContinuousRob\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RobLandownerContinuousRob.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults)\n                    object.multiple = 0;\n                if (message.multiple != null && message.hasOwnProperty(\"multiple\"))\n                    object.multiple = message.multiple;\n                return object;\n            };\n\n            /**\n             * Converts this RobLandownerContinuousRob to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.RobLandownerContinuousRob\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RobLandownerContinuousRob.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for RobLandownerContinuousRob\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.RobLandownerContinuousRob\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            RobLandownerContinuousRob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.RobLandownerContinuousRob\";\n            };\n\n            return RobLandownerContinuousRob;\n        })();\n\n        RoomEventResponse.SendCardSpringNotice = (function() {\n\n            /**\n             * Properties of a SendCardSpringNotice.\n             * @memberof twoonone.RoomEventResponse\n             * @interface ISendCardSpringNotice\n             * @property {number|null} [multiple] SendCardSpringNotice multiple\n             */\n\n            /**\n             * Constructs a new SendCardSpringNotice.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a SendCardSpringNotice.\n             * @implements ISendCardSpringNotice\n             * @constructor\n             * @param {twoonone.RoomEventResponse.ISendCardSpringNotice=} [properties] Properties to set\n             */\n            function SendCardSpringNotice(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * SendCardSpringNotice multiple.\n             * @member {number} multiple\n             * @memberof twoonone.RoomEventResponse.SendCardSpringNotice\n             * @instance\n             */\n            SendCardSpringNotice.prototype.multiple = 0;\n\n            /**\n             * Creates a new SendCardSpringNotice instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.SendCardSpringNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.ISendCardSpringNotice=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.SendCardSpringNotice} SendCardSpringNotice instance\n             */\n            SendCardSpringNotice.create = function create(properties) {\n                return new SendCardSpringNotice(properties);\n            };\n\n            /**\n             * Encodes the specified SendCardSpringNotice message. Does not implicitly {@link twoonone.RoomEventResponse.SendCardSpringNotice.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.SendCardSpringNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.ISendCardSpringNotice} message SendCardSpringNotice message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SendCardSpringNotice.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.multiple != null && Object.hasOwnProperty.call(message, \"multiple\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.multiple);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified SendCardSpringNotice message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.SendCardSpringNotice.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.SendCardSpringNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.ISendCardSpringNotice} message SendCardSpringNotice message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SendCardSpringNotice.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a SendCardSpringNotice message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.SendCardSpringNotice\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.SendCardSpringNotice} SendCardSpringNotice\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SendCardSpringNotice.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.SendCardSpringNotice();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.multiple = reader.int32();\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a SendCardSpringNotice message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.SendCardSpringNotice\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.SendCardSpringNotice} SendCardSpringNotice\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SendCardSpringNotice.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a SendCardSpringNotice message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.SendCardSpringNotice\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            SendCardSpringNotice.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.multiple != null && message.hasOwnProperty(\"multiple\"))\n                    if (!$util.isInteger(message.multiple))\n                        return \"multiple: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a SendCardSpringNotice message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.SendCardSpringNotice\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.SendCardSpringNotice} SendCardSpringNotice\n             */\n            SendCardSpringNotice.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.SendCardSpringNotice)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.SendCardSpringNotice();\n                if (object.multiple != null)\n                    message.multiple = object.multiple | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a SendCardSpringNotice message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.SendCardSpringNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.SendCardSpringNotice} message SendCardSpringNotice\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SendCardSpringNotice.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults)\n                    object.multiple = 0;\n                if (message.multiple != null && message.hasOwnProperty(\"multiple\"))\n                    object.multiple = message.multiple;\n                return object;\n            };\n\n            /**\n             * Converts this SendCardSpringNotice to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.SendCardSpringNotice\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SendCardSpringNotice.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for SendCardSpringNotice\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.SendCardSpringNotice\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            SendCardSpringNotice.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.SendCardSpringNotice\";\n            };\n\n            return SendCardSpringNotice;\n        })();\n\n        RoomEventResponse.SendCardBoomNotice = (function() {\n\n            /**\n             * Properties of a SendCardBoomNotice.\n             * @memberof twoonone.RoomEventResponse\n             * @interface ISendCardBoomNotice\n             * @property {number|null} [multiple] SendCardBoomNotice multiple\n             * @property {twoonone.IPlayerInfo|null} [sendcarder_info] SendCardBoomNotice sendcarder_info\n             */\n\n            /**\n             * Constructs a new SendCardBoomNotice.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a SendCardBoomNotice.\n             * @implements ISendCardBoomNotice\n             * @constructor\n             * @param {twoonone.RoomEventResponse.ISendCardBoomNotice=} [properties] Properties to set\n             */\n            function SendCardBoomNotice(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * SendCardBoomNotice multiple.\n             * @member {number} multiple\n             * @memberof twoonone.RoomEventResponse.SendCardBoomNotice\n             * @instance\n             */\n            SendCardBoomNotice.prototype.multiple = 0;\n\n            /**\n             * SendCardBoomNotice sendcarder_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} sendcarder_info\n             * @memberof twoonone.RoomEventResponse.SendCardBoomNotice\n             * @instance\n             */\n            SendCardBoomNotice.prototype.sendcarder_info = null;\n\n            /**\n             * Creates a new SendCardBoomNotice instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.SendCardBoomNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.ISendCardBoomNotice=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.SendCardBoomNotice} SendCardBoomNotice instance\n             */\n            SendCardBoomNotice.create = function create(properties) {\n                return new SendCardBoomNotice(properties);\n            };\n\n            /**\n             * Encodes the specified SendCardBoomNotice message. Does not implicitly {@link twoonone.RoomEventResponse.SendCardBoomNotice.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.SendCardBoomNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.ISendCardBoomNotice} message SendCardBoomNotice message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SendCardBoomNotice.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.multiple != null && Object.hasOwnProperty.call(message, \"multiple\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.multiple);\n                if (message.sendcarder_info != null && Object.hasOwnProperty.call(message, \"sendcarder_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.sendcarder_info, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified SendCardBoomNotice message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.SendCardBoomNotice.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.SendCardBoomNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.ISendCardBoomNotice} message SendCardBoomNotice message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SendCardBoomNotice.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a SendCardBoomNotice message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.SendCardBoomNotice\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.SendCardBoomNotice} SendCardBoomNotice\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SendCardBoomNotice.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.SendCardBoomNotice();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.multiple = reader.int32();\n                            break;\n                        }\n                    case 2: {\n                            message.sendcarder_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a SendCardBoomNotice message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.SendCardBoomNotice\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.SendCardBoomNotice} SendCardBoomNotice\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SendCardBoomNotice.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a SendCardBoomNotice message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.SendCardBoomNotice\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            SendCardBoomNotice.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.multiple != null && message.hasOwnProperty(\"multiple\"))\n                    if (!$util.isInteger(message.multiple))\n                        return \"multiple: integer expected\";\n                if (message.sendcarder_info != null && message.hasOwnProperty(\"sendcarder_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.sendcarder_info);\n                    if (error)\n                        return \"sendcarder_info.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a SendCardBoomNotice message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.SendCardBoomNotice\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.SendCardBoomNotice} SendCardBoomNotice\n             */\n            SendCardBoomNotice.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.SendCardBoomNotice)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.SendCardBoomNotice();\n                if (object.multiple != null)\n                    message.multiple = object.multiple | 0;\n                if (object.sendcarder_info != null) {\n                    if (typeof object.sendcarder_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.SendCardBoomNotice.sendcarder_info: object expected\");\n                    message.sendcarder_info = $root.twoonone.PlayerInfo.fromObject(object.sendcarder_info);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a SendCardBoomNotice message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.SendCardBoomNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.SendCardBoomNotice} message SendCardBoomNotice\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SendCardBoomNotice.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.multiple = 0;\n                    object.sendcarder_info = null;\n                }\n                if (message.multiple != null && message.hasOwnProperty(\"multiple\"))\n                    object.multiple = message.multiple;\n                if (message.sendcarder_info != null && message.hasOwnProperty(\"sendcarder_info\"))\n                    object.sendcarder_info = $root.twoonone.PlayerInfo.toObject(message.sendcarder_info, options);\n                return object;\n            };\n\n            /**\n             * Converts this SendCardBoomNotice to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.SendCardBoomNotice\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SendCardBoomNotice.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for SendCardBoomNotice\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.SendCardBoomNotice\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            SendCardBoomNotice.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.SendCardBoomNotice\";\n            };\n\n            return SendCardBoomNotice;\n        })();\n\n        RoomEventResponse.SendCardKingBoomNotice = (function() {\n\n            /**\n             * Properties of a SendCardKingBoomNotice.\n             * @memberof twoonone.RoomEventResponse\n             * @interface ISendCardKingBoomNotice\n             * @property {number|null} [multiple] SendCardKingBoomNotice multiple\n             * @property {twoonone.IPlayerInfo|null} [sendcarder_info] SendCardKingBoomNotice sendcarder_info\n             */\n\n            /**\n             * Constructs a new SendCardKingBoomNotice.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a SendCardKingBoomNotice.\n             * @implements ISendCardKingBoomNotice\n             * @constructor\n             * @param {twoonone.RoomEventResponse.ISendCardKingBoomNotice=} [properties] Properties to set\n             */\n            function SendCardKingBoomNotice(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * SendCardKingBoomNotice multiple.\n             * @member {number} multiple\n             * @memberof twoonone.RoomEventResponse.SendCardKingBoomNotice\n             * @instance\n             */\n            SendCardKingBoomNotice.prototype.multiple = 0;\n\n            /**\n             * SendCardKingBoomNotice sendcarder_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} sendcarder_info\n             * @memberof twoonone.RoomEventResponse.SendCardKingBoomNotice\n             * @instance\n             */\n            SendCardKingBoomNotice.prototype.sendcarder_info = null;\n\n            /**\n             * Creates a new SendCardKingBoomNotice instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.SendCardKingBoomNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.ISendCardKingBoomNotice=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.SendCardKingBoomNotice} SendCardKingBoomNotice instance\n             */\n            SendCardKingBoomNotice.create = function create(properties) {\n                return new SendCardKingBoomNotice(properties);\n            };\n\n            /**\n             * Encodes the specified SendCardKingBoomNotice message. Does not implicitly {@link twoonone.RoomEventResponse.SendCardKingBoomNotice.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.SendCardKingBoomNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.ISendCardKingBoomNotice} message SendCardKingBoomNotice message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SendCardKingBoomNotice.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.multiple != null && Object.hasOwnProperty.call(message, \"multiple\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.multiple);\n                if (message.sendcarder_info != null && Object.hasOwnProperty.call(message, \"sendcarder_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.sendcarder_info, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified SendCardKingBoomNotice message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.SendCardKingBoomNotice.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.SendCardKingBoomNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.ISendCardKingBoomNotice} message SendCardKingBoomNotice message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SendCardKingBoomNotice.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a SendCardKingBoomNotice message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.SendCardKingBoomNotice\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.SendCardKingBoomNotice} SendCardKingBoomNotice\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SendCardKingBoomNotice.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.SendCardKingBoomNotice();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.multiple = reader.int32();\n                            break;\n                        }\n                    case 2: {\n                            message.sendcarder_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a SendCardKingBoomNotice message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.SendCardKingBoomNotice\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.SendCardKingBoomNotice} SendCardKingBoomNotice\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SendCardKingBoomNotice.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a SendCardKingBoomNotice message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.SendCardKingBoomNotice\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            SendCardKingBoomNotice.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.multiple != null && message.hasOwnProperty(\"multiple\"))\n                    if (!$util.isInteger(message.multiple))\n                        return \"multiple: integer expected\";\n                if (message.sendcarder_info != null && message.hasOwnProperty(\"sendcarder_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.sendcarder_info);\n                    if (error)\n                        return \"sendcarder_info.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a SendCardKingBoomNotice message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.SendCardKingBoomNotice\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.SendCardKingBoomNotice} SendCardKingBoomNotice\n             */\n            SendCardKingBoomNotice.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.SendCardKingBoomNotice)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.SendCardKingBoomNotice();\n                if (object.multiple != null)\n                    message.multiple = object.multiple | 0;\n                if (object.sendcarder_info != null) {\n                    if (typeof object.sendcarder_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.SendCardKingBoomNotice.sendcarder_info: object expected\");\n                    message.sendcarder_info = $root.twoonone.PlayerInfo.fromObject(object.sendcarder_info);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a SendCardKingBoomNotice message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.SendCardKingBoomNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.SendCardKingBoomNotice} message SendCardKingBoomNotice\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SendCardKingBoomNotice.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.multiple = 0;\n                    object.sendcarder_info = null;\n                }\n                if (message.multiple != null && message.hasOwnProperty(\"multiple\"))\n                    object.multiple = message.multiple;\n                if (message.sendcarder_info != null && message.hasOwnProperty(\"sendcarder_info\"))\n                    object.sendcarder_info = $root.twoonone.PlayerInfo.toObject(message.sendcarder_info, options);\n                return object;\n            };\n\n            /**\n             * Converts this SendCardKingBoomNotice to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.SendCardKingBoomNotice\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SendCardKingBoomNotice.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for SendCardKingBoomNotice\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.SendCardKingBoomNotice\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            SendCardKingBoomNotice.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.SendCardKingBoomNotice\";\n            };\n\n            return SendCardKingBoomNotice;\n        })();\n\n        RoomEventResponse.SendCardCardNumberNotice = (function() {\n\n            /**\n             * Properties of a SendCardCardNumberNotice.\n             * @memberof twoonone.RoomEventResponse\n             * @interface ISendCardCardNumberNotice\n             * @property {number|null} [number] SendCardCardNumberNotice number\n             * @property {twoonone.IPlayerInfo|null} [notice_target_info] SendCardCardNumberNotice notice_target_info\n             */\n\n            /**\n             * Constructs a new SendCardCardNumberNotice.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a SendCardCardNumberNotice.\n             * @implements ISendCardCardNumberNotice\n             * @constructor\n             * @param {twoonone.RoomEventResponse.ISendCardCardNumberNotice=} [properties] Properties to set\n             */\n            function SendCardCardNumberNotice(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * SendCardCardNumberNotice number.\n             * @member {number} number\n             * @memberof twoonone.RoomEventResponse.SendCardCardNumberNotice\n             * @instance\n             */\n            SendCardCardNumberNotice.prototype.number = 0;\n\n            /**\n             * SendCardCardNumberNotice notice_target_info.\n             * @member {twoonone.IPlayerInfo|null|undefined} notice_target_info\n             * @memberof twoonone.RoomEventResponse.SendCardCardNumberNotice\n             * @instance\n             */\n            SendCardCardNumberNotice.prototype.notice_target_info = null;\n\n            /**\n             * Creates a new SendCardCardNumberNotice instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.SendCardCardNumberNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.ISendCardCardNumberNotice=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.SendCardCardNumberNotice} SendCardCardNumberNotice instance\n             */\n            SendCardCardNumberNotice.create = function create(properties) {\n                return new SendCardCardNumberNotice(properties);\n            };\n\n            /**\n             * Encodes the specified SendCardCardNumberNotice message. Does not implicitly {@link twoonone.RoomEventResponse.SendCardCardNumberNotice.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.SendCardCardNumberNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.ISendCardCardNumberNotice} message SendCardCardNumberNotice message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SendCardCardNumberNotice.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.number != null && Object.hasOwnProperty.call(message, \"number\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.number);\n                if (message.notice_target_info != null && Object.hasOwnProperty.call(message, \"notice_target_info\"))\n                    $root.twoonone.PlayerInfo.encode(message.notice_target_info, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified SendCardCardNumberNotice message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.SendCardCardNumberNotice.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.SendCardCardNumberNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.ISendCardCardNumberNotice} message SendCardCardNumberNotice message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SendCardCardNumberNotice.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a SendCardCardNumberNotice message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.SendCardCardNumberNotice\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.SendCardCardNumberNotice} SendCardCardNumberNotice\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SendCardCardNumberNotice.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.SendCardCardNumberNotice();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.number = reader.int32();\n                            break;\n                        }\n                    case 2: {\n                            message.notice_target_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a SendCardCardNumberNotice message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.SendCardCardNumberNotice\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.SendCardCardNumberNotice} SendCardCardNumberNotice\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SendCardCardNumberNotice.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a SendCardCardNumberNotice message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.SendCardCardNumberNotice\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            SendCardCardNumberNotice.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.number != null && message.hasOwnProperty(\"number\"))\n                    if (!$util.isInteger(message.number))\n                        return \"number: integer expected\";\n                if (message.notice_target_info != null && message.hasOwnProperty(\"notice_target_info\")) {\n                    let error = $root.twoonone.PlayerInfo.verify(message.notice_target_info);\n                    if (error)\n                        return \"notice_target_info.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a SendCardCardNumberNotice message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.SendCardCardNumberNotice\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.SendCardCardNumberNotice} SendCardCardNumberNotice\n             */\n            SendCardCardNumberNotice.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.SendCardCardNumberNotice)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.SendCardCardNumberNotice();\n                if (object.number != null)\n                    message.number = object.number | 0;\n                if (object.notice_target_info != null) {\n                    if (typeof object.notice_target_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.SendCardCardNumberNotice.notice_target_info: object expected\");\n                    message.notice_target_info = $root.twoonone.PlayerInfo.fromObject(object.notice_target_info);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a SendCardCardNumberNotice message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.SendCardCardNumberNotice\n             * @static\n             * @param {twoonone.RoomEventResponse.SendCardCardNumberNotice} message SendCardCardNumberNotice\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SendCardCardNumberNotice.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.number = 0;\n                    object.notice_target_info = null;\n                }\n                if (message.number != null && message.hasOwnProperty(\"number\"))\n                    object.number = message.number;\n                if (message.notice_target_info != null && message.hasOwnProperty(\"notice_target_info\"))\n                    object.notice_target_info = $root.twoonone.PlayerInfo.toObject(message.notice_target_info, options);\n                return object;\n            };\n\n            /**\n             * Converts this SendCardCardNumberNotice to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.SendCardCardNumberNotice\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SendCardCardNumberNotice.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for SendCardCardNumberNotice\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.SendCardCardNumberNotice\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            SendCardCardNumberNotice.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.SendCardCardNumberNotice\";\n            };\n\n            return SendCardCardNumberNotice;\n        })();\n\n        RoomEventResponse.GameFinish = (function() {\n\n            /**\n             * Properties of a GameFinish.\n             * @memberof twoonone.RoomEventResponse\n             * @interface IGameFinish\n             * @property {twoonone.RoomEventResponse.GameFinish.IPlayerInfoExtra|null} [landowner_info] GameFinish landowner_info\n             * @property {twoonone.RoomEventResponse.GameFinish.IPlayerInfoExtra|null} [farmer1_info] GameFinish farmer1_info\n             * @property {twoonone.RoomEventResponse.GameFinish.IPlayerInfoExtra|null} [farmer2_info] GameFinish farmer2_info\n             * @property {twoonone.Role|null} [Winner] GameFinish Winner\n             */\n\n            /**\n             * Constructs a new GameFinish.\n             * @memberof twoonone.RoomEventResponse\n             * @classdesc Represents a GameFinish.\n             * @implements IGameFinish\n             * @constructor\n             * @param {twoonone.RoomEventResponse.IGameFinish=} [properties] Properties to set\n             */\n            function GameFinish(properties) {\n                if (properties)\n                    for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * GameFinish landowner_info.\n             * @member {twoonone.RoomEventResponse.GameFinish.IPlayerInfoExtra|null|undefined} landowner_info\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @instance\n             */\n            GameFinish.prototype.landowner_info = null;\n\n            /**\n             * GameFinish farmer1_info.\n             * @member {twoonone.RoomEventResponse.GameFinish.IPlayerInfoExtra|null|undefined} farmer1_info\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @instance\n             */\n            GameFinish.prototype.farmer1_info = null;\n\n            /**\n             * GameFinish farmer2_info.\n             * @member {twoonone.RoomEventResponse.GameFinish.IPlayerInfoExtra|null|undefined} farmer2_info\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @instance\n             */\n            GameFinish.prototype.farmer2_info = null;\n\n            /**\n             * GameFinish Winner.\n             * @member {twoonone.Role} Winner\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @instance\n             */\n            GameFinish.prototype.Winner = 0;\n\n            /**\n             * Creates a new GameFinish instance using the specified properties.\n             * @function create\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @static\n             * @param {twoonone.RoomEventResponse.IGameFinish=} [properties] Properties to set\n             * @returns {twoonone.RoomEventResponse.GameFinish} GameFinish instance\n             */\n            GameFinish.create = function create(properties) {\n                return new GameFinish(properties);\n            };\n\n            /**\n             * Encodes the specified GameFinish message. Does not implicitly {@link twoonone.RoomEventResponse.GameFinish.verify|verify} messages.\n             * @function encode\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @static\n             * @param {twoonone.RoomEventResponse.IGameFinish} message GameFinish message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            GameFinish.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.landowner_info != null && Object.hasOwnProperty.call(message, \"landowner_info\"))\n                    $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.encode(message.landowner_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.farmer1_info != null && Object.hasOwnProperty.call(message, \"farmer1_info\"))\n                    $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.encode(message.farmer1_info, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.farmer2_info != null && Object.hasOwnProperty.call(message, \"farmer2_info\"))\n                    $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.encode(message.farmer2_info, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.Winner != null && Object.hasOwnProperty.call(message, \"Winner\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.Winner);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified GameFinish message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.GameFinish.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @static\n             * @param {twoonone.RoomEventResponse.IGameFinish} message GameFinish message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            GameFinish.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a GameFinish message from the specified reader or buffer.\n             * @function decode\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {twoonone.RoomEventResponse.GameFinish} GameFinish\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            GameFinish.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.GameFinish();\n                while (reader.pos < end) {\n                    let tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1: {\n                            message.landowner_info = $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.decode(reader, reader.uint32());\n                            break;\n                        }\n                    case 2: {\n                            message.farmer1_info = $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.decode(reader, reader.uint32());\n                            break;\n                        }\n                    case 3: {\n                            message.farmer2_info = $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.decode(reader, reader.uint32());\n                            break;\n                        }\n                    case 4: {\n                            message.Winner = reader.int32();\n                            break;\n                        }\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a GameFinish message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {twoonone.RoomEventResponse.GameFinish} GameFinish\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            GameFinish.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a GameFinish message.\n             * @function verify\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            GameFinish.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.landowner_info != null && message.hasOwnProperty(\"landowner_info\")) {\n                    let error = $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.verify(message.landowner_info);\n                    if (error)\n                        return \"landowner_info.\" + error;\n                }\n                if (message.farmer1_info != null && message.hasOwnProperty(\"farmer1_info\")) {\n                    let error = $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.verify(message.farmer1_info);\n                    if (error)\n                        return \"farmer1_info.\" + error;\n                }\n                if (message.farmer2_info != null && message.hasOwnProperty(\"farmer2_info\")) {\n                    let error = $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.verify(message.farmer2_info);\n                    if (error)\n                        return \"farmer2_info.\" + error;\n                }\n                if (message.Winner != null && message.hasOwnProperty(\"Winner\"))\n                    switch (message.Winner) {\n                    default:\n                        return \"Winner: enum value expected\";\n                    case 0:\n                    case 1:\n                    case 2:\n                        break;\n                    }\n                return null;\n            };\n\n            /**\n             * Creates a GameFinish message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {twoonone.RoomEventResponse.GameFinish} GameFinish\n             */\n            GameFinish.fromObject = function fromObject(object) {\n                if (object instanceof $root.twoonone.RoomEventResponse.GameFinish)\n                    return object;\n                let message = new $root.twoonone.RoomEventResponse.GameFinish();\n                if (object.landowner_info != null) {\n                    if (typeof object.landowner_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.GameFinish.landowner_info: object expected\");\n                    message.landowner_info = $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.fromObject(object.landowner_info);\n                }\n                if (object.farmer1_info != null) {\n                    if (typeof object.farmer1_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.GameFinish.farmer1_info: object expected\");\n                    message.farmer1_info = $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.fromObject(object.farmer1_info);\n                }\n                if (object.farmer2_info != null) {\n                    if (typeof object.farmer2_info !== \"object\")\n                        throw TypeError(\".twoonone.RoomEventResponse.GameFinish.farmer2_info: object expected\");\n                    message.farmer2_info = $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.fromObject(object.farmer2_info);\n                }\n                switch (object.Winner) {\n                default:\n                    if (typeof object.Winner === \"number\") {\n                        message.Winner = object.Winner;\n                        break;\n                    }\n                    break;\n                case \"ROLE_UNKNOWN\":\n                case 0:\n                    message.Winner = 0;\n                    break;\n                case \"ROLE_LANDOWNER\":\n                case 1:\n                    message.Winner = 1;\n                    break;\n                case \"ROLE_FARMER\":\n                case 2:\n                    message.Winner = 2;\n                    break;\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a GameFinish message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @static\n             * @param {twoonone.RoomEventResponse.GameFinish} message GameFinish\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            GameFinish.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                let object = {};\n                if (options.defaults) {\n                    object.landowner_info = null;\n                    object.farmer1_info = null;\n                    object.farmer2_info = null;\n                    object.Winner = options.enums === String ? \"ROLE_UNKNOWN\" : 0;\n                }\n                if (message.landowner_info != null && message.hasOwnProperty(\"landowner_info\"))\n                    object.landowner_info = $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.toObject(message.landowner_info, options);\n                if (message.farmer1_info != null && message.hasOwnProperty(\"farmer1_info\"))\n                    object.farmer1_info = $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.toObject(message.farmer1_info, options);\n                if (message.farmer2_info != null && message.hasOwnProperty(\"farmer2_info\"))\n                    object.farmer2_info = $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.toObject(message.farmer2_info, options);\n                if (message.Winner != null && message.hasOwnProperty(\"Winner\"))\n                    object.Winner = options.enums === String ? $root.twoonone.Role[message.Winner] === undefined ? message.Winner : $root.twoonone.Role[message.Winner] : message.Winner;\n                return object;\n            };\n\n            /**\n             * Converts this GameFinish to JSON.\n             * @function toJSON\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            GameFinish.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for GameFinish\n             * @function getTypeUrl\n             * @memberof twoonone.RoomEventResponse.GameFinish\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            GameFinish.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/twoonone.RoomEventResponse.GameFinish\";\n            };\n\n            GameFinish.PlayerInfoExtra = (function() {\n\n                /**\n                 * Properties of a PlayerInfoExtra.\n                 * @memberof twoonone.RoomEventResponse.GameFinish\n                 * @interface IPlayerInfoExtra\n                 * @property {twoonone.IPlayerInfo|null} [player_info] PlayerInfoExtra player_info\n                 * @property {Array.<twoonone.ICard>|null} [hand_cards] PlayerInfoExtra hand_cards\n                 */\n\n                /**\n                 * Constructs a new PlayerInfoExtra.\n                 * @memberof twoonone.RoomEventResponse.GameFinish\n                 * @classdesc Represents a PlayerInfoExtra.\n                 * @implements IPlayerInfoExtra\n                 * @constructor\n                 * @param {twoonone.RoomEventResponse.GameFinish.IPlayerInfoExtra=} [properties] Properties to set\n                 */\n                function PlayerInfoExtra(properties) {\n                    this.hand_cards = [];\n                    if (properties)\n                        for (let keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * PlayerInfoExtra player_info.\n                 * @member {twoonone.IPlayerInfo|null|undefined} player_info\n                 * @memberof twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra\n                 * @instance\n                 */\n                PlayerInfoExtra.prototype.player_info = null;\n\n                /**\n                 * PlayerInfoExtra hand_cards.\n                 * @member {Array.<twoonone.ICard>} hand_cards\n                 * @memberof twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra\n                 * @instance\n                 */\n                PlayerInfoExtra.prototype.hand_cards = $util.emptyArray;\n\n                /**\n                 * Creates a new PlayerInfoExtra instance using the specified properties.\n                 * @function create\n                 * @memberof twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra\n                 * @static\n                 * @param {twoonone.RoomEventResponse.GameFinish.IPlayerInfoExtra=} [properties] Properties to set\n                 * @returns {twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra} PlayerInfoExtra instance\n                 */\n                PlayerInfoExtra.create = function create(properties) {\n                    return new PlayerInfoExtra(properties);\n                };\n\n                /**\n                 * Encodes the specified PlayerInfoExtra message. Does not implicitly {@link twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.verify|verify} messages.\n                 * @function encode\n                 * @memberof twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra\n                 * @static\n                 * @param {twoonone.RoomEventResponse.GameFinish.IPlayerInfoExtra} message PlayerInfoExtra message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                PlayerInfoExtra.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.player_info != null && Object.hasOwnProperty.call(message, \"player_info\"))\n                        $root.twoonone.PlayerInfo.encode(message.player_info, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    if (message.hand_cards != null && message.hand_cards.length)\n                        for (let i = 0; i < message.hand_cards.length; ++i)\n                            $root.twoonone.Card.encode(message.hand_cards[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified PlayerInfoExtra message, length delimited. Does not implicitly {@link twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra\n                 * @static\n                 * @param {twoonone.RoomEventResponse.GameFinish.IPlayerInfoExtra} message PlayerInfoExtra message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                PlayerInfoExtra.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a PlayerInfoExtra message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra} PlayerInfoExtra\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                PlayerInfoExtra.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    let end = length === undefined ? reader.len : reader.pos + length, message = new $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra();\n                    while (reader.pos < end) {\n                        let tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1: {\n                                message.player_info = $root.twoonone.PlayerInfo.decode(reader, reader.uint32());\n                                break;\n                            }\n                        case 2: {\n                                if (!(message.hand_cards && message.hand_cards.length))\n                                    message.hand_cards = [];\n                                message.hand_cards.push($root.twoonone.Card.decode(reader, reader.uint32()));\n                                break;\n                            }\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a PlayerInfoExtra message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra} PlayerInfoExtra\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                PlayerInfoExtra.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a PlayerInfoExtra message.\n                 * @function verify\n                 * @memberof twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                PlayerInfoExtra.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.player_info != null && message.hasOwnProperty(\"player_info\")) {\n                        let error = $root.twoonone.PlayerInfo.verify(message.player_info);\n                        if (error)\n                            return \"player_info.\" + error;\n                    }\n                    if (message.hand_cards != null && message.hasOwnProperty(\"hand_cards\")) {\n                        if (!Array.isArray(message.hand_cards))\n                            return \"hand_cards: array expected\";\n                        for (let i = 0; i < message.hand_cards.length; ++i) {\n                            let error = $root.twoonone.Card.verify(message.hand_cards[i]);\n                            if (error)\n                                return \"hand_cards.\" + error;\n                        }\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a PlayerInfoExtra message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra} PlayerInfoExtra\n                 */\n                PlayerInfoExtra.fromObject = function fromObject(object) {\n                    if (object instanceof $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra)\n                        return object;\n                    let message = new $root.twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra();\n                    if (object.player_info != null) {\n                        if (typeof object.player_info !== \"object\")\n                            throw TypeError(\".twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.player_info: object expected\");\n                        message.player_info = $root.twoonone.PlayerInfo.fromObject(object.player_info);\n                    }\n                    if (object.hand_cards) {\n                        if (!Array.isArray(object.hand_cards))\n                            throw TypeError(\".twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.hand_cards: array expected\");\n                        message.hand_cards = [];\n                        for (let i = 0; i < object.hand_cards.length; ++i) {\n                            if (typeof object.hand_cards[i] !== \"object\")\n                                throw TypeError(\".twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra.hand_cards: object expected\");\n                            message.hand_cards[i] = $root.twoonone.Card.fromObject(object.hand_cards[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a PlayerInfoExtra message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra\n                 * @static\n                 * @param {twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra} message PlayerInfoExtra\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                PlayerInfoExtra.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    let object = {};\n                    if (options.arrays || options.defaults)\n                        object.hand_cards = [];\n                    if (options.defaults)\n                        object.player_info = null;\n                    if (message.player_info != null && message.hasOwnProperty(\"player_info\"))\n                        object.player_info = $root.twoonone.PlayerInfo.toObject(message.player_info, options);\n                    if (message.hand_cards && message.hand_cards.length) {\n                        object.hand_cards = [];\n                        for (let j = 0; j < message.hand_cards.length; ++j)\n                            object.hand_cards[j] = $root.twoonone.Card.toObject(message.hand_cards[j], options);\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this PlayerInfoExtra to JSON.\n                 * @function toJSON\n                 * @memberof twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                PlayerInfoExtra.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * Gets the default type url for PlayerInfoExtra\n                 * @function getTypeUrl\n                 * @memberof twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra\n                 * @static\n                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n                 * @returns {string} The default type url\n                 */\n                PlayerInfoExtra.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                    if (typeUrlPrefix === undefined) {\n                        typeUrlPrefix = \"type.googleapis.com\";\n                    }\n                    return typeUrlPrefix + \"/twoonone.RoomEventResponse.GameFinish.PlayerInfoExtra\";\n                };\n\n                return PlayerInfoExtra;\n            })();\n\n            return GameFinish;\n        })();\n\n        return RoomEventResponse;\n    })();\n\n    return twoonone;\n})();\n\nexport { $root as default };\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis([].slice);\n","'use strict';\nvar userAgent = require('../internals/environment-user-agent');\n\n// eslint-disable-next-line redos/no-vulnerable -- safe\nmodule.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar apply = require('../internals/function-apply');\nvar isCallable = require('../internals/is-callable');\nvar ENVIRONMENT = require('../internals/environment');\nvar USER_AGENT = require('../internals/environment-user-agent');\nvar arraySlice = require('../internals/array-slice');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar Function = globalThis.Function;\n// dirty IE9- and Bun 0.3.0- checks\nvar WRAP = /MSIE .\\./.test(USER_AGENT) || ENVIRONMENT === 'BUN' && (function () {\n  var version = globalThis.Bun.version.split('.');\n  return version.length < 3 || version[0] === '0' && (version[1] < 3 || version[1] === '3' && version[2] === '0');\n})();\n\n// IE9- / Bun 0.3.0- setTimeout / setInterval / setImmediate additional parameters fix\n// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers\n// https://github.com/oven-sh/bun/issues/1633\nmodule.exports = function (scheduler, hasTimeArg) {\n  var firstParamIndex = hasTimeArg ? 2 : 1;\n  return WRAP ? function (handler, timeout /* , ...arguments */) {\n    var boundArgs = validateArgumentsLength(arguments.length, 1) > firstParamIndex;\n    var fn = isCallable(handler) ? handler : Function(handler);\n    var params = boundArgs ? arraySlice(arguments, firstParamIndex) : [];\n    var callback = boundArgs ? function () {\n      apply(fn, this, params);\n    } : fn;\n    return hasTimeArg ? scheduler(callback, timeout) : scheduler(callback);\n  } : scheduler;\n};\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar apply = require('../internals/function-apply');\nvar bind = require('../internals/function-bind-context');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar fails = require('../internals/fails');\nvar html = require('../internals/html');\nvar arraySlice = require('../internals/array-slice');\nvar createElement = require('../internals/document-create-element');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\nvar IS_IOS = require('../internals/environment-is-ios');\nvar IS_NODE = require('../internals/environment-is-node');\n\nvar set = globalThis.setImmediate;\nvar clear = globalThis.clearImmediate;\nvar process = globalThis.process;\nvar Dispatch = globalThis.Dispatch;\nvar Function = globalThis.Function;\nvar MessageChannel = globalThis.MessageChannel;\nvar String = globalThis.String;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar $location, defer, channel, port;\n\nfails(function () {\n  // Deno throws a ReferenceError on `location` access without `--location` flag\n  $location = globalThis.location;\n});\n\nvar run = function (id) {\n  if (hasOwn(queue, id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar eventListener = function (event) {\n  run(event.data);\n};\n\nvar globalPostMessageDefer = function (id) {\n  // old engines have not location.origin\n  globalThis.postMessage(String(id), $location.protocol + '//' + $location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(handler) {\n    validateArgumentsLength(arguments.length, 1);\n    var fn = isCallable(handler) ? handler : Function(handler);\n    var args = arraySlice(arguments, 1);\n    queue[++counter] = function () {\n      apply(fn, undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (IS_NODE) {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !IS_IOS) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = eventListener;\n    defer = bind(port.postMessage, port);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (\n    globalThis.addEventListener &&\n    isCallable(globalThis.postMessage) &&\n    !globalThis.importScripts &&\n    $location && $location.protocol !== 'file:' &&\n    !fails(globalPostMessageDefer)\n  ) {\n    defer = globalPostMessageDefer;\n    globalThis.addEventListener('message', eventListener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar anObject = require('../internals/an-object');\nvar iterate = require('../internals/iterate');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\n\nvar push = [].push;\n\n// `Iterator.prototype.toArray` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.toarray\n$({ target: 'Iterator', proto: true, real: true }, {\n  toArray: function toArray() {\n    var result = [];\n    iterate(getIteratorDirect(anObject(this)), push, { that: result, IS_RECORD: true });\n    return result;\n  }\n});\n","'use strict';\n// TODO: Remove from `core-js@4`\nrequire('../modules/es.iterator.to-array');\n","'use strict';\nvar $ = require('../internals/export');\nvar globalThis = require('../internals/global-this');\nvar clearImmediate = require('../internals/task').clear;\n\n// `clearImmediate` method\n// http://w3c.github.io/setImmediate/#si-clearImmediate\n$({ global: true, bind: true, enumerable: true, forced: globalThis.clearImmediate !== clearImmediate }, {\n  clearImmediate: clearImmediate\n});\n","'use strict';\n// TODO: Remove this module from `core-js@4` since it's split to modules listed below\nrequire('../modules/web.clear-immediate');\nrequire('../modules/web.set-immediate');\n","'use strict';\nvar $ = require('../internals/export');\nvar globalThis = require('../internals/global-this');\nvar setTask = require('../internals/task').set;\nvar schedulersFix = require('../internals/schedulers-fix');\n\n// https://github.com/oven-sh/bun/issues/1633\nvar setImmediate = globalThis.setImmediate ? schedulersFix(setTask, false) : setTask;\n\n// `setImmediate` method\n// http://w3c.github.io/setImmediate/#si-setImmediate\n$({ global: true, bind: true, enumerable: true, forced: globalThis.setImmediate !== setImmediate }, {\n  setImmediate: setImmediate\n});\n"],"names":["bind","fn","thisArg","apply","arguments","toString","Object","prototype","getPrototypeOf","kindOf","cache","thing","str","call","slice","toLowerCase","create","kindOfTest","type","typeOfTest","isArray","Array","isUndefined","isBuffer","val","constructor","isFunction","isArrayBuffer","isArrayBufferView","result","ArrayBuffer","isView","buffer","isString","isNumber","isObject","isBoolean","isPlainObject","Symbol","toStringTag","iterator","isDate","isFile","isBlob","isFileList","isStream","pipe","isFormData","kind","FormData","append","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","map","trim","replace","forEach","obj","allOwnKeys","i","l","length","keys","getOwnPropertyNames","len","key","findKey","_key","_global","globalThis","self","window","global","isContextDefined","context","merge","caseless","this","assignValue","targetKey","extend","a","b","stripBOM","content","charCodeAt","inherits","superConstructor","props","descriptors","defineProperty","value","assign","toFlatObject","sourceObj","destObj","filter","propFilter","prop","merged","endsWith","searchString","position","String","undefined","lastIndex","indexOf","toArray","arr","isTypedArray","TypedArray","Uint8Array","forEachEntry","generator","next","done","pair","matchAll","regExp","matches","exec","push","isHTMLForm","toCamelCase","m","p1","p2","toUpperCase","hasOwnProperty","isRegExp","reduceDescriptors","reducer","getOwnPropertyDescriptors","reducedDescriptors","descriptor","name","ret","defineProperties","freezeMethods","enumerable","writable","set","Error","toObjectSet","arrayOrString","delimiter","define","split","noop","toFiniteNumber","defaultValue","Number","isFinite","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","generateString","size","alphabet","Math","random","isSpecCompliantForm","toJSONObject","stack","visit","source","target","reducedValue","isAsyncFn","isThenable","then","catch","_setImmediate","setImmediateSupported","postMessageSupported","setImmediate","token","callbacks","addEventListener","data","shift","cb","postMessage","setTimeout","asap","queueMicrotask","process","nextTick","hasOwnProp","AxiosError","message","code","config","request","response","captureStackTrace","status","utils","toJSON","description","number","fileName","lineNumber","columnNumber","from","error","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","path","dots","concat","join","isFlatArray","some","predicates","test","toFormData","formData","options","TypeError","PlatformFormData","metaTokens","indexes","option","visitor","defaultVisitor","_Blob","Blob","useBlob","convertValue","toISOString","Buffer","JSON","stringify","el","index","exposedHelpers","build","pop","encode","charMap","encodeURIComponent","match","AxiosURLSearchParams","params","_pairs","encoder","_encode","buildURL","url","serialize","serializeFn","serializedParams","hashmarkIndex","InterceptorManager","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","id","clear","h","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","URLSearchParams","isBrowser","classes","protocols","hasBrowserEnv","document","_navigator","navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","origin","location","href","platform","toURLEncodedForm","helpers","isNode","parsePropPath","arrayToObject","formDataToJSON","buildPath","isNumericKey","isLast","entries","stringifySafely","rawValue","parser","parse","e","defaults","transitional","transitionalDefaults","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","formSerializer","_FormData","env","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","rawHeaders","parsed","line","substring","$internals","normalizeHeader","header","normalizeValue","parseTokens","tokens","tokensRE","isValidHeaderName","matchHeaderValue","isHeaderNameFilter","formatHeader","w","char","buildAccessors","accessorName","methodName","arg1","arg2","arg3","configurable","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","parseHeaders","get","has","matcher","delete","deleted","deleteHeader","normalize","format","normalized","targets","asStrings","first","computed","accessor","internals","accessors","defineAccessor","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","resolve","reject","ERR_BAD_REQUEST","floor","parseProtocol","speedometer","samplesCount","min","bytes","timestamps","firstSampleTS","head","tail","chunkLength","now","Date","startedAt","bytesCount","passed","round","throttle","freq","lastArgs","timer","timestamp","threshold","invoke","args","clearTimeout","throttled","flush","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","rate","inRange","progress","estimated","event","progressEventDecorator","asyncDecorator","isMSIE","URL","protocol","host","port","userAgent","write","expires","domain","secure","cookie","toGMTString","read","RegExp","decodeURIComponent","remove","isAbsoluteURL","combineURLs","baseURL","relativeURL","buildFullPath","requestedURL","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","btoa","username","password","unescape","Boolean","isURLSameOrigin","xsrfValue","cookies","isXHRAdapterSupported","XMLHttpRequest","Promise","_config","resolveConfig","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","removeEventListener","onloadend","responseHeaders","getAllResponseHeaders","responseData","responseText","statusText","err","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","subscribe","aborted","send","composeSignals","signals","controller","AbortController","reason","streamChunk","chunk","chunkSize","byteLength","end","pos","readBytes","async","iterable","readStream","stream","asyncIterator","reader","getReader","trackStream","onProgress","onFinish","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","return","highWaterMark","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","encodeText","TextEncoder","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","body","duplex","DEFAULT_CHUNK_SIZE","supportsResponseStream","resolvers","res","_","ERR_NOT_SUPPORT","getBodyLength","_request","resolveBodyLength","getContentLength","fetchOptions","composedSignal","toAbortSignal","requestContentLength","contentTypeHeader","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","knownAdapters","http","httpAdapter","xhr","xhrAdapter","fetchAdapter","renderReason","isResolvedHandle","getAdapter","adapters","nameOrAdapter","rejectedReasons","reasons","state","s","throwIfCancellationRequested","throwIfRequested","dispatchRequest","VERSION","validators","deprecatedWarnings","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","opt","validator","ERR_BAD_OPTION","version","formatMessage","desc","opts","ERR_DEPRECATED","console","warn","spelling","correctSpelling","Axios","instanceConfig","interceptors","configOrUrl","dummy","boolean","function","baseUrl","withXsrfToken","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","fullPath","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","c","spread","callback","isAxiosError","payload","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","createInstance","defaultConfig","instance","axios","Cancel","all","promises","formToJSON","default","prefix","GetRooms","TWOONONE_API","GetRoom","req","room_hash","CreateRoom","JoinRoom","ExitRoom","RobLandowner","NoRobLandowner","SendCard","j","sendcards","log","NoSendCard","StartRoom","_typeof","o","toPrimitive","t","r","toPropertyKey","_defineProperty","TwoononeError","msg","super","req_body","api","resp","twoonone","GetRoomsResponse","errorHandle","ERROR_UNKNOWN","GetRoomResponse","CreateRoomResponse","JoinRoomResponse","ExitRoomResponse","RobLandownerResponse","NoRobLandownerResponse","SendCardResponse","NoSendCardResponse","StartRoomResponse","RoomEvent","ws","ref","reactive","closed","CloseEvent","wait","watch","once","v","WebSocket","TWOONONE_API_HOST","onmessage","me","onclose","onopen","timer_id","mes","at","sync","handle","Body","statusCode2Error","ERROR_NO_AUTH","asPromise","ctx","offset","pending","module","exports","require","base64","string","p","n","charAt","ceil","b64","s64","start","parts","fromCharCode","invalidEncoding","decode","EventEmitter","on","evt","off","listeners","emit","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","buf","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","exponent","LN2","mantissa","pow","readFloat_ieee754","readUint","uint","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","pool","alloc","SIZE","MAX","slab","utf8","c1","c2","protobuf","configure","util","_configure","Writer","BufferWriter","Reader","BufferReader","rpc","roots","LongBits","indexOutOfRange","writeLength","RangeError","create_array","readLongVarint","bits","readFixed32_end","readFixed64","_slice","subarray","uint32","int32","sint32","bool","fixed32","sfixed32","float","double","nativeBuffer","skip","skipType","wireType","BufferReader_","Long","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","finish","endedByRPC","zero","toNumber","zzEncode","zeroHash","fromNumber","parseInt","fromString","low","high","unsigned","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","src","ifNotSet","newError","CustomError","properties","versions","node","emptyArray","freeze","emptyObject","isInteger","isset","isSet","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","encoding","allocUnsafe","Op","State","writer","states","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","fork","reset","ldelim","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","$Reader","$protobuf","$Writer","$util","$root","valuesById","values","Role","Card","encodeDelimited","tag","decodeDelimited","verify","fromObject","object","toObject","getTypeUrl","typeUrlPrefix","CardType","RobLandownerInfo","action","action_time","fromValue","long","Action","sender_info","sendcard_type","sendcard_size","sendcard_continuous","PlayerInfo","arrays","user","table","UserInfo","TableInfo","roblandowner_info","role","cards_length","PlayerInfoFull","extra","ExtraInfo","hand_cards","RoomStage","RoomInfo","player_infos","$oneOfFields","basic_coin","multiple","stage","operator_now","_operator_now","oneofs","GetRoomRequest","room_info","end2","tag2","keys2","objects","CreateRoomRequest","JoinRoomRequest","ExitRoomRequest","RobLandownerRequest","NoRobLandownerRequest","SendCardRequest","NoSendCardRequest","GetDailyCoinRequest","GetDailyCoinResponse","StartRoomRequest","GetRoomsRequest","room_infos","RoomEventResponse","roblandowner_into_sendingcard","roblandowner_continuous_rob","sendcard_spring_notice","sendcard_boom_notice","sendcard_kingboom_notice","game_finish","sendcard_cardnumber_notice","room_join_player","room_exit_player","room_started","room_rob_landowner","room_norob_landowner","room_sendcard","room_no_sendcard","room_re_roblandowner","RobLandownerIntoSendingCard","RobLandownerContinuousRob","SendCardSpringNotice","SendCardBoomNotice","SendCardKingBoomNotice","GameFinish","SendCardCardNumberNotice","RoomJoinPlayer","RoomExitPlayer","RoomStarted","RoomRobLandowner","RoomNoRobLandowner","RoomSendCard","RoomNoSendCard","RoomReRobLandowner","joiner_info","leaver_info","next_operator_info","operator_info","landowner_cards","sendcarder_info","notice_target_info","landowner_info","farmer1_info","farmer2_info","Winner","PlayerInfoExtra","player_info","uncurryThis","NATIVE_BIND","FunctionPrototype","Function","Reflect","isCallable","ENVIRONMENT","USER_AGENT","arraySlice","validateArgumentsLength","WRAP","Bun","scheduler","hasTimeArg","firstParamIndex","handler","boundArgs","$location","defer","channel","hasOwn","fails","html","createElement","IS_IOS","IS_NODE","clearImmediate","Dispatch","MessageChannel","counter","queue","ONREADYSTATECHANGE","run","runner","eventListener","globalPostMessageDefer","port2","port1","appendChild","removeChild","$","anObject","iterate","getIteratorDirect","proto","real","that","IS_RECORD","forced","setTask","schedulersFix"],"sourceRoot":""}